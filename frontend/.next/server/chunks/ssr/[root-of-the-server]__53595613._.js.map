{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/components/ui/Card.tsx"],"sourcesContent":["import React from 'react';\r\nimport { cn } from '@/lib/utils';\r\n\r\ninterface CardProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  children: React.ReactNode;\r\n  variant?: 'default' | 'glass' | 'gradient';\r\n}\r\n\r\nconst Card = React.forwardRef<HTMLDivElement, CardProps>(\r\n  ({ className, variant = 'default', children, ...props }, ref) => {\r\n    const baseClasses = 'card-stellar rounded-xl shadow-lg border border-stellar-100/50';\r\n\r\n    const variants = {\r\n      default: 'bg-white/80 backdrop-blur-sm',\r\n      glass: 'bg-white/10 backdrop-blur-md border-white/20',\r\n      gradient: 'bg-gradient-to-br from-white/90 to-white/70',\r\n    };\r\n\r\n    return (\r\n      <div\r\n        className={cn(\r\n          baseClasses,\r\n          variants[variant],\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nCard.displayName = 'Card';\r\n\r\nexport default Card;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAOA,MAAM,qBAAO,qMAAA,CAAA,UAAK,CAAC,UAAU,CAC3B,CAAC,EAAE,SAAS,EAAE,UAAU,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IACvD,MAAM,cAAc;IAEpB,MAAM,WAAW;QACf,SAAS;QACT,OAAO;QACP,UAAU;IACZ;IAEA,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,+HAAA,CAAA,KAAE,AAAD,EACV,aACA,QAAQ,CAAC,QAAQ,EACjB;QAEF,KAAK;QACJ,GAAG,KAAK;kBAER;;;;;;AAGP;AAGF,KAAK,WAAW,GAAG;uCAEJ","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/components/atoms/ConnectButton.tsx"],"sourcesContent":["'use client'\r\nimport freighter from '@stellar/freighter-api'\r\n\r\nexport async function conectarFreighter(): Promise<string> {\r\n  if (typeof (window as any).freighterApi === 'undefined') {\r\n    throw new Error('Freighter no detectada. Verifica extensión y permisos de sitio.')\r\n  }\r\n  const c = await freighter.isConnected(); if (!c.isConnected) throw new Error('Freighter no conectada')\r\n  const p = await freighter.setAllowed();  if (!p.isAllowed)   throw new Error('Permiso denegado')\r\n  const a1 = await freighter.getAddress(); if (a1.address) return a1.address\r\n  const a2 = await freighter.requestAccess(); if (a2.error || !a2.address) throw new Error(a2.error || 'Sin address')\r\n  return a2.address\r\n}\r\n"],"names":[],"mappings":";;;AACA;AADA;;AAGO,eAAe;IACpB,IAAI,OAAO,AAAC,OAAe,YAAY,KAAK,aAAa;QACvD,MAAM,IAAI,MAAM;IAClB;IACA,MAAM,IAAI,MAAM,sKAAA,CAAA,UAAS,CAAC,WAAW;IAAI,IAAI,CAAC,EAAE,WAAW,EAAE,MAAM,IAAI,MAAM;IAC7E,MAAM,IAAI,MAAM,sKAAA,CAAA,UAAS,CAAC,UAAU;IAAK,IAAI,CAAC,EAAE,SAAS,EAAI,MAAM,IAAI,MAAM;IAC7E,MAAM,KAAK,MAAM,sKAAA,CAAA,UAAS,CAAC,UAAU;IAAI,IAAI,GAAG,OAAO,EAAE,OAAO,GAAG,OAAO;IAC1E,MAAM,KAAK,MAAM,sKAAA,CAAA,UAAS,CAAC,aAAa;IAAI,IAAI,GAAG,KAAK,IAAI,CAAC,GAAG,OAAO,EAAE,MAAM,IAAI,MAAM,GAAG,KAAK,IAAI;IACrG,OAAO,GAAG,OAAO;AACnB","debugId":null}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/components/molecules/wallet-data/index.tsx"],"sourcesContent":["'use client'\r\nimport { useState } from 'react'\r\nimport { conectarFreighter } from '@/components/atoms/ConnectButton'\r\n\r\nexport function WalletData() {\r\n  const [addr, setAddr] = useState<string>()\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState<string>()\r\n\r\n  const handleConnect = async () => {\r\n    setIsLoading(true)\r\n    setError(undefined)\r\n    \r\n    try {\r\n      const address = await conectarFreighter()\r\n      setAddr(address)\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido'\r\n      \r\n      // Si Freighter no está detectada, redirigir a la página oficial\r\n      if (errorMessage.includes('Freighter no detectada')) {\r\n        window.open('https://freighter.app/', '_blank')\r\n        return\r\n      }\r\n      \r\n      setError(errorMessage)\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleDisconnect = () => {\r\n    setAddr(undefined)\r\n    setError(undefined)\r\n  }\r\n\r\n  if (addr) {\r\n    return (\r\n      <div className=\"flex items-center space-x-3\">\r\n        <div className=\"px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm font-medium\">\r\n          {addr.slice(0,4)}…{addr.slice(-4)}\r\n        </div>\r\n        <button \r\n          onClick={handleDisconnect}\r\n          className=\"text-xs text-red-600 hover:text-red-700\"\r\n        >\r\n          Desconectar\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-end space-y-2\">\r\n      <button \r\n        className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-medium disabled:opacity-50\"\r\n        onClick={handleConnect}\r\n        disabled={isLoading}\r\n      >\r\n        {isLoading ? 'Conectando...' : 'Connect Wallet'}\r\n      </button>\r\n      {error && (\r\n        <p className=\"text-xs text-red-600 text-right max-w-xs\">\r\n          {error}\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAIO,SAAS;IACd,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD;IAC/B,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD;IAEjC,MAAM,gBAAgB;QACpB,aAAa;QACb,SAAS;QAET,IAAI;YACF,MAAM,UAAU,MAAM,CAAA,GAAA,wJAAA,CAAA,oBAAiB,AAAD;YACtC,QAAQ;QACV,EAAE,OAAO,KAAK;YACZ,MAAM,eAAe,eAAe,QAAQ,IAAI,OAAO,GAAG;YAE1D,gEAAgE;YAChE,IAAI,aAAa,QAAQ,CAAC,2BAA2B;gBACnD,OAAO,IAAI,CAAC,0BAA0B;gBACtC;YACF;YAEA,SAAS;QACX,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,mBAAmB;QACvB,QAAQ;QACR,SAAS;IACX;IAEA,IAAI,MAAM;QACR,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;wBACZ,KAAK,KAAK,CAAC,GAAE;wBAAG;wBAAE,KAAK,KAAK,CAAC,CAAC;;;;;;;8BAEjC,8OAAC;oBACC,SAAS;oBACT,WAAU;8BACX;;;;;;;;;;;;IAKP;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBACC,WAAU;gBACV,SAAS;gBACT,UAAU;0BAET,YAAY,kBAAkB;;;;;;YAEhC,uBACC,8OAAC;gBAAE,WAAU;0BACV;;;;;;;;;;;;AAKX","debugId":null}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/components/layout/Header.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Search, Bell } from \"lucide-react\";\r\nimport Link from \"next/link\";\r\nimport { useApp } from \"@/contexts/AppContext\";\r\nimport { WalletData } from \"@/components/molecules/wallet-data\";\r\nimport Image from \"next/image\";\r\n\r\ninterface HeaderProps {\r\n  showSearch?: boolean;\r\n}\r\n\r\nexport default function Header({ showSearch = true }: HeaderProps) {\r\n  const { state, clearNotifications } = useApp();\r\n  const { user, notifications } = state;\r\n\r\n  return (\r\n    <header className=\"bg-white/90 backdrop-blur-sm border-b border-stellar-100 sticky top-0 z-50\">\r\n      <div className=\"max-w-screen-xl mx-auto px-8 py-4\">\r\n        <div className=\"flex items-center justify-between\">\r\n          {/* Logo */}\r\n          <Link href=\"/\" className=\"flex items-center space-x-3\">\r\n            <Image \r\n              src=\"/favicon.png\" \r\n              alt=\"Stellar Logo\" \r\n              width={32} \r\n              height={32} \r\n              className=\"w-8 h-8\"\r\n            />\r\n            <span className=\"text-2xl font-bold gradient-text\">AhorroStellar</span>\r\n          </Link>\r\n\r\n          {/* Search Bar */}\r\n          {showSearch && (\r\n            <div className=\"flex-1 max-w-md mx-8\">\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search projects, users...\"\r\n                  className=\"w-full pl-10 pr-4 py-2 border border-stellar-100 rounded-lg focus:ring-2 focus:ring-stellarBlue focus:border-transparent\"\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Right Side - Notifications & Profile */}\r\n          <div className=\"flex items-center space-x-4\">\r\n            <button \r\n              className=\"p-3 rounded-lg hover:bg-stellar-100 transition-colors relative\"\r\n              onClick={clearNotifications}\r\n            >\r\n              <Bell className=\"w-6 h-6 text-gray-600\" />\r\n              {notifications > 0 && (\r\n                <span className=\"absolute -top-1 -right-1 w-5 h-5 bg-red-500 rounded-full text-white text-xs flex items-center justify-center\">\r\n                  {notifications}\r\n                </span>\r\n              )}\r\n            </button>\r\n\r\n            {/* Wallet Connect Button */}\r\n            <WalletData />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAYe,SAAS,OAAO,EAAE,aAAa,IAAI,EAAe;IAC/D,MAAM,EAAE,KAAK,EAAE,kBAAkB,EAAE,GAAG,CAAA,GAAA,0IAAA,CAAA,SAAM,AAAD;IAC3C,MAAM,EAAE,IAAI,EAAE,aAAa,EAAE,GAAG;IAEhC,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAI,WAAU;;0CACvB,8OAAC,6HAAA,CAAA,UAAK;gCACJ,KAAI;gCACJ,KAAI;gCACJ,OAAO;gCACP,QAAQ;gCACR,WAAU;;;;;;0CAEZ,8OAAC;gCAAK,WAAU;0CAAmC;;;;;;;;;;;;oBAIpD,4BACC,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,sMAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;8CAClB,8OAAC;oCACC,MAAK;oCACL,aAAY;oCACZ,WAAU;;;;;;;;;;;;;;;;;kCAOlB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,WAAU;gCACV,SAAS;;kDAET,8OAAC,kMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;oCACf,gBAAgB,mBACf,8OAAC;wCAAK,WAAU;kDACb;;;;;;;;;;;;0CAMP,8OAAC,sKAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMvB","debugId":null}},
    {"offset": {"line": 334, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/components/layout/Sidebar.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Home, FolderOpen, LogOut, Target, Shield, Activity } from \"lucide-react\";\r\nimport Link from \"next/link\";\r\nimport { usePathname } from \"next/navigation\";\r\nimport { useApp } from \"@/contexts/AppContext\";\r\n\r\nexport default function Sidebar() {\r\n  const pathname = usePathname();\r\n  const { state, disconnectWallet } = useApp();\r\n  const { user, wallet } = state;\r\n\r\n  const navigation = [\r\n    { name: \"Dashboard\", href: \"/dashboard\", icon: Home },\r\n    { name: \"Vote-Save\", href: \"/stake\", icon: Target },\r\n    { name: \"Reflector Debug\", href: \"/reflector-debug\", icon: Activity },\r\n  ];\r\n\r\n  const isActive = (href: string) => pathname === href;\r\n\r\n  const handleLogout = () => {\r\n    disconnectWallet();\r\n    // In a real app, you would also clear user session\r\n  };\r\n\r\n  return (\r\n    <aside className=\"w-72 bg-white/80 backdrop-blur-sm border-r border-gray-200 sticky top-16 h-screen overflow-y-auto hidden lg:block\">\r\n      <div className=\"p-6\">\r\n        {/* Navigation */}\r\n        <nav className=\"space-y-2 mb-8\">\r\n          {navigation.map((item) => {\r\n            const Icon = item.icon;\r\n            return (\r\n              <Link\r\n                key={item.name}\r\n                href={item.href}\r\n                className={`flex items-center space-x-3 px-4 py-3 rounded-lg transition-colors ${\r\n                  isActive(item.href)\r\n                    ? \"bg-blue-100 text-blue-700 font-medium shadow-sm\"\r\n                    : \"hover:bg-blue-50 text-gray-600 hover:text-blue-700\"\r\n                }`}\r\n              >\r\n                <Icon className=\"w-5 h-5\" />\r\n                <span>{item.name}</span>\r\n              </Link>\r\n            );\r\n          })}\r\n        </nav>\r\n\r\n        {/* Quick Stats */}\r\n        <div className=\"space-y-4 mb-8\">\r\n          <h3 className=\"text-sm font-semibold text-gray-700 mb-4\">Quick Summary</h3>\r\n          \r\n          <div className=\"bg-blue-50 rounded-lg p-4\">\r\n            <div className=\"flex items-center justify-between mb-2\">\r\n              <span className=\"text-sm text-gray-600\">USDC Bloqueados</span>\r\n              <span className=\"text-sm font-semibold text-blue-600\">\r\n                {user?.activeStakes || '0'} USDC\r\n              </span>\r\n            </div>\r\n            <div className=\"flex items-center justify-between mb-2\">\r\n              <span className=\"text-sm text-gray-600\">Backed Projects</span>\r\n              <span className=\"text-sm font-semibold text-green-600\">\r\n                {state.myStakedProjects.length}\r\n              </span>\r\n            </div>\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm text-gray-600\">Reputation</span>\r\n              <span className=\"text-sm font-semibold text-purple-600\">\r\n                {user?.reputationLevel || 'Bronze'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Security Info */}\r\n        <div className=\"space-y-3 mb-8\">\r\n          <h3 className=\"text-sm font-semibold text-gray-700 mb-4\">Security</h3>\r\n          \r\n          <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\r\n            <div className=\"flex items-center space-x-2 mb-2\">\r\n              <Shield className=\"w-4 h-4 text-green-600\" />\r\n              <span className=\"text-sm font-medium text-green-700\">Your savings are safe</span>\r\n            </div>\r\n            <div className=\"space-y-1 text-xs text-green-600\">\r\n              <p>• USDC se bloquea por 7 días</p>\r\n              <p>• Se recupera automáticamente</p>\r\n              <p>• Sin riesgo de pérdida</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Bottom Actions */}\r\n        <div className=\"border-t border-gray-200 pt-6\">\r\n          <div className=\"space-y-2\">\r\n            <button \r\n              onClick={handleLogout}\r\n              className=\"flex items-center space-x-3 px-4 py-3 text-red-600 hover:text-red-700 hover:bg-red-50 rounded-lg transition-colors w-full\"\r\n            >\r\n              <LogOut className=\"w-5 h-5\" />\r\n              <span>Sign Out</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </aside>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AALA;;;;;;AAOe,SAAS;IACtB,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,EAAE,KAAK,EAAE,gBAAgB,EAAE,GAAG,CAAA,GAAA,0IAAA,CAAA,SAAM,AAAD;IACzC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG;IAEzB,MAAM,aAAa;QACjB;YAAE,MAAM;YAAa,MAAM;YAAc,MAAM,mMAAA,CAAA,OAAI;QAAC;QACpD;YAAE,MAAM;YAAa,MAAM;YAAU,MAAM,sMAAA,CAAA,SAAM;QAAC;QAClD;YAAE,MAAM;YAAmB,MAAM;YAAoB,MAAM,0MAAA,CAAA,WAAQ;QAAC;KACrE;IAED,MAAM,WAAW,CAAC,OAAiB,aAAa;IAEhD,MAAM,eAAe;QACnB;IACA,mDAAmD;IACrD;IAEA,qBACE,8OAAC;QAAM,WAAU;kBACf,cAAA,8OAAC;YAAI,WAAU;;8BAEb,8OAAC;oBAAI,WAAU;8BACZ,WAAW,GAAG,CAAC,CAAC;wBACf,MAAM,OAAO,KAAK,IAAI;wBACtB,qBACE,8OAAC,4JAAA,CAAA,UAAI;4BAEH,MAAM,KAAK,IAAI;4BACf,WAAW,CAAC,mEAAmE,EAC7E,SAAS,KAAK,IAAI,IACd,oDACA,sDACJ;;8CAEF,8OAAC;oCAAK,WAAU;;;;;;8CAChB,8OAAC;8CAAM,KAAK,IAAI;;;;;;;2BATX,KAAK,IAAI;;;;;oBAYpB;;;;;;8BAIF,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAA2C;;;;;;sCAEzD,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAK,WAAU;sDAAwB;;;;;;sDACxC,8OAAC;4CAAK,WAAU;;gDACb,MAAM,gBAAgB;gDAAI;;;;;;;;;;;;;8CAG/B,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAK,WAAU;sDAAwB;;;;;;sDACxC,8OAAC;4CAAK,WAAU;sDACb,MAAM,gBAAgB,CAAC,MAAM;;;;;;;;;;;;8CAGlC,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAK,WAAU;sDAAwB;;;;;;sDACxC,8OAAC;4CAAK,WAAU;sDACb,MAAM,mBAAmB;;;;;;;;;;;;;;;;;;;;;;;;8BAOlC,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAA2C;;;;;;sCAEzD,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,sMAAA,CAAA,SAAM;4CAAC,WAAU;;;;;;sDAClB,8OAAC;4CAAK,WAAU;sDAAqC;;;;;;;;;;;;8CAEvD,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;sDAAE;;;;;;sDACH,8OAAC;sDAAE;;;;;;sDACH,8OAAC;sDAAE;;;;;;;;;;;;;;;;;;;;;;;;8BAMT,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BACC,SAAS;4BACT,WAAU;;8CAEV,8OAAC,0MAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;8CAClB,8OAAC;8CAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOpB","debugId":null}},
    {"offset": {"line": 655, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/components/layout/Layout.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from 'react';\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\n\r\ninterface LayoutProps {\r\n  children: React.ReactNode;\r\n  showSidebar?: boolean;\r\n  showSearch?: boolean;\r\n}\r\n\r\nexport default function Layout({ children, showSidebar = true, showSearch = true }: LayoutProps) {\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-light to-white\">\r\n      <Header showSearch={showSearch} />\r\n      <div className=\"flex\">\r\n        {showSidebar && <Sidebar />}\r\n        <main className=\"flex-1 p-4 lg:p-8\">\r\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            {children}\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAYe,SAAS,OAAO,EAAE,QAAQ,EAAE,cAAc,IAAI,EAAE,aAAa,IAAI,EAAe;IAC7F,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,kJAAA,CAAA,UAAM;gBAAC,YAAY;;;;;;0BACpB,8OAAC;gBAAI,WAAU;;oBACZ,6BAAe,8OAAC,mJAAA,CAAA,UAAO;;;;;kCACxB,8OAAC;wBAAK,WAAU;kCACd,cAAA,8OAAC;4BAAI,WAAU;sCACZ;;;;;;;;;;;;;;;;;;;;;;;AAMb","debugId":null}},
    {"offset": {"line": 716, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/lib/reader.ts"],"sourcesContent":["// [AhorroStellar][Reflector]\r\nimport { StrKey } from '@stellar/stellar-sdk'\r\n\r\nexport function getReaderPk(): string {\r\n  const pk = process.env.NEXT_PUBLIC_READONLY_PUBLIC_KEY || ''\r\n  \r\n  // If no public key is configured, use a demo key for testing\r\n  if (!pk || pk === '<TU_PUBLIC_KEY_G...>') {\r\n    console.warn('NEXT_PUBLIC_READONLY_PUBLIC_KEY not configured, using demo key')\r\n    return 'GDEMO123456789012345678901234567890123456789012345678901234567890'\r\n  }\r\n  \r\n  // Validate the public key format\r\n  if (!StrKey.isValidEd25519PublicKey(pk)) {\r\n    console.warn('Invalid public key format, using demo key')\r\n    return 'GDEMO123456789012345678901234567890123456789012345678901234567890'\r\n  }\r\n  \r\n  console.log('Using real Reflector account:', pk.slice(0, 6) + '...' + pk.slice(-6))\r\n  return pk\r\n}"],"names":[],"mappings":"AAAA,6BAA6B;;;;AAC7B;;AAEO,SAAS;IACd,MAAM,KAAK,gGAA+C;IAE1D,6DAA6D;IAC7D;;IAKA,iCAAiC;IACjC,IAAI,CAAC,2JAAA,CAAA,SAAM,CAAC,uBAAuB,CAAC,KAAK;QACvC,QAAQ,IAAI,CAAC;QACb,OAAO;IACT;IAEA,QAAQ,GAAG,CAAC,iCAAiC,GAAG,KAAK,CAAC,GAAG,KAAK,QAAQ,GAAG,KAAK,CAAC,CAAC;IAChF,OAAO;AACT","debugId":null}},
    {"offset": {"line": 739, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/lib/reflector.ts"],"sourcesContent":["// [AhorroStellar][Reflector] - KALE x Reflector Hackathon 2025\r\n// Based on official @reflector/oracle-client v6.1.1\r\nimport {\r\n  rpc, Contract, TransactionBuilder, BASE_FEE, Networks, xdr, scValToBigInt, Operation, Address, Asset as StellarAsset, hash, StrKey\r\n} from '@stellar/stellar-sdk'\r\nimport { getReaderPk } from '@/lib/reader'\r\n\r\nconst RPC = process.env.NEXT_PUBLIC_SOROBAN_RPC_PRIMARY || 'https://soroban-testnet.stellar.org'\r\nconst NET = process.env.NEXT_PUBLIC_STELLAR_NETWORK_PASSPHRASE || Networks.TESTNET\r\n\r\n// Reflector Contract IDs (Testnet) - Official from Stellar Docs\r\nconst CID_USDC = process.env.NEXT_PUBLIC_REFLECTOR_CONTRACT_ID_USDC || 'CAVLP5DH2GJPZMVO7IJY4CVOD5MWEFTJFVPD2YY2FQXOQHRGHK4D6HLP'\r\nconst CID_FX   = process.env.NEXT_PUBLIC_REFLECTOR_CONTRACT_ID_FX || 'CCSSOHTBL3LEWUCBBEB5NJFC2OKFRC74OWEIJIZLRJBGAAU4VMU5NV4W'\r\nconst CID_CEX  = process.env.NEXT_PUBLIC_REFLECTOR_CONTRACT_ID_CEX || 'CCYOZJCOPG34LLQQ7N24YXBM7LL62R7ONMZ3G6WZAAYPB5OYKOMJRN63'\r\n\r\nconst server = new rpc.Server(RPC, { allowHttp: true })\r\nconst DEC = 14\r\nconst scale = (v: bigint, d=DEC) => Number(v) / 10**d\r\n\r\n// Asset Types (from official Reflector client)\r\nenum AssetType {\r\n  Stellar = 1,\r\n  Other = 2\r\n}\r\n\r\n// Helper to create ScVal from string (SEP-40 compatible)\r\nconst createSymbol = (symbol: string) => xdr.ScVal.scvSymbol(symbol)\r\n\r\n// Helper to create ScVal from string (for asset names)\r\nconst createString = (str: string) => xdr.ScVal.scvString(str)\r\n\r\n/**\r\n * Build Asset ScVal from asset object (based on official Reflector client)\r\n * @param asset - Asset object with type and code\r\n * @returns ScVal representation of the asset\r\n */\r\nfunction buildAssetScVal(asset: { type: AssetType; code: string }): xdr.ScVal {\r\n  let stellarAsset: StellarAsset | null = null\r\n  \r\n  switch (asset.type) {\r\n    case AssetType.Stellar: {\r\n      const splittedCode = asset.code.split(':')\r\n      if (splittedCode.length === 2) {\r\n        const [assetCode, issuer] = splittedCode\r\n        if (!assetCode || !issuer) {\r\n          throw new Error('Asset code and issuer must be defined')\r\n        }\r\n        if (!StrKey.isValidEd25519PublicKey(issuer)) {\r\n          throw new Error('Asset issuer must be a valid ed25519 public key')\r\n        }\r\n        stellarAsset = new StellarAsset(assetCode, issuer)\r\n      } else if (asset.code === 'XLM') {\r\n        stellarAsset = StellarAsset.native()\r\n      } else {\r\n        // Contract ID\r\n        if (!StrKey.isValidContract(asset.code)) {\r\n          throw new Error(`Asset code ${asset.code} is invalid contract ID`)\r\n        }\r\n        return new Address(asset.code).toScVal()\r\n      }\r\n      break\r\n    }\r\n    case AssetType.Other:\r\n      if (asset.code.length > 32) {\r\n        throw new Error('Asset code must be 32 characters or less')\r\n      }\r\n      return createSymbol(asset.code)\r\n    default:\r\n      throw new Error(`Asset type ${asset.type} is not supported`)\r\n  }\r\n  \r\n  if (stellarAsset) {\r\n    const assetContractId = new xdr.HashIdPreimageContractId({\r\n      networkId: hash(Buffer.from(NET)),\r\n      contractIdPreimage: xdr.ContractIdPreimage.contractIdPreimageFromAsset(stellarAsset.toXDRObject())\r\n    })\r\n    const preimage = xdr.HashIdPreimage.envelopeTypeContractId(assetContractId)\r\n    const contractId = StrKey.encodeContract(hash(preimage.toXDR()))\r\n    return new Address(contractId).toScVal()\r\n  }\r\n  \r\n  throw new Error('Failed to build asset ScVal')\r\n}\r\n\r\n/**\r\n * Parse Soroban result from transaction response (based on official Reflector client)\r\n * @param resultMetaXdr - Transaction result meta XDR\r\n * @returns Parsed result\r\n */\r\nfunction parseSorobanResult(resultMetaXdr: any): any {\r\n  if (!resultMetaXdr || !resultMetaXdr.returnValue) {\r\n    return null\r\n  }\r\n  \r\n  try {\r\n    return scValToBigInt(resultMetaXdr.returnValue)\r\n  } catch (error) {\r\n    console.warn('Failed to parse Soroban result:', error)\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Simulate a read-only contract call using SEP-40 interface\r\n * @param contractId - Reflector contract ID\r\n * @param method - Method name (lastprice, decimals, etc.)\r\n * @param args - Arguments as ScVal array\r\n * @returns Decoded result as number\r\n */\r\nexport async function simulateRead(contractId: string, method: string, args: xdr.ScVal[]): Promise<number> {\r\n  try {\r\n    const reader = getReaderPk()\r\n    \r\n    // Check if we're using a demo key\r\n    if (reader.startsWith('GDEMO')) {\r\n      console.warn('🔧 DEMO MODE: Using fallback prices (configure .env.local for real Reflector)')\r\n      // Return demo prices based on method and contract\r\n      if (method === 'lastprice') {\r\n        if (contractId === CID_USDC) return 1.0  // USDC/USD\r\n        if (contractId === CID_CEX) return 0.12  // XLM/USD\r\n      }\r\n      if (method === 'x_last_price') {\r\n        if (contractId === CID_FX) return 1000   // USD/CLP\r\n        if (contractId === CID_CEX) return 0.12  // XLM/USD\r\n      }\r\n      if (method === 'decimals') return 14\r\n      if (method === 'last_timestamp') return Math.floor(Date.now() / 1000)\r\n      return 1.0 // Default fallback\r\n    }\r\n    \r\n    console.log('🚀 REAL REFLECTOR: Fetching live prices from Oracle')\r\n    \r\n  const account = await server.getAccount(reader)\r\n  const contract = new Contract(contractId)\r\n    \r\n    const tx = new TransactionBuilder(account, { \r\n      fee: BASE_FEE,\r\n      networkPassphrase: NET \r\n    })\r\n    .addOperation(contract.call(method, ...args))\r\n      .setTimeout(30)\r\n    .build()\r\n    \r\n  const sim = await server.simulateTransaction(tx)\r\n    \r\n    if (rpc.Api.isSimulationError(sim)) {\r\n      throw new Error(`Simulation error: ${sim.error}`)\r\n    }\r\n    \r\n  const retval = (sim as any).result?.retval ?? (sim as any).result\r\n    if (!retval) {\r\n      throw new Error('No retval from simulation')\r\n    }\r\n    \r\n    const bigIntValue = scValToBigInt(retval)\r\n    return scale(bigIntValue)\r\n    \r\n  } catch (error) {\r\n    console.error(`Error in simulateRead(${contractId}, ${method}):`, error)\r\n    \r\n    // If it's an account error, fall back to demo prices\r\n    if (error instanceof Error && (error.message.includes('Account not found') || error.message.includes('invalid checksum'))) {\r\n      console.warn('Account error detected, falling back to demo prices')\r\n      // Return demo prices based on method and contract\r\n      if (method === 'lastprice') {\r\n        if (contractId === CID_USDC) return 1.0  // USDC/USD\r\n        if (contractId === CID_CEX) return 0.12  // XLM/USD\r\n      }\r\n      if (method === 'x_last_price') {\r\n        if (contractId === CID_FX) return 1000   // USD/CLP\r\n        if (contractId === CID_CEX) return 0.12  // XLM/USD\r\n      }\r\n      if (method === 'decimals') return 14\r\n      if (method === 'last_timestamp') return Math.floor(Date.now() / 1000)\r\n      return 1.0 // Default fallback\r\n    }\r\n    \r\n    throw error\r\n  }\r\n}\r\n\r\n/**\r\n * Get oracle decimals (SEP-40 standard)\r\n * @param contractId - Reflector contract ID\r\n * @returns Number of decimals\r\n */\r\nexport async function oracleDecimals(contractId: string): Promise<number> {\r\n  try {\r\n    const raw = await simulateRead(contractId, 'decimals', [])\r\n    return Math.floor(raw)\r\n  } catch (error) {\r\n    console.warn(`Failed to get decimals for ${contractId}, using default ${DEC}`)\r\n    return DEC\r\n  }\r\n}\r\n\r\n/**\r\n * Get USDC/USD price from Reflector (Stellar Public Assets)\r\n * @returns USDC price in USD\r\n */\r\nexport async function priceUSDCinUSD(): Promise<number> {\r\n  try {\r\n    // Using official Reflector client method: lastPrice(asset)\r\n    const usdcAsset = { type: AssetType.Other, code: 'USDC' }\r\n    const raw = await simulateRead(CID_USDC, 'lastprice', [\r\n      buildAssetScVal(usdcAsset)\r\n    ])\r\n    return raw\r\n  } catch (error) {\r\n    console.error('Failed to get USDC/USD price:', error)\r\n    // Fallback to demo price\r\n    return 1.0\r\n  }\r\n}\r\n\r\n/**\r\n * Get USD/CLP exchange rate from Reflector (Foreign Exchange)\r\n * @returns USD per CLP\r\n */\r\nexport async function usdPerCLP(): Promise<number> {\r\n  try {\r\n    // Using official Reflector client method: xLastPrice(base, quote)\r\n    const usdAsset = { type: AssetType.Other, code: 'USD' }\r\n    const clpAsset = { type: AssetType.Other, code: 'CLP' }\r\n    const raw = await simulateRead(CID_FX, 'x_last_price', [\r\n      buildAssetScVal(usdAsset),\r\n      buildAssetScVal(clpAsset)\r\n    ])\r\n    return raw\r\n  } catch (error) {\r\n    console.error('Failed to get USD/CLP rate:', error)\r\n    // Fallback to demo rate (1 USD = 1000 CLP)\r\n    return 1000\r\n  }\r\n}\r\n\r\n/**\r\n * Get XLM/USD price from Reflector (External CEX & DEX)\r\n * @returns XLM price in USD\r\n */\r\nexport async function priceXLMinUSD(): Promise<number> {\r\n  try {\r\n    // Using official Reflector client method: xLastPrice(base, quote)\r\n    const xlmAsset = { type: AssetType.Stellar, code: 'XLM' }\r\n    const usdAsset = { type: AssetType.Other, code: 'USD' }\r\n    const raw = await simulateRead(CID_CEX, 'x_last_price', [\r\n      buildAssetScVal(xlmAsset),\r\n      buildAssetScVal(usdAsset)\r\n    ])\r\n    return raw\r\n  } catch (error) {\r\n    console.error('Failed to get XLM/USD price:', error)\r\n    // Fallback to demo price\r\n    return 0.12\r\n  }\r\n}\r\n\r\n/**\r\n * Get CLP/USD price (inverse of USD/CLP)\r\n * @returns CLP price in USD\r\n */\r\nexport async function priceCLPinUSD(): Promise<number> {\r\n  try {\r\n    const usdPerClp = await usdPerCLP()\r\n    return 1 / usdPerClp\r\n  } catch (error) {\r\n    console.error('Failed to get CLP/USD price:', error)\r\n    return 0.001\r\n  }\r\n}\r\n\r\n/**\r\n * Get TWAP (Time-Weighted Average Price) for an asset\r\n * @param contractId - Reflector contract ID\r\n * @param asset - Asset to get TWAP for\r\n * @param records - Number of records to average\r\n * @returns TWAP price\r\n */\r\nexport async function getTwap(contractId: string, asset: { type: AssetType; code: string }, records: number = 2): Promise<number> {\r\n  try {\r\n    const raw = await simulateRead(contractId, 'twap', [\r\n      buildAssetScVal(asset),\r\n      xdr.ScVal.scvU32(records)\r\n    ])\r\n    return raw\r\n  } catch (error) {\r\n    console.error(`Failed to get TWAP for ${asset.code}:`, error)\r\n    throw error\r\n  }\r\n}\r\n\r\n/**\r\n * Get cross-asset TWAP (Time-Weighted Average Price)\r\n * @param contractId - Reflector contract ID\r\n * @param baseAsset - Base asset\r\n * @param quoteAsset - Quote asset\r\n * @param records - Number of records to average\r\n * @returns Cross-asset TWAP price\r\n */\r\nexport async function getXTwap(contractId: string, baseAsset: { type: AssetType; code: string }, quoteAsset: { type: AssetType; code: string }, records: number = 2): Promise<number> {\r\n  try {\r\n    const raw = await simulateRead(contractId, 'x_twap', [\r\n      buildAssetScVal(baseAsset),\r\n      buildAssetScVal(quoteAsset),\r\n      xdr.ScVal.scvU32(records)\r\n    ])\r\n    return raw\r\n  } catch (error) {\r\n    console.error(`Failed to get X-TWAP for ${baseAsset.code}/${quoteAsset.code}:`, error)\r\n    throw error\r\n  }\r\n}\r\n\r\n/**\r\n * Get price at specific timestamp\r\n * @param contractId - Reflector contract ID\r\n * @param asset - Asset to get price for\r\n * @param timestamp - Timestamp in milliseconds\r\n * @returns Price at timestamp\r\n */\r\nexport async function getPriceAtTimestamp(contractId: string, asset: { type: AssetType; code: string }, timestamp: number): Promise<number> {\r\n  try {\r\n    const raw = await simulateRead(contractId, 'price', [\r\n      buildAssetScVal(asset),\r\n      xdr.ScVal.scvU64(xdr.Uint64.fromString(timestamp.toString()))\r\n    ])\r\n    return raw\r\n  } catch (error) {\r\n    console.error(`Failed to get price for ${asset.code} at ${timestamp}:`, error)\r\n    throw error\r\n  }\r\n}\r\n\r\n/**\r\n * Get cross-asset price at specific timestamp\r\n * @param contractId - Reflector contract ID\r\n * @param baseAsset - Base asset\r\n * @param quoteAsset - Quote asset\r\n * @param timestamp - Timestamp in milliseconds\r\n * @returns Cross-asset price at timestamp\r\n */\r\nexport async function getXPriceAtTimestamp(contractId: string, baseAsset: { type: AssetType; code: string }, quoteAsset: { type: AssetType; code: string }, timestamp: number): Promise<number> {\r\n  try {\r\n    const raw = await simulateRead(contractId, 'x_price', [\r\n      buildAssetScVal(baseAsset),\r\n      buildAssetScVal(quoteAsset),\r\n      xdr.ScVal.scvU64(xdr.Uint64.fromString(timestamp.toString()))\r\n    ])\r\n    return raw\r\n  } catch (error) {\r\n    console.error(`Failed to get X-price for ${baseAsset.code}/${quoteAsset.code} at ${timestamp}:`, error)\r\n    throw error\r\n  }\r\n}\r\n\r\n/**\r\n * Get last timestamp from oracle\r\n * @param contractId - Reflector contract ID\r\n * @returns Last timestamp\r\n */\r\nexport async function getLastTimestamp(contractId: string): Promise<number> {\r\n  try {\r\n    const raw = await simulateRead(contractId, 'last_timestamp', [])\r\n    return Math.floor(raw)\r\n  } catch (error) {\r\n    console.error(`Failed to get last timestamp for ${contractId}:`, error)\r\n    throw error\r\n  }\r\n}\r\n\r\n/**\r\n * Get supported assets from oracle\r\n * @param contractId - Reflector contract ID\r\n * @returns Array of supported assets\r\n */\r\nexport async function getSupportedAssets(contractId: string): Promise<Array<{ type: AssetType; code: string }>> {\r\n  try {\r\n    const raw = await simulateRead(contractId, 'assets', [])\r\n    // Note: This would need proper parsing of the returned ScVal array\r\n    // For now, return empty array as this is complex to implement\r\n    console.warn('getSupportedAssets not fully implemented - would need ScVal array parsing')\r\n    return []\r\n  } catch (error) {\r\n    console.error(`Failed to get supported assets for ${contractId}:`, error)\r\n    throw error\r\n  }\r\n}\r\n\r\n/**\r\n * Test all Reflector connections with comprehensive data\r\n * @returns Object with all price data and status\r\n */\r\nexport async function testReflectorConnections() {\r\n  const results = {\r\n    usdcUsd: { price: 0, error: null, timestamp: Date.now() },\r\n    usdClp: { price: 0, error: null, timestamp: Date.now() },\r\n    xlmUsd: { price: 0, error: null, timestamp: Date.now() },\r\n    clpUsd: { price: 0, error: null, timestamp: Date.now() },\r\n    decimals: { usdc: 0, fx: 0, cex: 0, errors: [] },\r\n    lastTimestamps: { usdc: 0, fx: 0, cex: 0, errors: [] },\r\n    twaps: { usdc: 0, xlm: 0, errors: [] }\r\n  }\r\n\r\n  try {\r\n    // Test USDC/USD\r\n    results.usdcUsd.price = await priceUSDCinUSD()\r\n  } catch (error) {\r\n    results.usdcUsd.error = error instanceof Error ? error.message : 'Unknown error'\r\n  }\r\n\r\n  try {\r\n    // Test USD/CLP\r\n    results.usdClp.price = await usdPerCLP()\r\n  } catch (error) {\r\n    results.usdClp.error = error instanceof Error ? error.message : 'Unknown error'\r\n  }\r\n\r\n  try {\r\n    // Test XLM/USD\r\n    results.xlmUsd.price = await priceXLMinUSD()\r\n  } catch (error) {\r\n    results.xlmUsd.error = error instanceof Error ? error.message : 'Unknown error'\r\n  }\r\n\r\n  try {\r\n    // Test CLP/USD (derived)\r\n    results.clpUsd.price = await priceCLPinUSD()\r\n  } catch (error) {\r\n    results.clpUsd.error = error instanceof Error ? error.message : 'Unknown error'\r\n  }\r\n\r\n  try {\r\n    // Test decimals\r\n    results.decimals.usdc = await oracleDecimals(CID_USDC)\r\n    results.decimals.fx = await oracleDecimals(CID_FX)\r\n    results.decimals.cex = await oracleDecimals(CID_CEX)\r\n  } catch (error) {\r\n    results.decimals.errors.push(error instanceof Error ? error.message : 'Unknown error')\r\n  }\r\n\r\n  try {\r\n    // Test last timestamps\r\n    results.lastTimestamps.usdc = await getLastTimestamp(CID_USDC)\r\n    results.lastTimestamps.fx = await getLastTimestamp(CID_FX)\r\n    results.lastTimestamps.cex = await getLastTimestamp(CID_CEX)\r\n  } catch (error) {\r\n    results.lastTimestamps.errors.push(error instanceof Error ? error.message : 'Unknown error')\r\n  }\r\n\r\n  try {\r\n    // Test TWAPs\r\n    const usdcAsset = { type: AssetType.Other, code: 'USDC' }\r\n    const xlmAsset = { type: AssetType.Stellar, code: 'XLM' }\r\n    results.twaps.usdc = await getTwap(CID_USDC, usdcAsset, 2)\r\n    results.twaps.xlm = await getTwap(CID_CEX, xlmAsset, 2)\r\n  } catch (error) {\r\n    results.twaps.errors.push(error instanceof Error ? error.message : 'Unknown error')\r\n  }\r\n\r\n  return results\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1163, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/hooks/usePrices.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { priceUSDCinUSD, priceXLMinUSD, usdPerCLP } from '@/lib/reflector';\r\nimport { useApp } from '@/contexts/AppContext';\r\n\r\nexport interface PriceData {\r\n  price: number;\r\n  timestamp: number;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nexport function usePrices(publicKey?: string) {\r\n  // Check if we're in a browser environment\r\n  if (typeof window === 'undefined') {\r\n    return {\r\n      usdcUsd: { price: 0, timestamp: 0, loading: false, error: 'SSR not supported' },\r\n      xlmUsd: { price: 0, timestamp: 0, loading: false, error: 'SSR not supported' },\r\n      clpUsd: { price: 0, timestamp: 0, loading: false, error: 'SSR not supported' },\r\n      convertUsdcToUsd: (amount: number) => amount * 0,\r\n      convertXlmToUsd: (amount: number) => amount * 0,\r\n      convertClpToUsd: (amount: number) => amount * 0,\r\n    };\r\n  }\r\n\r\n  // Use provided publicKey or fallback to context\r\n  const { state } = useApp();\r\n  const { wallet } = state;\r\n  const activePublicKey = publicKey || wallet.publicKey;\r\n\r\n  const [usdcUsd, setUsdcUsd] = useState<PriceData>({\r\n    price: 0,\r\n    timestamp: 0,\r\n    loading: true,\r\n    error: null\r\n  });\r\n\r\n  const [xlmUsd, setXlmUsd] = useState<PriceData>({\r\n    price: 0,\r\n    timestamp: 0,\r\n    loading: true,\r\n    error: null\r\n  });\r\n\r\n  const [clpUsd, setClpUsd] = useState<PriceData>({\r\n    price: 0,\r\n    timestamp: 0,\r\n    loading: true,\r\n    error: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!activePublicKey) {\r\n      setUsdcUsd(prev => ({ ...prev, loading: false, error: 'wallet not connected' }));\r\n      setXlmUsd(prev => ({ ...prev, loading: false, error: 'wallet not connected' }));\r\n      setClpUsd(prev => ({ ...prev, loading: false, error: 'wallet not connected' }));\r\n      return;\r\n    }\r\n\r\n    const fetchPrices = async () => {\r\n      try {\r\n        // Fetch USDC/USD\r\n        try {\r\n          const usdcPrice = await priceUSDCinUSD(activePublicKey);\r\n          setUsdcUsd({\r\n            price: usdcPrice,\r\n            timestamp: Math.floor(Date.now() / 1000),\r\n            loading: false,\r\n            error: null\r\n          });\r\n        } catch (e) {\r\n          setUsdcUsd(prev => ({ ...prev, loading: false, error: 'USDC price unavailable' }));\r\n        }\r\n\r\n        // Fetch XLM/USD\r\n        try {\r\n          const xlmPrice = await priceXLMinUSD(activePublicKey);\r\n          setXlmUsd({\r\n            price: xlmPrice,\r\n            timestamp: Math.floor(Date.now() / 1000),\r\n            loading: false,\r\n            error: null\r\n          });\r\n        } catch (e) {\r\n          setXlmUsd(prev => ({ ...prev, loading: false, error: 'XLM price unavailable' }));\r\n        }\r\n\r\n        // Fetch CLP/USD (inverse of USD/CLP)\r\n        try {\r\n          const usdPerClp = await usdPerCLP(activePublicKey);\r\n          const clpPrice = 1 / usdPerClp; // Convert USD/CLP to CLP/USD\r\n          setClpUsd({\r\n            price: clpPrice,\r\n            timestamp: Math.floor(Date.now() / 1000),\r\n            loading: false,\r\n            error: null\r\n          });\r\n        } catch (e) {\r\n          setClpUsd(prev => ({ ...prev, loading: false, error: 'CLP price unavailable' }));\r\n        }\r\n\r\n      } catch (e: any) {\r\n        console.error('Error fetching prices:', e);\r\n        setUsdcUsd(prev => ({ ...prev, loading: false, error: e.message }));\r\n        setXlmUsd(prev => ({ ...prev, loading: false, error: e.message }));\r\n        setClpUsd(prev => ({ ...prev, loading: false, error: e.message }));\r\n      }\r\n    };\r\n\r\n    fetchPrices();\r\n    \r\n    // Refresh every 30 seconds\r\n    const interval = setInterval(fetchPrices, 30000);\r\n    return () => clearInterval(interval);\r\n  }, [activePublicKey]);\r\n\r\n  return {\r\n    usdcUsd,\r\n    xlmUsd,\r\n    clpUsd,\r\n    convertUsdcToUsd: (amount: number) => amount * usdcUsd.price,\r\n    convertXlmToUsd: (amount: number) => amount * xlmUsd.price,\r\n    convertClpToUsd: (amount: number) => amount * clpUsd.price,\r\n  };\r\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AASO,SAAS,UAAU,SAAkB;IAC1C,0CAA0C;IAC1C,wCAAmC;QACjC,OAAO;YACL,SAAS;gBAAE,OAAO;gBAAG,WAAW;gBAAG,SAAS;gBAAO,OAAO;YAAoB;YAC9E,QAAQ;gBAAE,OAAO;gBAAG,WAAW;gBAAG,SAAS;gBAAO,OAAO;YAAoB;YAC7E,QAAQ;gBAAE,OAAO;gBAAG,WAAW;gBAAG,SAAS;gBAAO,OAAO;YAAoB;YAC7E,kBAAkB,CAAC,SAAmB,SAAS;YAC/C,iBAAiB,CAAC,SAAmB,SAAS;YAC9C,iBAAiB,CAAC,SAAmB,SAAS;QAChD;IACF;;;IAEA,gDAAgD;IAChD,MAAQ;IACR,MAAQ;IACR,MAAM;IAEN,MAAO,qBAAS;IAOhB,MAAO,oBAAQ;IAOf,MAAO,oBAAQ;AAgFjB","debugId":null}},
    {"offset": {"line": 1213, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/hooks/useFreighter.ts"],"sourcesContent":["'use client'\r\nimport { useState, useEffect } from 'react'\r\nimport freighter from '@stellar/freighter-api'\r\n\r\nexport interface FreighterStatus {\r\n  isInstalled: boolean\r\n  isConnected: boolean\r\n  publicKey: string | null\r\n  isLoading: boolean\r\n  error: string | null\r\n}\r\n\r\nexport const useFreighter = () => {\r\n  const [status, setStatus] = useState<FreighterStatus>({\r\n    isInstalled: false,\r\n    isConnected: false,\r\n    publicKey: null,\r\n    isLoading: true,\r\n    error: null\r\n  })\r\n\r\n  useEffect(() => {\r\n    const checkFreighter = async () => {\r\n      setStatus(prev => ({ ...prev, isLoading: true, error: null }))\r\n\r\n      try {\r\n        // Wait a bit for extensions to load\r\n        await new Promise(resolve => setTimeout(resolve, 1000))\r\n\r\n        if (typeof window === 'undefined') {\r\n          setStatus(prev => ({ ...prev, isLoading: false }))\r\n          return\r\n        }\r\n\r\n        // Check if Freighter API is available\r\n        if (typeof (window as any).freighterApi === 'undefined') {\r\n          setStatus({\r\n            isInstalled: false,\r\n            isConnected: false,\r\n            publicKey: null,\r\n            isLoading: false,\r\n            error: 'Freighter API not found'\r\n          })\r\n          return\r\n        }\r\n\r\n        // Freighter is installed\r\n        setStatus(prev => ({ ...prev, isInstalled: true }))\r\n\r\n        // Try to check connection status using official API\r\n        try {\r\n          const conn = await freighter.isConnected()\r\n          console.log('Freighter connection check:', conn)\r\n          \r\n          if (conn.isConnected) {\r\n            // Try to get address\r\n            const addressResult = await freighter.getAddress()\r\n            console.log('Freighter address check:', addressResult)\r\n            \r\n            setStatus({\r\n              isInstalled: true,\r\n              isConnected: true,\r\n              publicKey: addressResult.address || null,\r\n              isLoading: false,\r\n              error: null\r\n            })\r\n          } else {\r\n            setStatus({\r\n              isInstalled: true,\r\n              isConnected: false,\r\n              publicKey: null,\r\n              isLoading: false,\r\n              error: null\r\n            })\r\n          }\r\n        } catch (error) {\r\n          // Freighter is installed but connection check failed\r\n          setStatus({\r\n            isInstalled: true,\r\n            isConnected: false,\r\n            publicKey: null,\r\n            isLoading: false,\r\n            error: 'Connection check failed'\r\n          })\r\n        }\r\n\r\n      } catch (error) {\r\n        setStatus({\r\n          isInstalled: false,\r\n          isConnected: false,\r\n          publicKey: null,\r\n          isLoading: false,\r\n          error: error instanceof Error ? error.message : 'Unknown error'\r\n        })\r\n      }\r\n    }\r\n\r\n    checkFreighter()\r\n\r\n    // Check periodically for Freighter installation\r\n    const interval = setInterval(checkFreighter, 3000)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  const connect = async (): Promise<string> => {\r\n    if (!status.isInstalled) {\r\n      throw new Error('Freighter not installed')\r\n    }\r\n\r\n    setStatus(prev => ({ ...prev, isLoading: true, error: null }))\r\n\r\n    try {\r\n      // Use the official conectarFreighter function\r\n      const { conectarFreighter } = await import('@/components/ConectarFreighter')\r\n      const publicKey = await conectarFreighter()\r\n\r\n      setStatus({\r\n        isInstalled: true,\r\n        isConnected: true,\r\n        publicKey,\r\n        isLoading: false,\r\n        error: null\r\n      })\r\n\r\n      return publicKey\r\n\r\n    } catch (error) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Connection failed'\r\n      setStatus(prev => ({\r\n        ...prev,\r\n        isLoading: false,\r\n        error: errorMessage\r\n      }))\r\n      throw error\r\n    }\r\n  }\r\n\r\n  const disconnect = () => {\r\n    setStatus({\r\n      isInstalled: status.isInstalled,\r\n      isConnected: false,\r\n      publicKey: null,\r\n      isLoading: false,\r\n      error: null\r\n    })\r\n  }\r\n\r\n  return {\r\n    ...status,\r\n    connect,\r\n    disconnect\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AACA;AACA;AAFA;;;AAYO,MAAM,eAAe;IAC1B,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAmB;QACpD,aAAa;QACb,aAAa;QACb,WAAW;QACX,WAAW;QACX,OAAO;IACT;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,iBAAiB;YACrB,UAAU,CAAA,OAAQ,CAAC;oBAAE,GAAG,IAAI;oBAAE,WAAW;oBAAM,OAAO;gBAAK,CAAC;YAE5D,IAAI;gBACF,oCAAoC;gBACpC,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;gBAEjD,wCAAmC;oBACjC,UAAU,CAAA,OAAQ,CAAC;4BAAE,GAAG,IAAI;4BAAE,WAAW;wBAAM,CAAC;oBAChD;gBACF;;;YAsDF,EAAE,OAAO,OAAO;gBACd,UAAU;oBACR,aAAa;oBACb,aAAa;oBACb,WAAW;oBACX,WAAW;oBACX,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;gBAClD;YACF;QACF;QAEA;QAEA,gDAAgD;QAChD,MAAM,WAAW,YAAY,gBAAgB;QAC7C,OAAO,IAAM,cAAc;IAC7B,GAAG,EAAE;IAEL,MAAM,UAAU;QACd,IAAI,CAAC,OAAO,WAAW,EAAE;YACvB,MAAM,IAAI,MAAM;QAClB;QAEA,UAAU,CAAA,OAAQ,CAAC;gBAAE,GAAG,IAAI;gBAAE,WAAW;gBAAM,OAAO;YAAK,CAAC;QAE5D,IAAI;YACF,8CAA8C;YAC9C,MAAM,EAAE,iBAAiB,EAAE,GAAG;YAC9B,MAAM,YAAY,MAAM;YAExB,UAAU;gBACR,aAAa;gBACb,aAAa;gBACb;gBACA,WAAW;gBACX,OAAO;YACT;YAEA,OAAO;QAET,EAAE,OAAO,OAAO;YACd,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YAC9D,UAAU,CAAA,OAAQ,CAAC;oBACjB,GAAG,IAAI;oBACP,WAAW;oBACX,OAAO;gBACT,CAAC;YACD,MAAM;QACR;IACF;IAEA,MAAM,aAAa;QACjB,UAAU;YACR,aAAa,OAAO,WAAW;YAC/B,aAAa;YACb,WAAW;YACX,WAAW;YACX,OAAO;QACT;IACF;IAEA,OAAO;QACL,GAAG,MAAM;QACT;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 1313, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/hooks/useSelectedAsset.ts"],"sourcesContent":["// [AhorroStellar][Reflector]\r\nimport { useEffect, useState } from 'react'\r\n\r\nexport type AssetCode = 'USDC'|'CLP'|'XLM'\r\n\r\nexport function useSelectedAssetPrice(asset: AssetCode){\r\n  const [priceUSD, setPriceUSD] = useState<number|null>(null)\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState<string|null>(null)\r\n\r\n  useEffect(()=>{ \r\n    let m=true;\r\n    (async()=>{\r\n      try{\r\n        setLoading(true); setError(null)\r\n        \r\n        // Check if we have a valid reader key\r\n        const readerKey = process.env.NEXT_PUBLIC_READONLY_PUBLIC_KEY\r\n        if (!readerKey || readerKey === 'GXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') {\r\n          if(m) setError('Configure NEXT_PUBLIC_READONLY_PUBLIC_KEY to enable real-time prices')\r\n          return\r\n        }\r\n        \r\n        // Dynamic import to avoid SSR issues\r\n        const { priceUSDCinUSD, usdPerCLP, priceXLMinUSD } = await import('@/lib/reflector')\r\n        \r\n        let p=0\r\n        if(asset==='USDC') p=await priceUSDCinUSD()\r\n        else if(asset==='CLP'){ const usd_clp=await usdPerCLP(); p = 1/usd_clp }\r\n        else if(asset==='XLM') p=await priceXLMinUSD()\r\n        if(m) setPriceUSD(p)\r\n      }catch(e:any){ \r\n        if(m) setError(e.message||'price fetch failed') \r\n      } finally{ \r\n        if(m) setLoading(false) \r\n      }\r\n    })(); \r\n    return ()=>{m=false}\r\n  },[asset])\r\n\r\n  return { priceUSD, loading, error }\r\n}"],"names":[],"mappings":"AAAA,6BAA6B;;;;AAC7B;;AAIO,SAAS,sBAAsB,KAAgB;IACpD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IACtD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAEhD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,IAAE;QACN,CAAC;YACC,IAAG;gBACD,WAAW;gBAAO,SAAS;gBAE3B,sCAAsC;gBACtC,MAAM;gBACN;;gBAKA,qCAAqC;gBACrC,MAAM,EAAE,cAAc,EAAE,SAAS,EAAE,aAAa,EAAE,GAAG;gBAErD,IAAI,IAAE;gBACN,IAAG,UAAQ,QAAQ,IAAE,MAAM;qBACtB,IAAG,UAAQ,OAAM;oBAAE,MAAM,UAAQ,MAAM;oBAAa,IAAI,IAAE;gBAAQ,OAClE,IAAG,UAAQ,OAAO,IAAE,MAAM;gBAC/B,IAAG,GAAG,YAAY;YACpB,EAAC,OAAM,GAAM;gBACX,IAAG,GAAG,SAAS,EAAE,OAAO,IAAE;YAC5B,SAAS;gBACP,IAAG,GAAG,WAAW;YACnB;QACF,CAAC;QACD,OAAO;YAAK,IAAE;QAAK;IACrB,GAAE;QAAC;KAAM;IAET,OAAO;QAAE;QAAU;QAAS;IAAM;AACpC","debugId":null}},
    {"offset": {"line": 1364, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/components/WalletDemoBanner.tsx"],"sourcesContent":["// [AhorroStellar][Reflector]\r\n'use client'\r\nexport default function WalletDemoBanner(){\r\n  const mock = process.env.NEXT_PUBLIC_DEV_WALLET_MOCK === 'true'\r\n  const pk = process.env.NEXT_PUBLIC_READONLY_PUBLIC_KEY || ''\r\n  if (!mock || !pk) return null\r\n  return (\r\n    <div className=\"alert alert-info text-sm\">\r\n      Wallet conectada (DEMO): <b>{pk.slice(0,6)}…{pk.slice(-6)}</b>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"AAAA,6BAA6B;;;;;AAC7B;;AACe,SAAS;IACtB,MAAM,OAAO,QAAQ,GAAG,CAAC,2BAA2B,KAAK;IACzD,MAAM,KAAK,gGAA+C;IAC1D,IAAI,CAAC,QAAQ,CAAC,IAAI,OAAO;IACzB,qBACE,8OAAC;QAAI,WAAU;;YAA2B;0BACf,8OAAC;;oBAAG,GAAG,KAAK,CAAC,GAAE;oBAAG;oBAAE,GAAG,KAAK,CAAC,CAAC;;;;;;;;;;;;;AAG7D","debugId":null}},
    {"offset": {"line": 1401, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/stores/stakes.ts"],"sourcesContent":["// [AhorroStellar][Reflector]\r\n'use client'\r\nimport { create } from 'zustand'\r\nexport type Stake = { id:string; asset:'USDC'|'CLP'|'XLM'; amount:number; usd:number; ts:number }\r\ntype S = { items: Stake[]; add:(s:Omit<Stake,'id'|'ts'>)=>void; clear:()=>void }\r\n\r\nexport const useStakes = create<S>((set,get)=>({\r\n  items: [],\r\n  add: (s) => {\r\n    const n: Stake = { id: crypto.randomUUID(), ts: Date.now(), ...s }\r\n    const items = [n, ...get().items].slice(0,50)\r\n    set({ items }); try{ localStorage.setItem('stakes', JSON.stringify(items)) }catch{}\r\n  },\r\n  clear: () => { set({ items: [] }); try{ localStorage.removeItem('stakes') }catch{} }\r\n}))\r\n\r\nif (typeof window !== 'undefined') {\r\n  try{ const saved = JSON.parse(localStorage.getItem('stakes')||'[]'); useStakes.setState({ items: saved }) }catch{}\r\n}\r\n"],"names":[],"mappings":"AAAA,6BAA6B;;;;AAE7B;AADA;;AAKO,MAAM,YAAY,CAAA,GAAA,wIAAA,CAAA,SAAM,AAAD,EAAK,CAAC,KAAI,MAAM,CAAC;QAC7C,OAAO,EAAE;QACT,KAAK,CAAC;YACJ,MAAM,IAAW;gBAAE,IAAI,OAAO,UAAU;gBAAI,IAAI,KAAK,GAAG;gBAAI,GAAG,CAAC;YAAC;YACjE,MAAM,QAAQ;gBAAC;mBAAM,MAAM,KAAK;aAAC,CAAC,KAAK,CAAC,GAAE;YAC1C,IAAI;gBAAE;YAAM;YAAI,IAAG;gBAAE,aAAa,OAAO,CAAC,UAAU,KAAK,SAAS,CAAC;YAAQ,EAAC,OAAK,CAAC;QACpF;QACA,OAAO;YAAQ,IAAI;gBAAE,OAAO,EAAE;YAAC;YAAI,IAAG;gBAAE,aAAa,UAAU,CAAC;YAAU,EAAC,OAAK,CAAC;QAAE;IACrF,CAAC;AAED","debugId":null}},
    {"offset": {"line": 1442, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/app/stake/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { Wallet, TrendingUp, Shield, Target, Award, Users, ExternalLink, Info, DollarSign } from \"lucide-react\";\r\nimport Button from \"@/components/ui/Button\";\r\nimport Card from \"@/components/ui/Card\";\r\nimport Layout from \"@/components/layout/Layout\";\r\nimport { useApp } from \"@/contexts/AppContext\";\r\nimport { usePrices } from \"@/hooks/usePrices\";\r\nimport { conectarFreighter } from \"@/components/ConectarFreighter\";\r\nimport FreighterLocalhostGuide from \"@/components/FreighterLocalhostGuide\";\r\nimport FreighterTest from \"@/components/FreighterTest\";\r\nimport { useFreighter } from \"@/hooks/useFreighter\";\r\nimport { WalletData } from \"@/components/molecules/wallet-data\";\r\nimport { useSelectedAssetPrice, AssetCode } from \"@/hooks/useSelectedAsset\";\r\nimport Link from \"next/link\";\r\n\r\n// [AhorroStellar][Reflector] imports\r\nimport WalletDemoBanner from '@/components/WalletDemoBanner'\r\nimport { useStakes } from '@/stores/stakes'\r\n\r\nexport const dynamic = 'force-dynamic'\r\n\r\nexport default function Stake() {\r\n  const { state, makeStake, connectWallet } = useApp();\r\n  const { wallet, projects, isLoading, user } = state;\r\n  const [selectedProject, setSelectedProject] = useState(\"\");\r\n  const [stakeAmount, setStakeAmount] = useState(50);\r\n  const [stakeDuration, setStakeDuration] = useState(7);\r\n  const [pub, setPub] = useState<string | undefined>(wallet.publicKey || undefined);\r\n  \r\n  // Modo lectura con Reflector\r\n  const [asset, setAsset] = useState<AssetCode>('USDC')\r\n  const [amount, setAmount] = useState<number>(0)\r\n  const { priceUSD, loading: priceLoading, error: priceError } = useSelectedAssetPrice(asset)\r\n  const usdEq = priceUSD ? amount * priceUSD : 0\r\n  \r\n  // [AhorroStellar][Reflector] estado\r\n  const { items, add, clear } = useStakes()\r\n  \r\n  // Use Freighter hook for better detection\r\n  const { isInstalled, isConnected, publicKey, connect } = useFreighter();\r\n  \r\n  // Get real-time prices directly from hook\r\n  const { usdcUsd, xlmUsd } = usePrices(pub);\r\n  \r\n  // Mock prices for demo mode when real prices fail\r\n  const mockPrices = {\r\n    usdcUsd: usdcUsd.error ? { price: 1.0, loading: false, error: null } : usdcUsd,\r\n    xlmUsd: xlmUsd.error ? { price: 0.12, loading: false, error: null } : xlmUsd,\r\n  };\r\n  \r\n  // Check if wallet is connected for price display\r\n  if (!pub) {\r\n    return (\r\n      <Layout>\r\n        <div className=\"text-center py-12\">\r\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">Vote with your Savings</h1>\r\n          <p className=\"text-lg text-gray-600 mb-6\">\r\n            Connect your wallet to see live prices and participate in voting\r\n          </p>\r\n          \r\n          {/* Demo Mode Banner */}\r\n          <div className=\"max-w-2xl mx-auto mb-8\">\r\n            <div className=\"bg-green-50 border border-green-200 rounded-lg p-6 mb-6\">\r\n              <div className=\"flex items-center justify-center space-x-2 mb-4\">\r\n                <Info className=\"w-6 h-6 text-green-600\" />\r\n                <h3 className=\"text-lg font-semibold text-green-800\">Demo Mode Active</h3>\r\n              </div>\r\n              <p className=\"text-green-700 mb-4\">\r\n                To try the full flow, you can simulate the wallet connection.\r\n              </p>\r\n              \r\n              <div className=\"space-y-3\">\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <span className=\"w-6 h-6 bg-green-600 text-white rounded-full flex items-center justify-center text-sm font-bold\">1</span>\r\n                  <span className=\"text-green-700\">Click \"Simulate Connection\" to continue</span>\r\n                </div>\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <span className=\"w-6 h-6 bg-green-600 text-white rounded-full flex items-center justify-center text-sm font-bold\">2</span>\r\n                  <span className=\"text-green-700\">Explore available projects</span>\r\n                </div>\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <span className=\"w-6 h-6 bg-green-600 text-white rounded-full flex items-center justify-center text-sm font-bold\">3</span>\r\n                  <span className=\"text-green-700\">Test the full voting flow</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <Button \r\n            onClick={() => {\r\n              // Demo mode: just set demo public key without calling connectWallet\r\n              setPub(\"GDEMO1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ\");\r\n              console.log('Demo mode: Simulating wallet connection');\r\n            }} \r\n            size=\"lg\"\r\n            className=\"bg-green-600 hover:bg-green-700\"\r\n          >\r\n            🚀 Simulate Connection (Demo)\r\n          </Button>\r\n          \r\n          {/* Freighter Installation Guide - only when not installed and no demo connection */}\r\n          {!isInstalled && !pub && (\r\n            <div className=\"mt-8 max-w-2xl mx-auto\">\r\n              <div className=\"bg-orange-50 border border-orange-200 rounded-lg p-6\">\r\n                <div className=\"flex items-center justify-center space-x-2 mb-4\">\r\n                  <Info className=\"w-6 h-6 text-orange-600\" />\r\n                  <h3 className=\"text-lg font-semibold text-orange-800\">For real use: Freighter Wallet</h3>\r\n                </div>\r\n                <p className=\"text-orange-700 mb-4\">\r\n                  For real transactions you need to install the Freighter extension.\r\n                </p>\r\n                \r\n                <div className=\"mt-4 flex space-x-3 justify-center\">\r\n                  <a \r\n                    href=\"https://freighter.app/\" \r\n                    target=\"_blank\" \r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"px-6 py-3 bg-orange-600 text-white rounded-lg hover:bg-orange-700 transition-colors font-semibold\"\r\n                  >\r\n                    Install Freighter\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  const handleStake = async () => {\r\n    if (!selectedProject) return;\r\n    await makeStake(selectedProject, stakeAmount);\r\n  };\r\n\r\n  // [AhorroStellar][Reflector] handler\r\n  const onStake = () => {\r\n    if (!priceUSD || amount<=0) return\r\n    add({ asset, amount, usd: Number((amount*priceUSD).toFixed(2)) })\r\n  }\r\n\r\n  // Check if Freighter is installed\r\n  const isFreighterInstalled = typeof window !== 'undefined' && (window as any).stellar;\r\n\r\n  const handleVoteStake = async (projectId: string) => {\r\n    if (!pub) {\r\n      alert('Connect your wallet first using the \"Simulate Connection\" button');\r\n      return;\r\n    }\r\n    \r\n    setSelectedProject(projectId);\r\n    // Show stake modal\r\n    const modal = document.getElementById('stake-modal');\r\n    if (modal) {\r\n      modal.classList.remove('hidden');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {/* Header */}\r\n      <div className=\"mb-12\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <div>\r\n            <h1 className=\"text-4xl font-bold text-gray-900\">Vote-Save</h1>\r\n            <p className=\"text-lg text-gray-600 mt-2\">\r\n              Temporarily lock USDC as a symbolic vote to back university projects\r\n            </p>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* [AhorroStellar][Reflector] Modo Lectura - Solo cuando NO hay wallet */}\r\n        {!pub && (\r\n          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6\">\r\n            <div className=\"flex items-center space-x-2 mb-3\">\r\n              <Info className=\"w-5 h-5 text-blue-600\" />\r\n              <h3 className=\"text-lg font-semibold text-blue-800\">Modo Lectura</h3>\r\n            </div>\r\n            <p className=\"text-blue-700 text-sm mb-4\">\r\n              Precios reales con cuenta READONLY (sin wallet) usando Reflector Oracle\r\n            </p>\r\n            \r\n            <WalletDemoBanner />\r\n            <div className=\"flex gap-3 items-center\">\r\n              <select className=\"select select-bordered\" value={asset} onChange={e=>setAsset(e.target.value as AssetCode)}>\r\n                <option>USDC</option><option>CLP</option><option>XLM</option>\r\n              </select>\r\n              <input className=\"input input-bordered w-40\" type=\"number\" step=\"0.01\"\r\n                     placeholder=\"Monto\" value={amount||''} onChange={e=>setAmount(Number(e.target.value))}/>\r\n              <button className=\"btn btn-primary\" onClick={onStake} disabled={!priceUSD || amount<=0}>\r\n                Vote-Save (mock)\r\n              </button>\r\n            </div>\r\n            {priceLoading && <div className=\"text-sm opacity-70\">Cargando precio…</div>}\r\n            {priceError && <div className=\"text-sm text-red-600\">Error precio: {priceError}</div>}\r\n            <div className=\"text-sm\">\r\n              1 {asset} ≈ <b>{priceUSD ? priceUSD.toFixed(6) : '—'}</b> USD &nbsp;|&nbsp;\r\n              Equivalente: <b>{priceUSD ? usdEq.toFixed(2) : '—'} USD</b>\r\n            </div>\r\n            <div className=\"divider\">Tus stakes (mock / local)</div>\r\n            <div className=\"space-y-2\">\r\n              {items.length===0 && <div className=\"text-sm opacity-70\">Sin registros</div>}\r\n              {items.map(s=>(\r\n                <div key={s.id} className=\"flex justify-between items-center p-3 rounded border\">\r\n                  <div className=\"text-sm\">{new Date(s.ts).toLocaleString()}</div>\r\n                  <div className=\"text-sm font-mono\">{s.amount} {s.asset}</div>\r\n                  <div className=\"text-sm\">{s.usd.toFixed(2)} USD</div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            {items.length>0 && <button className=\"btn btn-outline btn-sm\" onClick={clear}>Borrar historial</button>}\r\n          </div>\r\n        )}\r\n        \r\n        {/* Wallet Info */}\r\n        <div className=\"mt-6 flex justify-center\">\r\n          <div className=\"p-3 bg-green-50 border border-green-200 rounded\">\r\n            <div className=\"text-sm text-green-700\">\r\n              ✅ Wallet connected: {pub.slice(0,4)}…{pub.slice(-4)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Estadísticas del Usuario */}\r\n        {user && (\r\n          <div className=\"mt-6\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\r\n              <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg text-center\">\r\n                <div className=\"text-2xl font-bold text-blue-600\">${user.activeStakes.toFixed(2)}</div>\r\n                <div className=\"text-sm text-blue-700\">Locked Savings</div>\r\n              </div>\r\n              <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg text-center\">\r\n                <div className=\"text-2xl font-bold text-green-600\">{user.totalProjects}</div>\r\n                <div className=\"text-sm text-green-700\">Backed Projects</div>\r\n              </div>\r\n              <div className=\"p-4 bg-purple-50 border border-purple-200 rounded-lg text-center\">\r\n                <div className=\"text-2xl font-bold text-purple-600\">{user.reputation}</div>\r\n                <div className=\"text-sm text-purple-700\">Reputation Points</div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Enlace al Dashboard */}\r\n            {user.totalProjects > 0 && (\r\n              <div className=\"text-center\">\r\n                <Link href=\"/dashboard\">\r\n                  <Button variant=\"outline\" className=\"text-sm\">\r\n                    📊 View my backed projects in the Dashboard\r\n                  </Button>\r\n                </Link>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {/* Real-time Price Display */\r\n        }\r\n        <div className=\"mt-6 flex justify-center\">\r\n          {mockPrices.usdcUsd.loading && (\r\n            <div className=\"p-3 bg-gray-50 border border-gray-200 rounded\">\r\n              <span className=\"text-sm text-gray-600\">Loading prices from Reflector Oracle...</span>\r\n            </div>\r\n          )}\r\n          {!mockPrices.usdcUsd.loading && mockPrices.usdcUsd.price > 0 && (\r\n            <div className=\"p-3 bg-blue-50 border border-blue-200 rounded\">\r\n              <div className=\"flex space-x-4 text-sm\">\r\n                <span className=\"text-blue-700\">USDC/USD: ${mockPrices.usdcUsd.price.toFixed(4)}</span>\r\n                <span className=\"text-green-700\">XLM/USD: ${mockPrices.xlmUsd.price.toFixed(4)}</span>\r\n              </div>\r\n              <div className=\"text-xs text-blue-600 mt-1\">\r\n                📊 {usdcUsd.error ? 'Demo prices (simulation mode)' : 'Live prices from Reflector Oracle'}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Projects Grid */}\r\n      <div className=\"mb-12\">\r\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-8 text-center\">Available Projects</h2>\r\n        \r\n        {/* Debug Info (hidden in demo and prod) */}\r\n        {false && process.env.NODE_ENV === 'development' && (\r\n          <div className=\"mb-4 p-3 bg-gray-100 rounded text-sm\">\r\n            <strong>Debug:</strong> Projects loaded: {projects?.length || 0} | \r\n            Wallet: {wallet.isConnected ? 'Connected' : 'Disconnected'} | \r\n            PublicKey: {pub ? `${pub.slice(0,8)}...` : 'N/A'}\r\n          </div>\r\n        )}\r\n        \r\n        {!(wallet.isConnected || pub) && !isFreighterInstalled && (\r\n          <div className=\"mb-8 p-4 bg-orange-50 border border-orange-200 rounded-lg text-center max-w-2xl mx-auto\">\r\n            <div className=\"flex items-center justify-center space-x-2 mb-2\">\r\n              <Info className=\"w-5 h-5 text-orange-600\" />\r\n              <span className=\"font-semibold text-orange-800\">Install Freighter to participate</span>\r\n            </div>\r\n            <p className=\"text-sm text-orange-700\">\r\n              You need the Freighter extension to vote with your savings\r\n            </p>\r\n            <a \r\n              href=\"https://freighter.app/\" \r\n              target=\"_blank\" \r\n              rel=\"noopener noreferrer\"\r\n              className=\"inline-block mt-2 px-4 py-2 bg-orange-600 text-white rounded-lg hover:bg-orange-700 transition-colors text-sm\"\r\n            >\r\n              Download Freighter\r\n            </a>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {projects && projects.length > 0 ? projects.map((project) => (\r\n            <Card key={project.id} className=\"hover:shadow-lg transition-shadow\">\r\n              <div className=\"p-6\">\r\n                {/* Project Header */}\r\n                <div className=\"mb-4\">\r\n                  <h3 className=\"text-xl font-bold text-gray-900 mb-2\">{project.title}</h3>\r\n                  <p className=\"text-gray-600 text-sm mb-3\">{project.description}</p>\r\n                  \r\n                  {/* Bonus Info */}\r\n                  <div className=\"flex items-center space-x-2 mb-4\">\r\n                    <Award className=\"w-4 h-4 text-purple-600\" />\r\n                    <span className=\"text-sm font-medium text-purple-700\">\r\n                      Up to {project.bonusPercent}% bonus if funded\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Project Stats */}\r\n                <div className=\"grid grid-cols-2 gap-4 mb-4 text-sm\">\r\n                  <div>\r\n                    <p className=\"text-gray-500\">Total backed</p>\r\n                    <p className=\"font-semibold text-blue-600\">${project.totalStaked.toLocaleString()}</p>\r\n                    {project.myStake > 0 && (\r\n                      <p className=\"text-xs text-green-600\">+${project.myStake.toFixed(2)} tuyo</p>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-gray-500\">Voters</p>\r\n                    <p className=\"font-semibold text-gray-900\">{project.stakers}</p>\r\n                    {project.myStake > 0 && (\r\n                      <p className=\"text-xs text-green-600\">You voted!</p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Progress Bar */}\r\n                <div className=\"mb-4\">\r\n                  <div className=\"flex justify-between text-xs text-gray-500 mb-1\">\r\n                    <span>Progress</span>\r\n                    <span>{project.progress}%</span>\r\n                  </div>\r\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                    <div \r\n                      className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\" \r\n                      style={{ width: `${project.progress}%` }}\r\n                    ></div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Action Buttons */}\r\n                <div className=\"flex space-x-3\">\r\n                  <Button\r\n                    onClick={() => handleVoteStake(project.id)}\r\n                    className=\"flex-1\"\r\n                    size=\"sm\"\r\n                  >\r\n                    <Target className=\"w-4 h-4 mr-2\" />\r\n                    Vote-Save\r\n                  </Button>\r\n                  \r\n                  <Link href={`/proyectos/${project.id}`}>\r\n                    <Button variant=\"ghost\" size=\"sm\" className=\"flex items-center\">\r\n                      <ExternalLink className=\"w-4 h-4 mr-2\" />\r\n                      View details\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          )) : (\r\n            <div className=\"col-span-full text-center py-12\">\r\n              <div className=\"text-gray-500 mb-4\">\r\n                <Info className=\"w-12 h-12 mx-auto mb-4\" />\r\n                <h3 className=\"text-lg font-semibold mb-2\">No hay proyectos disponibles</h3>\r\n                <p>Los proyectos se están cargando o no hay proyectos activos en este momento.</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* How it Works */}\r\n      <Card className=\"mb-12 max-w-4xl mx-auto\">\r\n        <div className=\"p-8\">\r\n          <h3 className=\"text-2xl font-bold mb-6 text-gray-900 text-center\">How it works</h3>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\r\n            <div className=\"text-center\">\r\n              <div className=\"w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-3\">\r\n                <span className=\"text-blue-600 text-lg font-bold\">1</span>\r\n              </div>\r\n              <h4 className=\"font-semibold text-gray-900 mb-2\">Lock USDC</h4>\r\n              <p className=\"text-sm text-gray-600\">Your money is safe for 7 days</p>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <div className=\"w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-3\">\r\n                <span className=\"text-blue-600 text-lg font-bold\">2</span>\r\n              </div>\r\n              <h4 className=\"font-semibold text-gray-900 mb-2\">Vote symbolically</h4>\r\n              <p className=\"text-sm text-gray-600\">Support projects you believe should win</p>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <div className=\"w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-3\">\r\n                <span className=\"text-blue-600 text-lg font-bold\">3</span>\r\n              </div>\r\n              <h4 className=\"font-semibold text-gray-900 mb-2\">Gain reputation</h4>\r\n              <p className=\"text-sm text-gray-600\">And a possible bonus if the project wins</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n\r\n      {/* Benefits */}\r\n      <Card className=\"mb-12 max-w-4xl mx-auto\">\r\n        <div className=\"p-8\">\r\n          <h3 className=\"text-2xl font-bold mb-6 text-gray-900 text-center\">Benefits</h3>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <Shield className=\"w-5 h-5 text-green-600\" />\r\n              <span className=\"text-sm text-gray-700\">No risk of loss</span>\r\n            </div>\r\n            <div className=\"flex items-center space-x-3\">\r\n              <TrendingUp className=\"w-5 h-5 text-blue-600\" />\r\n              <span className=\"text-sm text-gray-700\">Build public reputation</span>\r\n            </div>\r\n            <div className=\"flex items-center space-x-3\">\r\n              <Award className=\"w-5 h-5 text-purple-600\" />\r\n              <span className=\"text-sm text-gray-700\">Possible conditional reward</span>\r\n            </div>\r\n            <div className=\"flex items-center space-x-3\">\r\n              <Users className=\"w-5 h-5 text-orange-600\" />\r\n              <span className=\"text-sm text-gray-700\">Practical Web3 education</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n\r\n      {/* [AhorroStellar][Reflector] Stake Modal with token selector */}\r\n      <div id=\"stake-modal\" className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50 hidden\">\r\n        <div className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4\">\r\n          <h3 className=\"text-xl font-bold mb-4\">Configure your Vote</h3>\r\n          \r\n          {/* Project Selection */}\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Selected Project</label>\r\n            <select\r\n              value={selectedProject}\r\n              onChange={(e) => setSelectedProject(e.target.value)}\r\n              className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            >\r\n              <option value=\"\">Elige un proyecto para respaldar</option>\r\n              {projects.map((project) => (\r\n                <option key={project.id} value={project.id}>\r\n                  {project.title}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          {/* [AhorroStellar][Reflector] Token Selection */}\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Token para el Stake\r\n            </label>\r\n            <select\r\n              value={asset}\r\n              onChange={(e) => setAsset(e.target.value as AssetCode)}\r\n              className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            >\r\n              <option value=\"USDC\">USDC</option>\r\n              <option value=\"XLM\">XLM</option>\r\n              <option value=\"CLP\">CLP</option>\r\n            </select>\r\n            {priceLoading && <div className=\"text-sm text-blue-600 mt-1\">Cargando precio…</div>}\r\n            {priceError && <div className=\"text-sm text-red-600 mt-1\">Error precio: {priceError}</div>}\r\n            <div className=\"text-sm text-gray-600 mt-1\">\r\n              1 {asset} ≈ <b>{\r\n                asset === 'USDC' ? '1.0000' : \r\n                asset === 'XLM' ? '0.1200' : \r\n                '0.0010'\r\n              } USD</b> (demo)\r\n            </div>\r\n          </div>\r\n\r\n          {/* Stake Amount */}\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Cantidad a Bloquear\r\n            </label>\r\n            <div className=\"relative\">\r\n              <input\r\n                type=\"number\"\r\n                value={amount || ''}\r\n                onChange={(e) => setAmount(Number(e.target.value))}\r\n                min=\"1\"\r\n                max=\"10000\"\r\n                step=\"0.01\"\r\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                placeholder=\"Ingresa cantidad\"\r\n              />\r\n              <span className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500\">\r\n                {asset}\r\n              </span>\r\n            </div>\r\n            {amount > 0 && (\r\n              <p className=\"text-sm text-gray-600 mt-1\">\r\n                Equivalent: <b>{\r\n                  asset === 'USDC' ? (amount * 1.0).toFixed(2) : \r\n                  asset === 'XLM' ? (amount * 0.12).toFixed(2) : \r\n                  (amount * 0.001).toFixed(2)\r\n                } USD</b> (demo)\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Duration */}\r\n          <div className=\"mb-6\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Lock Duration\r\n            </label>\r\n            <select\r\n              value={stakeDuration}\r\n              onChange={(e) => setStakeDuration(Number(e.target.value))}\r\n              className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            >\r\n              <option value={7}>7 days (recommended)</option>\r\n              <option value={14}>14 days</option>\r\n              <option value={30}>30 days</option>\r\n            </select>\r\n            <p className=\"text-sm text-gray-600 mt-1\">\r\n              Your {asset} will automatically unlock at the end of the period\r\n            </p>\r\n          </div>\r\n\r\n          {/* Action Buttons */}\r\n          <div className=\"flex space-x-3\">\r\n            <Button\r\n              onClick={() => {\r\n                if (selectedProject && amount > 0) {\r\n                  // Simular stake con precios demo\r\n                  const usdValue = asset === 'USDC' ? amount * 1.0 : \r\n                                  asset === 'XLM' ? amount * 0.12 : \r\n                                  amount * 0.001;\r\n                  \r\n                  // Actualizar estadísticas del proyecto\r\n                  const project = projects.find(p => p.id === selectedProject);\r\n                  if (project) {\r\n                    // Actualizar el proyecto en el estado global\r\n                    makeStake(selectedProject, usdValue);\r\n                  }\r\n                  \r\n                  // Agregar al store local de stakes\r\n                  add({ asset, amount, usd: Number(usdValue.toFixed(2)) });\r\n                  \r\n                  // Cerrar modal\r\n                  document.getElementById('stake-modal')?.classList.add('hidden');\r\n                  \r\n                  // Simple confirmation\r\n                  alert(`✅ Vote recorded successfully!\r\n\r\n${amount} ${asset} ($${usdValue.toFixed(2)}) for \"${project?.title}\"\r\n\r\nGo to the dashboard to see all your stats and backed projects.`);\r\n                }\r\n              }}\r\n              disabled={!selectedProject || !amount || isLoading}\r\n              className=\"flex-1\"\r\n            >\r\n              {isLoading ? (\r\n                <>\r\n                  <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2\"></div>\r\n                  Processing...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Target className=\"w-5 h-5 mr-2\" />\r\n                  Vote with {amount || 0} {asset}\r\n                </>\r\n              )}\r\n            </Button>\r\n            \r\n            <Button\r\n              variant=\"ghost\"\r\n              onClick={() => document.getElementById('stake-modal')?.classList.add('hidden')}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Loading State */}\r\n      {isLoading && (\r\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white rounded-lg p-6 flex items-center space-x-4\">\r\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n            <span className=\"text-gray-700\">Processing vote...</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Layout>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}