{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/lib/reader.ts"],"sourcesContent":["// [AhorroStellar][Reflector]\r\nimport { StrKey } from '@stellar/stellar-sdk'\r\n\r\nexport function getReaderPk(): string {\r\n  const pk = process.env.NEXT_PUBLIC_READONLY_PUBLIC_KEY || ''\r\n  \r\n  // If no public key is configured, use a demo key for testing\r\n  if (!pk || pk === '<TU_PUBLIC_KEY_G...>') {\r\n    console.warn('NEXT_PUBLIC_READONLY_PUBLIC_KEY not configured, using demo key')\r\n    return 'GDEMO123456789012345678901234567890123456789012345678901234567890'\r\n  }\r\n  \r\n  // Validate the public key format\r\n  if (!StrKey.isValidEd25519PublicKey(pk)) {\r\n    console.warn('Invalid public key format, using demo key')\r\n    return 'GDEMO123456789012345678901234567890123456789012345678901234567890'\r\n  }\r\n  \r\n  console.log('Using real Reflector account:', pk.slice(0, 6) + '...' + pk.slice(-6))\r\n  return pk\r\n}"],"names":[],"mappings":"AAAA,6BAA6B;;;;AAIhB;AAHb;;AAEO,SAAS;IACd,MAAM,KAAK,gGAA+C;IAE1D,6DAA6D;IAC7D;;IAKA,iCAAiC;IACjC,IAAI,CAAC,+KAAA,CAAA,SAAM,CAAC,uBAAuB,CAAC,KAAK;QACvC,QAAQ,IAAI,CAAC;QACb,OAAO;IACT;IAEA,QAAQ,GAAG,CAAC,iCAAiC,GAAG,KAAK,CAAC,GAAG,KAAK,QAAQ,GAAG,KAAK,CAAC,CAAC;IAChF,OAAO;AACT","debugId":null}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/lib/reflector.ts"],"sourcesContent":["// [AhorroStellar][Reflector] - KALE x Reflector Hackathon 2025\r\n// Based on official @reflector/oracle-client v6.1.1\r\nimport {\r\n  rpc, Contract, TransactionBuilder, BASE_FEE, Networks, xdr, scValToBigInt, Operation, Address, Asset as StellarAsset, hash, StrKey\r\n} from '@stellar/stellar-sdk'\r\nimport { getReaderPk } from '@/lib/reader'\r\n\r\nconst RPC = process.env.NEXT_PUBLIC_SOROBAN_RPC_PRIMARY || 'https://soroban-testnet.stellar.org'\r\nconst NET = process.env.NEXT_PUBLIC_STELLAR_NETWORK_PASSPHRASE || Networks.TESTNET\r\n\r\n// Reflector Contract IDs (Testnet) - Official from Stellar Docs\r\nconst CID_USDC = process.env.NEXT_PUBLIC_REFLECTOR_CONTRACT_ID_USDC || 'CAVLP5DH2GJPZMVO7IJY4CVOD5MWEFTJFVPD2YY2FQXOQHRGHK4D6HLP'\r\nconst CID_FX   = process.env.NEXT_PUBLIC_REFLECTOR_CONTRACT_ID_FX || 'CCSSOHTBL3LEWUCBBEB5NJFC2OKFRC74OWEIJIZLRJBGAAU4VMU5NV4W'\r\nconst CID_CEX  = process.env.NEXT_PUBLIC_REFLECTOR_CONTRACT_ID_CEX || 'CCYOZJCOPG34LLQQ7N24YXBM7LL62R7ONMZ3G6WZAAYPB5OYKOMJRN63'\r\n\r\nconst server = new rpc.Server(RPC, { allowHttp: true })\r\nconst DEC = 14\r\nconst scale = (v: bigint, d=DEC) => Number(v) / 10**d\r\n\r\n// Asset Types (from official Reflector client)\r\nenum AssetType {\r\n  Stellar = 1,\r\n  Other = 2\r\n}\r\n\r\n// Helper to create ScVal from string (SEP-40 compatible)\r\nconst createSymbol = (symbol: string) => xdr.ScVal.scvSymbol(symbol)\r\n\r\n// Helper to create ScVal from string (for asset names)\r\nconst createString = (str: string) => xdr.ScVal.scvString(str)\r\n\r\n/**\r\n * Build Asset ScVal from asset object (based on official Reflector client)\r\n * @param asset - Asset object with type and code\r\n * @returns ScVal representation of the asset\r\n */\r\nfunction buildAssetScVal(asset: { type: AssetType; code: string }): xdr.ScVal {\r\n  let stellarAsset: StellarAsset | null = null\r\n  \r\n  switch (asset.type) {\r\n    case AssetType.Stellar: {\r\n      const splittedCode = asset.code.split(':')\r\n      if (splittedCode.length === 2) {\r\n        const [assetCode, issuer] = splittedCode\r\n        if (!assetCode || !issuer) {\r\n          throw new Error('Asset code and issuer must be defined')\r\n        }\r\n        if (!StrKey.isValidEd25519PublicKey(issuer)) {\r\n          throw new Error('Asset issuer must be a valid ed25519 public key')\r\n        }\r\n        stellarAsset = new StellarAsset(assetCode, issuer)\r\n      } else if (asset.code === 'XLM') {\r\n        stellarAsset = StellarAsset.native()\r\n      } else {\r\n        // Contract ID\r\n        if (!StrKey.isValidContract(asset.code)) {\r\n          throw new Error(`Asset code ${asset.code} is invalid contract ID`)\r\n        }\r\n        return new Address(asset.code).toScVal()\r\n      }\r\n      break\r\n    }\r\n    case AssetType.Other:\r\n      if (asset.code.length > 32) {\r\n        throw new Error('Asset code must be 32 characters or less')\r\n      }\r\n      return createSymbol(asset.code)\r\n    default:\r\n      throw new Error(`Asset type ${asset.type} is not supported`)\r\n  }\r\n  \r\n  if (stellarAsset) {\r\n    const assetContractId = new xdr.HashIdPreimageContractId({\r\n      networkId: hash(Buffer.from(NET)),\r\n      contractIdPreimage: xdr.ContractIdPreimage.contractIdPreimageFromAsset(stellarAsset.toXDRObject())\r\n    })\r\n    const preimage = xdr.HashIdPreimage.envelopeTypeContractId(assetContractId)\r\n    const contractId = StrKey.encodeContract(hash(preimage.toXDR()))\r\n    return new Address(contractId).toScVal()\r\n  }\r\n  \r\n  throw new Error('Failed to build asset ScVal')\r\n}\r\n\r\n/**\r\n * Parse Soroban result from transaction response (based on official Reflector client)\r\n * @param resultMetaXdr - Transaction result meta XDR\r\n * @returns Parsed result\r\n */\r\nfunction parseSorobanResult(resultMetaXdr: any): any {\r\n  if (!resultMetaXdr || !resultMetaXdr.returnValue) {\r\n    return null\r\n  }\r\n  \r\n  try {\r\n    return scValToBigInt(resultMetaXdr.returnValue)\r\n  } catch (error) {\r\n    console.warn('Failed to parse Soroban result:', error)\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Simulate a read-only contract call using SEP-40 interface\r\n * @param contractId - Reflector contract ID\r\n * @param method - Method name (lastprice, decimals, etc.)\r\n * @param args - Arguments as ScVal array\r\n * @returns Decoded result as number\r\n */\r\nexport async function simulateRead(contractId: string, method: string, args: xdr.ScVal[]): Promise<number> {\r\n  try {\r\n    const reader = getReaderPk()\r\n    \r\n    // Check if we're using a demo key\r\n    if (reader.startsWith('GDEMO')) {\r\n      console.warn('🔧 DEMO MODE: Using fallback prices (configure .env.local for real Reflector)')\r\n      // Return demo prices based on method and contract\r\n      if (method === 'lastprice') {\r\n        if (contractId === CID_USDC) return 1.0  // USDC/USD\r\n        if (contractId === CID_CEX) return 0.12  // XLM/USD\r\n      }\r\n      if (method === 'x_last_price') {\r\n        if (contractId === CID_FX) return 1000   // USD/CLP\r\n        if (contractId === CID_CEX) return 0.12  // XLM/USD\r\n      }\r\n      if (method === 'decimals') return 14\r\n      if (method === 'last_timestamp') return Math.floor(Date.now() / 1000)\r\n      return 1.0 // Default fallback\r\n    }\r\n    \r\n    console.log('🚀 REAL REFLECTOR: Fetching live prices from Oracle')\r\n    \r\n  const account = await server.getAccount(reader)\r\n  const contract = new Contract(contractId)\r\n    \r\n    const tx = new TransactionBuilder(account, { \r\n      fee: BASE_FEE,\r\n      networkPassphrase: NET \r\n    })\r\n    .addOperation(contract.call(method, ...args))\r\n      .setTimeout(30)\r\n    .build()\r\n    \r\n  const sim = await server.simulateTransaction(tx)\r\n    \r\n    if (rpc.Api.isSimulationError(sim)) {\r\n      throw new Error(`Simulation error: ${sim.error}`)\r\n    }\r\n    \r\n  const retval = (sim as any).result?.retval ?? (sim as any).result\r\n    if (!retval) {\r\n      throw new Error('No retval from simulation')\r\n    }\r\n    \r\n    const bigIntValue = scValToBigInt(retval)\r\n    return scale(bigIntValue)\r\n    \r\n  } catch (error) {\r\n    console.error(`Error in simulateRead(${contractId}, ${method}):`, error)\r\n    \r\n    // If it's an account error, fall back to demo prices\r\n    if (error instanceof Error && (error.message.includes('Account not found') || error.message.includes('invalid checksum'))) {\r\n      console.warn('Account error detected, falling back to demo prices')\r\n      // Return demo prices based on method and contract\r\n      if (method === 'lastprice') {\r\n        if (contractId === CID_USDC) return 1.0  // USDC/USD\r\n        if (contractId === CID_CEX) return 0.12  // XLM/USD\r\n      }\r\n      if (method === 'x_last_price') {\r\n        if (contractId === CID_FX) return 1000   // USD/CLP\r\n        if (contractId === CID_CEX) return 0.12  // XLM/USD\r\n      }\r\n      if (method === 'decimals') return 14\r\n      if (method === 'last_timestamp') return Math.floor(Date.now() / 1000)\r\n      return 1.0 // Default fallback\r\n    }\r\n    \r\n    throw error\r\n  }\r\n}\r\n\r\n/**\r\n * Get oracle decimals (SEP-40 standard)\r\n * @param contractId - Reflector contract ID\r\n * @returns Number of decimals\r\n */\r\nexport async function oracleDecimals(contractId: string): Promise<number> {\r\n  try {\r\n    const raw = await simulateRead(contractId, 'decimals', [])\r\n    return Math.floor(raw)\r\n  } catch (error) {\r\n    console.warn(`Failed to get decimals for ${contractId}, using default ${DEC}`)\r\n    return DEC\r\n  }\r\n}\r\n\r\n/**\r\n * Get USDC/USD price from Reflector (Stellar Public Assets)\r\n * @returns USDC price in USD\r\n */\r\nexport async function priceUSDCinUSD(): Promise<number> {\r\n  try {\r\n    // Using official Reflector client method: lastPrice(asset)\r\n    const usdcAsset = { type: AssetType.Other, code: 'USDC' }\r\n    const raw = await simulateRead(CID_USDC, 'lastprice', [\r\n      buildAssetScVal(usdcAsset)\r\n    ])\r\n    return raw\r\n  } catch (error) {\r\n    console.error('Failed to get USDC/USD price:', error)\r\n    // Fallback to demo price\r\n    return 1.0\r\n  }\r\n}\r\n\r\n/**\r\n * Get USD/CLP exchange rate from Reflector (Foreign Exchange)\r\n * @returns USD per CLP\r\n */\r\nexport async function usdPerCLP(): Promise<number> {\r\n  try {\r\n    // Using official Reflector client method: xLastPrice(base, quote)\r\n    const usdAsset = { type: AssetType.Other, code: 'USD' }\r\n    const clpAsset = { type: AssetType.Other, code: 'CLP' }\r\n    const raw = await simulateRead(CID_FX, 'x_last_price', [\r\n      buildAssetScVal(usdAsset),\r\n      buildAssetScVal(clpAsset)\r\n    ])\r\n    return raw\r\n  } catch (error) {\r\n    console.error('Failed to get USD/CLP rate:', error)\r\n    // Fallback to demo rate (1 USD = 1000 CLP)\r\n    return 1000\r\n  }\r\n}\r\n\r\n/**\r\n * Get XLM/USD price from Reflector (External CEX & DEX)\r\n * @returns XLM price in USD\r\n */\r\nexport async function priceXLMinUSD(): Promise<number> {\r\n  try {\r\n    // Using official Reflector client method: xLastPrice(base, quote)\r\n    const xlmAsset = { type: AssetType.Stellar, code: 'XLM' }\r\n    const usdAsset = { type: AssetType.Other, code: 'USD' }\r\n    const raw = await simulateRead(CID_CEX, 'x_last_price', [\r\n      buildAssetScVal(xlmAsset),\r\n      buildAssetScVal(usdAsset)\r\n    ])\r\n    return raw\r\n  } catch (error) {\r\n    console.error('Failed to get XLM/USD price:', error)\r\n    // Fallback to demo price\r\n    return 0.12\r\n  }\r\n}\r\n\r\n/**\r\n * Get CLP/USD price (inverse of USD/CLP)\r\n * @returns CLP price in USD\r\n */\r\nexport async function priceCLPinUSD(): Promise<number> {\r\n  try {\r\n    const usdPerClp = await usdPerCLP()\r\n    return 1 / usdPerClp\r\n  } catch (error) {\r\n    console.error('Failed to get CLP/USD price:', error)\r\n    return 0.001\r\n  }\r\n}\r\n\r\n/**\r\n * Get TWAP (Time-Weighted Average Price) for an asset\r\n * @param contractId - Reflector contract ID\r\n * @param asset - Asset to get TWAP for\r\n * @param records - Number of records to average\r\n * @returns TWAP price\r\n */\r\nexport async function getTwap(contractId: string, asset: { type: AssetType; code: string }, records: number = 2): Promise<number> {\r\n  try {\r\n    const raw = await simulateRead(contractId, 'twap', [\r\n      buildAssetScVal(asset),\r\n      xdr.ScVal.scvU32(records)\r\n    ])\r\n    return raw\r\n  } catch (error) {\r\n    console.error(`Failed to get TWAP for ${asset.code}:`, error)\r\n    throw error\r\n  }\r\n}\r\n\r\n/**\r\n * Get cross-asset TWAP (Time-Weighted Average Price)\r\n * @param contractId - Reflector contract ID\r\n * @param baseAsset - Base asset\r\n * @param quoteAsset - Quote asset\r\n * @param records - Number of records to average\r\n * @returns Cross-asset TWAP price\r\n */\r\nexport async function getXTwap(contractId: string, baseAsset: { type: AssetType; code: string }, quoteAsset: { type: AssetType; code: string }, records: number = 2): Promise<number> {\r\n  try {\r\n    const raw = await simulateRead(contractId, 'x_twap', [\r\n      buildAssetScVal(baseAsset),\r\n      buildAssetScVal(quoteAsset),\r\n      xdr.ScVal.scvU32(records)\r\n    ])\r\n    return raw\r\n  } catch (error) {\r\n    console.error(`Failed to get X-TWAP for ${baseAsset.code}/${quoteAsset.code}:`, error)\r\n    throw error\r\n  }\r\n}\r\n\r\n/**\r\n * Get price at specific timestamp\r\n * @param contractId - Reflector contract ID\r\n * @param asset - Asset to get price for\r\n * @param timestamp - Timestamp in milliseconds\r\n * @returns Price at timestamp\r\n */\r\nexport async function getPriceAtTimestamp(contractId: string, asset: { type: AssetType; code: string }, timestamp: number): Promise<number> {\r\n  try {\r\n    const raw = await simulateRead(contractId, 'price', [\r\n      buildAssetScVal(asset),\r\n      xdr.ScVal.scvU64(xdr.Uint64.fromString(timestamp.toString()))\r\n    ])\r\n    return raw\r\n  } catch (error) {\r\n    console.error(`Failed to get price for ${asset.code} at ${timestamp}:`, error)\r\n    throw error\r\n  }\r\n}\r\n\r\n/**\r\n * Get cross-asset price at specific timestamp\r\n * @param contractId - Reflector contract ID\r\n * @param baseAsset - Base asset\r\n * @param quoteAsset - Quote asset\r\n * @param timestamp - Timestamp in milliseconds\r\n * @returns Cross-asset price at timestamp\r\n */\r\nexport async function getXPriceAtTimestamp(contractId: string, baseAsset: { type: AssetType; code: string }, quoteAsset: { type: AssetType; code: string }, timestamp: number): Promise<number> {\r\n  try {\r\n    const raw = await simulateRead(contractId, 'x_price', [\r\n      buildAssetScVal(baseAsset),\r\n      buildAssetScVal(quoteAsset),\r\n      xdr.ScVal.scvU64(xdr.Uint64.fromString(timestamp.toString()))\r\n    ])\r\n    return raw\r\n  } catch (error) {\r\n    console.error(`Failed to get X-price for ${baseAsset.code}/${quoteAsset.code} at ${timestamp}:`, error)\r\n    throw error\r\n  }\r\n}\r\n\r\n/**\r\n * Get last timestamp from oracle\r\n * @param contractId - Reflector contract ID\r\n * @returns Last timestamp\r\n */\r\nexport async function getLastTimestamp(contractId: string): Promise<number> {\r\n  try {\r\n    const raw = await simulateRead(contractId, 'last_timestamp', [])\r\n    return Math.floor(raw)\r\n  } catch (error) {\r\n    console.error(`Failed to get last timestamp for ${contractId}:`, error)\r\n    throw error\r\n  }\r\n}\r\n\r\n/**\r\n * Get supported assets from oracle\r\n * @param contractId - Reflector contract ID\r\n * @returns Array of supported assets\r\n */\r\nexport async function getSupportedAssets(contractId: string): Promise<Array<{ type: AssetType; code: string }>> {\r\n  try {\r\n    const raw = await simulateRead(contractId, 'assets', [])\r\n    // Note: This would need proper parsing of the returned ScVal array\r\n    // For now, return empty array as this is complex to implement\r\n    console.warn('getSupportedAssets not fully implemented - would need ScVal array parsing')\r\n    return []\r\n  } catch (error) {\r\n    console.error(`Failed to get supported assets for ${contractId}:`, error)\r\n    throw error\r\n  }\r\n}\r\n\r\n/**\r\n * Test all Reflector connections with comprehensive data\r\n * @returns Object with all price data and status\r\n */\r\nexport async function testReflectorConnections() {\r\n  const results = {\r\n    usdcUsd: { price: 0, error: null, timestamp: Date.now() },\r\n    usdClp: { price: 0, error: null, timestamp: Date.now() },\r\n    xlmUsd: { price: 0, error: null, timestamp: Date.now() },\r\n    clpUsd: { price: 0, error: null, timestamp: Date.now() },\r\n    decimals: { usdc: 0, fx: 0, cex: 0, errors: [] },\r\n    lastTimestamps: { usdc: 0, fx: 0, cex: 0, errors: [] },\r\n    twaps: { usdc: 0, xlm: 0, errors: [] }\r\n  }\r\n\r\n  try {\r\n    // Test USDC/USD\r\n    results.usdcUsd.price = await priceUSDCinUSD()\r\n  } catch (error) {\r\n    results.usdcUsd.error = error instanceof Error ? error.message : 'Unknown error'\r\n  }\r\n\r\n  try {\r\n    // Test USD/CLP\r\n    results.usdClp.price = await usdPerCLP()\r\n  } catch (error) {\r\n    results.usdClp.error = error instanceof Error ? error.message : 'Unknown error'\r\n  }\r\n\r\n  try {\r\n    // Test XLM/USD\r\n    results.xlmUsd.price = await priceXLMinUSD()\r\n  } catch (error) {\r\n    results.xlmUsd.error = error instanceof Error ? error.message : 'Unknown error'\r\n  }\r\n\r\n  try {\r\n    // Test CLP/USD (derived)\r\n    results.clpUsd.price = await priceCLPinUSD()\r\n  } catch (error) {\r\n    results.clpUsd.error = error instanceof Error ? error.message : 'Unknown error'\r\n  }\r\n\r\n  try {\r\n    // Test decimals\r\n    results.decimals.usdc = await oracleDecimals(CID_USDC)\r\n    results.decimals.fx = await oracleDecimals(CID_FX)\r\n    results.decimals.cex = await oracleDecimals(CID_CEX)\r\n  } catch (error) {\r\n    results.decimals.errors.push(error instanceof Error ? error.message : 'Unknown error')\r\n  }\r\n\r\n  try {\r\n    // Test last timestamps\r\n    results.lastTimestamps.usdc = await getLastTimestamp(CID_USDC)\r\n    results.lastTimestamps.fx = await getLastTimestamp(CID_FX)\r\n    results.lastTimestamps.cex = await getLastTimestamp(CID_CEX)\r\n  } catch (error) {\r\n    results.lastTimestamps.errors.push(error instanceof Error ? error.message : 'Unknown error')\r\n  }\r\n\r\n  try {\r\n    // Test TWAPs\r\n    const usdcAsset = { type: AssetType.Other, code: 'USDC' }\r\n    const xlmAsset = { type: AssetType.Stellar, code: 'XLM' }\r\n    results.twaps.usdc = await getTwap(CID_USDC, usdcAsset, 2)\r\n    results.twaps.xlm = await getTwap(CID_CEX, xlmAsset, 2)\r\n  } catch (error) {\r\n    results.twaps.errors.push(error instanceof Error ? error.message : 'Unknown error')\r\n  }\r\n\r\n  return results\r\n}"],"names":[],"mappings":"AAAA,+DAA+D;AAC/D,oDAAoD;;;;;;;;;;;;;;;;AAMxC;AAkEU;AAvEtB;AAGA;;;AAEA,MAAM,MAAM,2EAA+C;AAC3D,MAAM,MAAM,yEAAsD,+KAAA,CAAA,WAAQ,CAAC,OAAO;AAElF,gEAAgE;AAChE,MAAM,WAAW,gGAAsD;AACvE,MAAM,SAAW,gGAAoD;AACrE,MAAM,UAAW,gGAAqD;AAEtE,MAAM,SAAS,IAAI,+KAAA,CAAA,MAAG,CAAC,MAAM,CAAC,KAAK;IAAE,WAAW;AAAK;AACrD,MAAM,MAAM;AACZ,MAAM,QAAQ,SAAC;QAAW,qEAAE;WAAQ,OAAO,KAAK,MAAI;;AAEpD,+CAA+C;AAC/C,IAAA,AAAK,mCAAA;;;WAAA;EAAA;AAKL,yDAAyD;AACzD,MAAM,eAAe,CAAC,SAAmB,+KAAA,CAAA,MAAG,CAAC,KAAK,CAAC,SAAS,CAAC;AAE7D,uDAAuD;AACvD,MAAM,eAAe,CAAC,MAAgB,+KAAA,CAAA,MAAG,CAAC,KAAK,CAAC,SAAS,CAAC;AAE1D;;;;CAIC,GACD,SAAS,gBAAgB,KAAwC;IAC/D,IAAI,eAAoC;IAExC,OAAQ,MAAM,IAAI;QAChB;YAAwB;gBACtB,MAAM,eAAe,MAAM,IAAI,CAAC,KAAK,CAAC;gBACtC,IAAI,aAAa,MAAM,KAAK,GAAG;oBAC7B,MAAM,CAAC,WAAW,OAAO,GAAG;oBAC5B,IAAI,CAAC,aAAa,CAAC,QAAQ;wBACzB,MAAM,IAAI,MAAM;oBAClB;oBACA,IAAI,CAAC,+KAAA,CAAA,SAAM,CAAC,uBAAuB,CAAC,SAAS;wBAC3C,MAAM,IAAI,MAAM;oBAClB;oBACA,eAAe,IAAI,+KAAA,CAAA,QAAY,CAAC,WAAW;gBAC7C,OAAO,IAAI,MAAM,IAAI,KAAK,OAAO;oBAC/B,eAAe,+KAAA,CAAA,QAAY,CAAC,MAAM;gBACpC,OAAO;oBACL,cAAc;oBACd,IAAI,CAAC,+KAAA,CAAA,SAAM,CAAC,eAAe,CAAC,MAAM,IAAI,GAAG;wBACvC,MAAM,IAAI,MAAM,AAAC,cAAwB,OAAX,MAAM,IAAI,EAAC;oBAC3C;oBACA,OAAO,IAAI,+KAAA,CAAA,UAAO,CAAC,MAAM,IAAI,EAAE,OAAO;gBACxC;gBACA;YACF;QACA;YACE,IAAI,MAAM,IAAI,CAAC,MAAM,GAAG,IAAI;gBAC1B,MAAM,IAAI,MAAM;YAClB;YACA,OAAO,aAAa,MAAM,IAAI;QAChC;YACE,MAAM,IAAI,MAAM,AAAC,cAAwB,OAAX,MAAM,IAAI,EAAC;IAC7C;IAEA,IAAI,cAAc;QAChB,MAAM,kBAAkB,IAAI,+KAAA,CAAA,MAAG,CAAC,wBAAwB,CAAC;YACvD,WAAW,CAAA,GAAA,+KAAA,CAAA,OAAI,AAAD,EAAE,8JAAA,CAAA,SAAM,CAAC,IAAI,CAAC;YAC5B,oBAAoB,+KAAA,CAAA,MAAG,CAAC,kBAAkB,CAAC,2BAA2B,CAAC,aAAa,WAAW;QACjG;QACA,MAAM,WAAW,+KAAA,CAAA,MAAG,CAAC,cAAc,CAAC,sBAAsB,CAAC;QAC3D,MAAM,aAAa,+KAAA,CAAA,SAAM,CAAC,cAAc,CAAC,CAAA,GAAA,+KAAA,CAAA,OAAI,AAAD,EAAE,SAAS,KAAK;QAC5D,OAAO,IAAI,+KAAA,CAAA,UAAO,CAAC,YAAY,OAAO;IACxC;IAEA,MAAM,IAAI,MAAM;AAClB;AAEA;;;;CAIC,GACD,SAAS,mBAAmB,aAAkB;IAC5C,IAAI,CAAC,iBAAiB,CAAC,cAAc,WAAW,EAAE;QAChD,OAAO;IACT;IAEA,IAAI;QACF,OAAO,CAAA,GAAA,+KAAA,CAAA,gBAAa,AAAD,EAAE,cAAc,WAAW;IAChD,EAAE,OAAO,OAAO;QACd,QAAQ,IAAI,CAAC,mCAAmC;QAChD,OAAO;IACT;AACF;AASO,eAAe,aAAa,UAAkB,EAAE,MAAc,EAAE,IAAiB;IACtF,IAAI;YAuCW;QAtCb,MAAM,SAAS,CAAA,GAAA,mIAAA,CAAA,cAAW,AAAD;QAEzB,kCAAkC;QAClC,IAAI,OAAO,UAAU,CAAC,UAAU;YAC9B,QAAQ,IAAI,CAAC;YACb,kDAAkD;YAClD,IAAI,WAAW,aAAa;gBAC1B,IAAI,eAAe,UAAU,OAAO,IAAK,WAAW;;gBACpD,IAAI,eAAe,SAAS,OAAO,KAAM,UAAU;;YACrD;YACA,IAAI,WAAW,gBAAgB;gBAC7B,IAAI,eAAe,QAAQ,OAAO,KAAO,UAAU;;gBACnD,IAAI,eAAe,SAAS,OAAO,KAAM,UAAU;;YACrD;YACA,IAAI,WAAW,YAAY,OAAO;YAClC,IAAI,WAAW,kBAAkB,OAAO,KAAK,KAAK,CAAC,KAAK,GAAG,KAAK;YAChE,OAAO,IAAI,mBAAmB;;QAChC;QAEA,QAAQ,GAAG,CAAC;QAEd,MAAM,UAAU,MAAM,OAAO,UAAU,CAAC;QACxC,MAAM,WAAW,IAAI,+KAAA,CAAA,WAAQ,CAAC;QAE5B,MAAM,KAAK,IAAI,+KAAA,CAAA,qBAAkB,CAAC,SAAS;YACzC,KAAK,+KAAA,CAAA,WAAQ;YACb,mBAAmB;QACrB,GACC,YAAY,CAAC,SAAS,IAAI,CAAC,WAAW,OACpC,UAAU,CAAC,IACb,KAAK;QAER,MAAM,MAAM,MAAM,OAAO,mBAAmB,CAAC;QAE3C,IAAI,+KAAA,CAAA,MAAG,CAAC,GAAG,CAAC,iBAAiB,CAAC,MAAM;YAClC,MAAM,IAAI,MAAM,AAAC,qBAA8B,OAAV,IAAI,KAAK;QAChD;YAEa;QAAf,MAAM,SAAS,CAAA,kBAAA,UAAA,AAAC,IAAY,MAAM,cAAnB,8BAAA,QAAqB,MAAM,cAA3B,4BAAA,iBAA+B,AAAC,IAAY,MAAM;QAC/D,IAAI,CAAC,QAAQ;YACX,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,cAAc,CAAA,GAAA,+KAAA,CAAA,gBAAa,AAAD,EAAE;QAClC,OAAO,MAAM;IAEf,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,AAAC,yBAAuC,OAAf,YAAW,MAAW,OAAP,QAAO,OAAK;QAElE,qDAAqD;QACrD,IAAI,iBAAiB,SAAS,CAAC,MAAM,OAAO,CAAC,QAAQ,CAAC,wBAAwB,MAAM,OAAO,CAAC,QAAQ,CAAC,mBAAmB,GAAG;YACzH,QAAQ,IAAI,CAAC;YACb,kDAAkD;YAClD,IAAI,WAAW,aAAa;gBAC1B,IAAI,eAAe,UAAU,OAAO,IAAK,WAAW;;gBACpD,IAAI,eAAe,SAAS,OAAO,KAAM,UAAU;;YACrD;YACA,IAAI,WAAW,gBAAgB;gBAC7B,IAAI,eAAe,QAAQ,OAAO,KAAO,UAAU;;gBACnD,IAAI,eAAe,SAAS,OAAO,KAAM,UAAU;;YACrD;YACA,IAAI,WAAW,YAAY,OAAO;YAClC,IAAI,WAAW,kBAAkB,OAAO,KAAK,KAAK,CAAC,KAAK,GAAG,KAAK;YAChE,OAAO,IAAI,mBAAmB;;QAChC;QAEA,MAAM;IACR;AACF;AAOO,eAAe,eAAe,UAAkB;IACrD,IAAI;QACF,MAAM,MAAM,MAAM,aAAa,YAAY,YAAY,EAAE;QACzD,OAAO,KAAK,KAAK,CAAC;IACpB,EAAE,OAAO,OAAO;QACd,QAAQ,IAAI,CAAC,AAAC,8BAA0D,OAA7B,YAAW,oBAAsB,OAAJ;QACxE,OAAO;IACT;AACF;AAMO,eAAe;IACpB,IAAI;QACF,2DAA2D;QAC3D,MAAM,YAAY;YAAE,IAAI;YAAmB,MAAM;QAAO;QACxD,MAAM,MAAM,MAAM,aAAa,UAAU,aAAa;YACpD,gBAAgB;SACjB;QACD,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,yBAAyB;QACzB,OAAO;IACT;AACF;AAMO,eAAe;IACpB,IAAI;QACF,kEAAkE;QAClE,MAAM,WAAW;YAAE,IAAI;YAAmB,MAAM;QAAM;QACtD,MAAM,WAAW;YAAE,IAAI;YAAmB,MAAM;QAAM;QACtD,MAAM,MAAM,MAAM,aAAa,QAAQ,gBAAgB;YACrD,gBAAgB;YAChB,gBAAgB;SACjB;QACD,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,2CAA2C;QAC3C,OAAO;IACT;AACF;AAMO,eAAe;IACpB,IAAI;QACF,kEAAkE;QAClE,MAAM,WAAW;YAAE,IAAI;YAAqB,MAAM;QAAM;QACxD,MAAM,WAAW;YAAE,IAAI;YAAmB,MAAM;QAAM;QACtD,MAAM,MAAM,MAAM,aAAa,SAAS,gBAAgB;YACtD,gBAAgB;YAChB,gBAAgB;SACjB;QACD,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,yBAAyB;QACzB,OAAO;IACT;AACF;AAMO,eAAe;IACpB,IAAI;QACF,MAAM,YAAY,MAAM;QACxB,OAAO,IAAI;IACb,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO;IACT;AACF;AASO,eAAe,QAAQ,UAAkB,EAAE,KAAwC;QAAE,UAAA,iEAAkB;IAC5G,IAAI;QACF,MAAM,MAAM,MAAM,aAAa,YAAY,QAAQ;YACjD,gBAAgB;YAChB,+KAAA,CAAA,MAAG,CAAC,KAAK,CAAC,MAAM,CAAC;SAClB;QACD,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,AAAC,0BAAoC,OAAX,MAAM,IAAI,EAAC,MAAI;QACvD,MAAM;IACR;AACF;AAUO,eAAe,SAAS,UAAkB,EAAE,SAA4C,EAAE,UAA6C;QAAE,UAAA,iEAAkB;IAChK,IAAI;QACF,MAAM,MAAM,MAAM,aAAa,YAAY,UAAU;YACnD,gBAAgB;YAChB,gBAAgB;YAChB,+KAAA,CAAA,MAAG,CAAC,KAAK,CAAC,MAAM,CAAC;SAClB;QACD,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,AAAC,4BAA6C,OAAlB,UAAU,IAAI,EAAC,KAAmB,OAAhB,WAAW,IAAI,EAAC,MAAI;QAChF,MAAM;IACR;AACF;AASO,eAAe,oBAAoB,UAAkB,EAAE,KAAwC,EAAE,SAAiB;IACvH,IAAI;QACF,MAAM,MAAM,MAAM,aAAa,YAAY,SAAS;YAClD,gBAAgB;YAChB,+KAAA,CAAA,MAAG,CAAC,KAAK,CAAC,MAAM,CAAC,+KAAA,CAAA,MAAG,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,QAAQ;SAC1D;QACD,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,AAAC,2BAA2C,OAAjB,MAAM,IAAI,EAAC,QAAgB,OAAV,WAAU,MAAI;QACxE,MAAM;IACR;AACF;AAUO,eAAe,qBAAqB,UAAkB,EAAE,SAA4C,EAAE,UAA6C,EAAE,SAAiB;IAC3K,IAAI;QACF,MAAM,MAAM,MAAM,aAAa,YAAY,WAAW;YACpD,gBAAgB;YAChB,gBAAgB;YAChB,+KAAA,CAAA,MAAG,CAAC,KAAK,CAAC,MAAM,CAAC,+KAAA,CAAA,MAAG,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,QAAQ;SAC1D;QACD,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,AAAC,6BAA8C,OAAlB,UAAU,IAAI,EAAC,KAAyB,OAAtB,WAAW,IAAI,EAAC,QAAgB,OAAV,WAAU,MAAI;QACjG,MAAM;IACR;AACF;AAOO,eAAe,iBAAiB,UAAkB;IACvD,IAAI;QACF,MAAM,MAAM,MAAM,aAAa,YAAY,kBAAkB,EAAE;QAC/D,OAAO,KAAK,KAAK,CAAC;IACpB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,AAAC,oCAA8C,OAAX,YAAW,MAAI;QACjE,MAAM;IACR;AACF;AAOO,eAAe,mBAAmB,UAAkB;IACzD,IAAI;QACF,MAAM,MAAM,MAAM,aAAa,YAAY,UAAU,EAAE;QACvD,mEAAmE;QACnE,8DAA8D;QAC9D,QAAQ,IAAI,CAAC;QACb,OAAO,EAAE;IACX,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,AAAC,sCAAgD,OAAX,YAAW,MAAI;QACnE,MAAM;IACR;AACF;AAMO,eAAe;IACpB,MAAM,UAAU;QACd,SAAS;YAAE,OAAO;YAAG,OAAO;YAAM,WAAW,KAAK,GAAG;QAAG;QACxD,QAAQ;YAAE,OAAO;YAAG,OAAO;YAAM,WAAW,KAAK,GAAG;QAAG;QACvD,QAAQ;YAAE,OAAO;YAAG,OAAO;YAAM,WAAW,KAAK,GAAG;QAAG;QACvD,QAAQ;YAAE,OAAO;YAAG,OAAO;YAAM,WAAW,KAAK,GAAG;QAAG;QACvD,UAAU;YAAE,MAAM;YAAG,IAAI;YAAG,KAAK;YAAG,QAAQ,EAAE;QAAC;QAC/C,gBAAgB;YAAE,MAAM;YAAG,IAAI;YAAG,KAAK;YAAG,QAAQ,EAAE;QAAC;QACrD,OAAO;YAAE,MAAM;YAAG,KAAK;YAAG,QAAQ,EAAE;QAAC;IACvC;IAEA,IAAI;QACF,gBAAgB;QAChB,QAAQ,OAAO,CAAC,KAAK,GAAG,MAAM;IAChC,EAAE,OAAO,OAAO;QACd,QAAQ,OAAO,CAAC,KAAK,GAAG,iBAAiB,QAAQ,MAAM,OAAO,GAAG;IACnE;IAEA,IAAI;QACF,eAAe;QACf,QAAQ,MAAM,CAAC,KAAK,GAAG,MAAM;IAC/B,EAAE,OAAO,OAAO;QACd,QAAQ,MAAM,CAAC,KAAK,GAAG,iBAAiB,QAAQ,MAAM,OAAO,GAAG;IAClE;IAEA,IAAI;QACF,eAAe;QACf,QAAQ,MAAM,CAAC,KAAK,GAAG,MAAM;IAC/B,EAAE,OAAO,OAAO;QACd,QAAQ,MAAM,CAAC,KAAK,GAAG,iBAAiB,QAAQ,MAAM,OAAO,GAAG;IAClE;IAEA,IAAI;QACF,yBAAyB;QACzB,QAAQ,MAAM,CAAC,KAAK,GAAG,MAAM;IAC/B,EAAE,OAAO,OAAO;QACd,QAAQ,MAAM,CAAC,KAAK,GAAG,iBAAiB,QAAQ,MAAM,OAAO,GAAG;IAClE;IAEA,IAAI;QACF,gBAAgB;QAChB,QAAQ,QAAQ,CAAC,IAAI,GAAG,MAAM,eAAe;QAC7C,QAAQ,QAAQ,CAAC,EAAE,GAAG,MAAM,eAAe;QAC3C,QAAQ,QAAQ,CAAC,GAAG,GAAG,MAAM,eAAe;IAC9C,EAAE,OAAO,OAAO;QACd,QAAQ,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,QAAQ,MAAM,OAAO,GAAG;IACxE;IAEA,IAAI;QACF,uBAAuB;QACvB,QAAQ,cAAc,CAAC,IAAI,GAAG,MAAM,iBAAiB;QACrD,QAAQ,cAAc,CAAC,EAAE,GAAG,MAAM,iBAAiB;QACnD,QAAQ,cAAc,CAAC,GAAG,GAAG,MAAM,iBAAiB;IACtD,EAAE,OAAO,OAAO;QACd,QAAQ,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,QAAQ,MAAM,OAAO,GAAG;IAC9E;IAEA,IAAI;QACF,aAAa;QACb,MAAM,YAAY;YAAE,IAAI;YAAmB,MAAM;QAAO;QACxD,MAAM,WAAW;YAAE,IAAI;YAAqB,MAAM;QAAM;QACxD,QAAQ,KAAK,CAAC,IAAI,GAAG,MAAM,QAAQ,UAAU,WAAW;QACxD,QAAQ,KAAK,CAAC,GAAG,GAAG,MAAM,QAAQ,SAAS,UAAU;IACvD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,QAAQ,MAAM,OAAO,GAAG;IACrE;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 474, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/components/atoms/ConnectButton.tsx"],"sourcesContent":["'use client'\r\nimport freighter from '@stellar/freighter-api'\r\n\r\nexport async function conectarFreighter(): Promise<string> {\r\n  if (typeof (window as any).freighterApi === 'undefined') {\r\n    throw new Error('Freighter no detectada. Verifica extensión y permisos de sitio.')\r\n  }\r\n  const c = await freighter.isConnected(); if (!c.isConnected) throw new Error('Freighter no conectada')\r\n  const p = await freighter.setAllowed();  if (!p.isAllowed)   throw new Error('Permiso denegado')\r\n  const a1 = await freighter.getAddress(); if (a1.address) return a1.address\r\n  const a2 = await freighter.requestAccess(); if (a2.error || !a2.address) throw new Error(a2.error || 'Sin address')\r\n  return a2.address\r\n}\r\n"],"names":[],"mappings":";;;AACA;AADA;;AAGO,eAAe;IACpB,IAAI,OAAO,AAAC,OAAe,YAAY,KAAK,aAAa;QACvD,MAAM,IAAI,MAAM;IAClB;IACA,MAAM,IAAI,MAAM,yKAAA,CAAA,UAAS,CAAC,WAAW;IAAI,IAAI,CAAC,EAAE,WAAW,EAAE,MAAM,IAAI,MAAM;IAC7E,MAAM,IAAI,MAAM,yKAAA,CAAA,UAAS,CAAC,UAAU;IAAK,IAAI,CAAC,EAAE,SAAS,EAAI,MAAM,IAAI,MAAM;IAC7E,MAAM,KAAK,MAAM,yKAAA,CAAA,UAAS,CAAC,UAAU;IAAI,IAAI,GAAG,OAAO,EAAE,OAAO,GAAG,OAAO;IAC1E,MAAM,KAAK,MAAM,yKAAA,CAAA,UAAS,CAAC,aAAa;IAAI,IAAI,GAAG,KAAK,IAAI,CAAC,GAAG,OAAO,EAAE,MAAM,IAAI,MAAM,GAAG,KAAK,IAAI;IACrG,OAAO,GAAG,OAAO;AACnB","debugId":null}},
    {"offset": {"line": 503, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/components/molecules/wallet-data/index.tsx"],"sourcesContent":["'use client'\r\nimport { useState } from 'react'\r\nimport { conectarFreighter } from '@/components/atoms/ConnectButton'\r\n\r\nexport function WalletData() {\r\n  const [addr, setAddr] = useState<string>()\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState<string>()\r\n\r\n  const handleConnect = async () => {\r\n    setIsLoading(true)\r\n    setError(undefined)\r\n    \r\n    try {\r\n      const address = await conectarFreighter()\r\n      setAddr(address)\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido'\r\n      \r\n      // Si Freighter no está detectada, redirigir a la página oficial\r\n      if (errorMessage.includes('Freighter no detectada')) {\r\n        window.open('https://freighter.app/', '_blank')\r\n        return\r\n      }\r\n      \r\n      setError(errorMessage)\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleDisconnect = () => {\r\n    setAddr(undefined)\r\n    setError(undefined)\r\n  }\r\n\r\n  if (addr) {\r\n    return (\r\n      <div className=\"flex items-center space-x-3\">\r\n        <div className=\"px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm font-medium\">\r\n          {addr.slice(0,4)}…{addr.slice(-4)}\r\n        </div>\r\n        <button \r\n          onClick={handleDisconnect}\r\n          className=\"text-xs text-red-600 hover:text-red-700\"\r\n        >\r\n          Desconectar\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-end space-y-2\">\r\n      <button \r\n        className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-medium disabled:opacity-50\"\r\n        onClick={handleConnect}\r\n        disabled={isLoading}\r\n      >\r\n        {isLoading ? 'Conectando...' : 'Connect Wallet'}\r\n      </button>\r\n      {error && (\r\n        <p className=\"text-xs text-red-600 text-right max-w-xs\">\r\n          {error}\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;;;AAFA;;;AAIO,SAAS;;IACd,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD;IAC/B,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD;IAEjC,MAAM,gBAAgB;QACpB,aAAa;QACb,SAAS;QAET,IAAI;YACF,MAAM,UAAU,MAAM,CAAA,GAAA,2JAAA,CAAA,oBAAiB,AAAD;YACtC,QAAQ;QACV,EAAE,OAAO,KAAK;YACZ,MAAM,eAAe,eAAe,QAAQ,IAAI,OAAO,GAAG;YAE1D,gEAAgE;YAChE,IAAI,aAAa,QAAQ,CAAC,2BAA2B;gBACnD,OAAO,IAAI,CAAC,0BAA0B;gBACtC;YACF;YAEA,SAAS;QACX,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,mBAAmB;QACvB,QAAQ;QACR,SAAS;IACX;IAEA,IAAI,MAAM;QACR,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;wBACZ,KAAK,KAAK,CAAC,GAAE;wBAAG;wBAAE,KAAK,KAAK,CAAC,CAAC;;;;;;;8BAEjC,6LAAC;oBACC,SAAS;oBACT,WAAU;8BACX;;;;;;;;;;;;IAKP;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBACC,WAAU;gBACV,SAAS;gBACT,UAAU;0BAET,YAAY,kBAAkB;;;;;;YAEhC,uBACC,6LAAC;gBAAE,WAAU;0BACV;;;;;;;;;;;;AAKX;GAhEgB;KAAA","debugId":null}},
    {"offset": {"line": 614, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/components/layout/Header.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Search, Bell } from \"lucide-react\";\r\nimport Link from \"next/link\";\r\nimport { useApp } from \"@/contexts/AppContext\";\r\nimport { WalletData } from \"@/components/molecules/wallet-data\";\r\nimport Image from \"next/image\";\r\n\r\ninterface HeaderProps {\r\n  showSearch?: boolean;\r\n}\r\n\r\nexport default function Header({ showSearch = true }: HeaderProps) {\r\n  const { state, clearNotifications } = useApp();\r\n  const { user, notifications } = state;\r\n\r\n  return (\r\n    <header className=\"bg-white/90 backdrop-blur-sm border-b border-stellar-100 sticky top-0 z-50\">\r\n      <div className=\"max-w-screen-xl mx-auto px-8 py-4\">\r\n        <div className=\"flex items-center justify-between\">\r\n          {/* Logo */}\r\n          <Link href=\"/\" className=\"flex items-center space-x-3\">\r\n            <Image \r\n              src=\"/favicon.png\" \r\n              alt=\"Stellar Logo\" \r\n              width={32} \r\n              height={32} \r\n              className=\"w-8 h-8\"\r\n            />\r\n            <span className=\"text-2xl font-bold gradient-text\">AhorroStellar</span>\r\n          </Link>\r\n\r\n          {/* Search Bar */}\r\n          {showSearch && (\r\n            <div className=\"flex-1 max-w-md mx-8\">\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search projects, users...\"\r\n                  className=\"w-full pl-10 pr-4 py-2 border border-stellar-100 rounded-lg focus:ring-2 focus:ring-stellarBlue focus:border-transparent\"\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Right Side - Notifications & Profile */}\r\n          <div className=\"flex items-center space-x-4\">\r\n            <button \r\n              className=\"p-3 rounded-lg hover:bg-stellar-100 transition-colors relative\"\r\n              onClick={clearNotifications}\r\n            >\r\n              <Bell className=\"w-6 h-6 text-gray-600\" />\r\n              {notifications > 0 && (\r\n                <span className=\"absolute -top-1 -right-1 w-5 h-5 bg-red-500 rounded-full text-white text-xs flex items-center justify-center\">\r\n                  {notifications}\r\n                </span>\r\n              )}\r\n            </button>\r\n\r\n            {/* Wallet Connect Button */}\r\n            <WalletData />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAAA;AACA;AACA;AACA;AACA;;;AANA;;;;;;AAYe,SAAS,OAAO,KAAkC;QAAlC,EAAE,aAAa,IAAI,EAAe,GAAlC;;IAC7B,MAAM,EAAE,KAAK,EAAE,kBAAkB,EAAE,GAAG,CAAA,GAAA,6IAAA,CAAA,SAAM,AAAD;IAC3C,MAAM,EAAE,IAAI,EAAE,aAAa,EAAE,GAAG;IAEhC,qBACE,6LAAC;QAAO,WAAU;kBAChB,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC,+JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAI,WAAU;;0CACvB,6LAAC,gIAAA,CAAA,UAAK;gCACJ,KAAI;gCACJ,KAAI;gCACJ,OAAO;gCACP,QAAQ;gCACR,WAAU;;;;;;0CAEZ,6LAAC;gCAAK,WAAU;0CAAmC;;;;;;;;;;;;oBAIpD,4BACC,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,yMAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;8CAClB,6LAAC;oCACC,MAAK;oCACL,aAAY;oCACZ,WAAU;;;;;;;;;;;;;;;;;kCAOlB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCACC,WAAU;gCACV,SAAS;;kDAET,6LAAC,qMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;oCACf,gBAAgB,mBACf,6LAAC;wCAAK,WAAU;kDACb;;;;;;;;;;;;0CAMP,6LAAC,yKAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMvB;GAvDwB;;QACgB,6IAAA,CAAA,SAAM;;;KADtB","debugId":null}},
    {"offset": {"line": 778, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/components/layout/Sidebar.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Home, FolderOpen, LogOut, Target, Shield, Activity } from \"lucide-react\";\r\nimport Link from \"next/link\";\r\nimport { usePathname } from \"next/navigation\";\r\nimport { useApp } from \"@/contexts/AppContext\";\r\n\r\nexport default function Sidebar() {\r\n  const pathname = usePathname();\r\n  const { state, disconnectWallet } = useApp();\r\n  const { user, wallet } = state;\r\n\r\n  const navigation = [\r\n    { name: \"Dashboard\", href: \"/dashboard\", icon: Home },\r\n    { name: \"Vote-Save\", href: \"/stake\", icon: Target },\r\n    { name: \"Reflector Debug\", href: \"/reflector-debug\", icon: Activity },\r\n  ];\r\n\r\n  const isActive = (href: string) => pathname === href;\r\n\r\n  const handleLogout = () => {\r\n    disconnectWallet();\r\n    // In a real app, you would also clear user session\r\n  };\r\n\r\n  return (\r\n    <aside className=\"w-72 bg-white/80 backdrop-blur-sm border-r border-gray-200 sticky top-16 h-screen overflow-y-auto hidden lg:block\">\r\n      <div className=\"p-6\">\r\n        {/* Navigation */}\r\n        <nav className=\"space-y-2 mb-8\">\r\n          {navigation.map((item) => {\r\n            const Icon = item.icon;\r\n            return (\r\n              <Link\r\n                key={item.name}\r\n                href={item.href}\r\n                className={`flex items-center space-x-3 px-4 py-3 rounded-lg transition-colors ${\r\n                  isActive(item.href)\r\n                    ? \"bg-blue-100 text-blue-700 font-medium shadow-sm\"\r\n                    : \"hover:bg-blue-50 text-gray-600 hover:text-blue-700\"\r\n                }`}\r\n              >\r\n                <Icon className=\"w-5 h-5\" />\r\n                <span>{item.name}</span>\r\n              </Link>\r\n            );\r\n          })}\r\n        </nav>\r\n\r\n        {/* Quick Stats */}\r\n        <div className=\"space-y-4 mb-8\">\r\n          <h3 className=\"text-sm font-semibold text-gray-700 mb-4\">Quick Summary</h3>\r\n          \r\n          <div className=\"bg-blue-50 rounded-lg p-4\">\r\n            <div className=\"flex items-center justify-between mb-2\">\r\n              <span className=\"text-sm text-gray-600\">USDC Bloqueados</span>\r\n              <span className=\"text-sm font-semibold text-blue-600\">\r\n                {user?.activeStakes || '0'} USDC\r\n              </span>\r\n            </div>\r\n            <div className=\"flex items-center justify-between mb-2\">\r\n              <span className=\"text-sm text-gray-600\">Backed Projects</span>\r\n              <span className=\"text-sm font-semibold text-green-600\">\r\n                {state.myStakedProjects.length}\r\n              </span>\r\n            </div>\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm text-gray-600\">Reputation</span>\r\n              <span className=\"text-sm font-semibold text-purple-600\">\r\n                {user?.reputationLevel || 'Bronze'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Security Info */}\r\n        <div className=\"space-y-3 mb-8\">\r\n          <h3 className=\"text-sm font-semibold text-gray-700 mb-4\">Security</h3>\r\n          \r\n          <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\r\n            <div className=\"flex items-center space-x-2 mb-2\">\r\n              <Shield className=\"w-4 h-4 text-green-600\" />\r\n              <span className=\"text-sm font-medium text-green-700\">Your savings are safe</span>\r\n            </div>\r\n            <div className=\"space-y-1 text-xs text-green-600\">\r\n              <p>• USDC se bloquea por 7 días</p>\r\n              <p>• Se recupera automáticamente</p>\r\n              <p>• Sin riesgo de pérdida</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Bottom Actions */}\r\n        <div className=\"border-t border-gray-200 pt-6\">\r\n          <div className=\"space-y-2\">\r\n            <button \r\n              onClick={handleLogout}\r\n              className=\"flex items-center space-x-3 px-4 py-3 text-red-600 hover:text-red-700 hover:bg-red-50 rounded-lg transition-colors w-full\"\r\n            >\r\n              <LogOut className=\"w-5 h-5\" />\r\n              <span>Sign Out</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </aside>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;AALA;;;;;AAOe,SAAS;;IACtB,MAAM,WAAW,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,EAAE,KAAK,EAAE,gBAAgB,EAAE,GAAG,CAAA,GAAA,6IAAA,CAAA,SAAM,AAAD;IACzC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG;IAEzB,MAAM,aAAa;QACjB;YAAE,MAAM;YAAa,MAAM;YAAc,MAAM,sMAAA,CAAA,OAAI;QAAC;QACpD;YAAE,MAAM;YAAa,MAAM;YAAU,MAAM,yMAAA,CAAA,SAAM;QAAC;QAClD;YAAE,MAAM;YAAmB,MAAM;YAAoB,MAAM,6MAAA,CAAA,WAAQ;QAAC;KACrE;IAED,MAAM,WAAW,CAAC,OAAiB,aAAa;IAEhD,MAAM,eAAe;QACnB;IACA,mDAAmD;IACrD;IAEA,qBACE,6LAAC;QAAM,WAAU;kBACf,cAAA,6LAAC;YAAI,WAAU;;8BAEb,6LAAC;oBAAI,WAAU;8BACZ,WAAW,GAAG,CAAC,CAAC;wBACf,MAAM,OAAO,KAAK,IAAI;wBACtB,qBACE,6LAAC,+JAAA,CAAA,UAAI;4BAEH,MAAM,KAAK,IAAI;4BACf,WAAW,AAAC,sEAIX,OAHC,SAAS,KAAK,IAAI,IACd,oDACA;;8CAGN,6LAAC;oCAAK,WAAU;;;;;;8CAChB,6LAAC;8CAAM,KAAK,IAAI;;;;;;;2BATX,KAAK,IAAI;;;;;oBAYpB;;;;;;8BAIF,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAA2C;;;;;;sCAEzD,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAK,WAAU;sDAAwB;;;;;;sDACxC,6LAAC;4CAAK,WAAU;;gDACb,CAAA,iBAAA,2BAAA,KAAM,YAAY,KAAI;gDAAI;;;;;;;;;;;;;8CAG/B,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAK,WAAU;sDAAwB;;;;;;sDACxC,6LAAC;4CAAK,WAAU;sDACb,MAAM,gBAAgB,CAAC,MAAM;;;;;;;;;;;;8CAGlC,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAK,WAAU;sDAAwB;;;;;;sDACxC,6LAAC;4CAAK,WAAU;sDACb,CAAA,iBAAA,2BAAA,KAAM,eAAe,KAAI;;;;;;;;;;;;;;;;;;;;;;;;8BAOlC,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAA2C;;;;;;sCAEzD,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;;sDACb,6LAAC,yMAAA,CAAA,SAAM;4CAAC,WAAU;;;;;;sDAClB,6LAAC;4CAAK,WAAU;sDAAqC;;;;;;;;;;;;8CAEvD,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;sDAAE;;;;;;sDACH,6LAAC;sDAAE;;;;;;sDACH,6LAAC;sDAAE;;;;;;;;;;;;;;;;;;;;;;;;8BAMT,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BACC,SAAS;4BACT,WAAU;;8CAEV,6LAAC,6MAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;8CAClB,6LAAC;8CAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOpB;GApGwB;;QACL,qIAAA,CAAA,cAAW;QACQ,6IAAA,CAAA,SAAM;;;KAFpB","debugId":null}},
    {"offset": {"line": 1115, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/components/layout/Layout.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from 'react';\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\n\r\ninterface LayoutProps {\r\n  children: React.ReactNode;\r\n  showSidebar?: boolean;\r\n  showSearch?: boolean;\r\n}\r\n\r\nexport default function Layout({ children, showSidebar = true, showSearch = true }: LayoutProps) {\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-light to-white\">\r\n      <Header showSearch={showSearch} />\r\n      <div className=\"flex\">\r\n        {showSidebar && <Sidebar />}\r\n        <main className=\"flex-1 p-4 lg:p-8\">\r\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            {children}\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAYe,SAAS,OAAO,KAAgE;QAAhE,EAAE,QAAQ,EAAE,cAAc,IAAI,EAAE,aAAa,IAAI,EAAe,GAAhE;IAC7B,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,qJAAA,CAAA,UAAM;gBAAC,YAAY;;;;;;0BACpB,6LAAC;gBAAI,WAAU;;oBACZ,6BAAe,6LAAC,sJAAA,CAAA,UAAO;;;;;kCACxB,6LAAC;wBAAK,WAAU;kCACd,cAAA,6LAAC;4BAAI,WAAU;sCACZ;;;;;;;;;;;;;;;;;;;;;;;AAMb;KAdwB","debugId":null}},
    {"offset": {"line": 1185, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/components/ui/Card.tsx"],"sourcesContent":["import React from 'react';\r\nimport { cn } from '@/lib/utils';\r\n\r\ninterface CardProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  children: React.ReactNode;\r\n  variant?: 'default' | 'glass' | 'gradient';\r\n}\r\n\r\nconst Card = React.forwardRef<HTMLDivElement, CardProps>(\r\n  ({ className, variant = 'default', children, ...props }, ref) => {\r\n    const baseClasses = 'card-stellar rounded-xl shadow-lg border border-stellar-100/50';\r\n\r\n    const variants = {\r\n      default: 'bg-white/80 backdrop-blur-sm',\r\n      glass: 'bg-white/10 backdrop-blur-md border-white/20',\r\n      gradient: 'bg-gradient-to-br from-white/90 to-white/70',\r\n    };\r\n\r\n    return (\r\n      <div\r\n        className={cn(\r\n          baseClasses,\r\n          variants[variant],\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nCard.displayName = 'Card';\r\n\r\nexport default Card;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAOA,MAAM,qBAAO,6JAAA,CAAA,UAAK,CAAC,UAAU,MAC3B,QAAyD;QAAxD,EAAE,SAAS,EAAE,UAAU,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;IACrD,MAAM,cAAc;IAEpB,MAAM,WAAW;QACf,SAAS;QACT,OAAO;QACP,UAAU;IACZ;IAEA,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EACV,aACA,QAAQ,CAAC,QAAQ,EACjB;QAEF,KAAK;QACJ,GAAG,KAAK;kBAER;;;;;;AAGP;;AAGF,KAAK,WAAW,GAAG;uCAEJ","debugId":null}},
    {"offset": {"line": 1228, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/app/reflector-debug/page.tsx"],"sourcesContent":["// [AhorroStellar][Reflector] - KALE x Reflector Hackathon 2025\r\n'use client'\r\nimport { useState, useEffect, useRef } from 'react'\r\nimport { \r\n  priceUSDCinUSD, \r\n  usdPerCLP, \r\n  priceXLMinUSD, \r\n  priceCLPinUSD,\r\n  getTwap,\r\n  getXTwap,\r\n  getLastTimestamp,\r\n  testReflectorConnections \r\n} from '@/lib/reflector'\r\nimport Layout from '@/components/layout/Layout'\r\nimport Card from '@/components/ui/Card'\r\nimport Button from '@/components/ui/Button'\r\nimport { RefreshCw, CheckCircle, XCircle, Clock, Database } from 'lucide-react'\r\n\r\ninterface PriceData {\r\n  price: number\r\n  error: string | null\r\n  timestamp: number\r\n  loading: boolean\r\n}\r\n\r\ninterface DebugData {\r\n  usdcUsd: PriceData\r\n  usdClp: PriceData\r\n  xlmUsd: PriceData\r\n  clpUsd: PriceData\r\n  decimals: {\r\n    usdc: number\r\n    fx: number\r\n    cex: number\r\n    errors: string[]\r\n  }\r\n}\r\n\r\nexport default function ReflectorDebugPage() {\r\n  const [data, setData] = useState<DebugData | null>(null)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [lastUpdate, setLastUpdate] = useState<Date | null>(null)\r\n  const [autoRefresh, setAutoRefresh] = useState(false)\r\n  const intervalRef = useRef<NodeJS.Timeout | null>(null)\r\n\r\n  const fetchData = async () => {\r\n    setIsLoading(true)\r\n    try {\r\n      const results = await testReflectorConnections()\r\n      setData({\r\n        usdcUsd: { ...results.usdcUsd, loading: false },\r\n        usdClp: { ...results.usdClp, loading: false },\r\n        xlmUsd: { ...results.xlmUsd, loading: false },\r\n        clpUsd: { ...results.clpUsd, loading: false },\r\n        decimals: results.decimals\r\n      })\r\n      setLastUpdate(new Date())\r\n    } catch (error) {\r\n      console.error('Failed to fetch Reflector data:', error)\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const testIndividual = async (testName: string, testFn: () => Promise<number>) => {\r\n    console.log(`Testing ${testName}...`)\r\n    try {\r\n      const result = await testFn()\r\n      console.log(`${testName}:`, result)\r\n      alert(`${testName}: ${result}`)\r\n    } catch (error) {\r\n      console.error(`${testName} failed:`, error)\r\n      alert(`${testName} failed: ${error}`)\r\n    }\r\n  }\r\n\r\n  // Auto-refresh effect\r\n  useEffect(() => {\r\n    if (autoRefresh) {\r\n      intervalRef.current = setInterval(fetchData, 30000) // 30 seconds\r\n    } else {\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current)\r\n        intervalRef.current = null\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current)\r\n      }\r\n    }\r\n  }, [autoRefresh])\r\n\r\n  // Initial load\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  const formatPrice = (price: number) => {\r\n    if (price >= 1) return price.toFixed(4)\r\n    if (price >= 0.01) return price.toFixed(6)\r\n    return price.toFixed(8)\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"max-w-6xl mx-auto p-6\">\r\n        <div className=\"mb-8\">\r\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\r\n            🔍 Reflector Oracle Debug\r\n          </h1>\r\n          <p className=\"text-gray-600\">\r\n            Real-time testing of Reflector Oracle price feeds for KALE x Reflector Hackathon 2025\r\n          </p>\r\n          \r\n          {/* Status Indicator */}\r\n          <div className=\"mt-4 p-4 rounded-lg border\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              {process.env.NEXT_PUBLIC_READONLY_PUBLIC_KEY && \r\n               !process.env.NEXT_PUBLIC_READONLY_PUBLIC_KEY.startsWith('GDEMO') &&\r\n               process.env.NEXT_PUBLIC_READONLY_PUBLIC_KEY !== '<TU_PUBLIC_KEY_G...>' ? (\r\n                <>\r\n                  <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\r\n                  <span className=\"text-green-700 font-medium\">🚀 REAL REFLECTOR MODE</span>\r\n                  <span className=\"text-sm text-gray-600\">\r\n                    Account: {process.env.NEXT_PUBLIC_READONLY_PUBLIC_KEY.slice(0, 6)}...{process.env.NEXT_PUBLIC_READONLY_PUBLIC_KEY.slice(-6)}\r\n                  </span>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <div className=\"w-3 h-3 bg-yellow-500 rounded-full\"></div>\r\n                  <span className=\"text-yellow-700 font-medium\">🔧 DEMO MODE</span>\r\n                  <span className=\"text-sm text-gray-600\">\r\n                    Configure .env.local with real testnet account for live prices\r\n                  </span>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Controls */}\r\n        <Card className=\"mb-6\">\r\n          <div className=\"p-6\">\r\n            <div className=\"flex flex-wrap gap-4 items-center justify-between\">\r\n              <div className=\"flex gap-4\">\r\n                <Button \r\n                  onClick={fetchData} \r\n                  disabled={isLoading}\r\n                  className=\"flex items-center gap-2\"\r\n                >\r\n                  <RefreshCw className={`w-4 h-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n                  {isLoading ? 'Testing...' : 'Test All Connections'}\r\n                </Button>\r\n                \r\n                <Button \r\n                  onClick={() => setAutoRefresh(!autoRefresh)}\r\n                  variant={autoRefresh ? \"default\" : \"outline\"}\r\n                  className=\"flex items-center gap-2\"\r\n                >\r\n                  <Clock className=\"w-4 h-4\" />\r\n                  {autoRefresh ? 'Stop Auto-Refresh' : 'Start Auto-Refresh (30s)'}\r\n                </Button>\r\n              </div>\r\n\r\n              {lastUpdate && (\r\n                <div className=\"text-sm text-gray-500\">\r\n                  Last update: {lastUpdate.toLocaleTimeString()}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        {/* Individual Tests */}\r\n        <Card className=\"mb-6\">\r\n          <div className=\"p-6\">\r\n            <h2 className=\"text-xl font-semibold mb-4\">Individual Tests</h2>\r\n            \r\n            {/* Basic Price Tests */}\r\n            <div className=\"mb-4\">\r\n              <h3 className=\"text-lg font-medium mb-2\">Basic Price Feeds</h3>\r\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n                <Button \r\n                  onClick={() => testIndividual('USDC/USD', priceUSDCinUSD)}\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                >\r\n                  Test USDC/USD\r\n                </Button>\r\n                <Button \r\n                  onClick={() => testIndividual('USD/CLP', usdPerCLP)}\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                >\r\n                  Test USD/CLP\r\n                </Button>\r\n                <Button \r\n                  onClick={() => testIndividual('XLM/USD', priceXLMinUSD)}\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                >\r\n                  Test XLM/USD\r\n                </Button>\r\n                <Button \r\n                  onClick={() => testIndividual('CLP/USD', priceCLPinUSD)}\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                >\r\n                  Test CLP/USD\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Advanced Tests */}\r\n            <div className=\"mb-4\">\r\n              <h3 className=\"text-lg font-medium mb-2\">Advanced Oracle Functions</h3>\r\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n                <Button \r\n                  onClick={() => testIndividual('USDC TWAP', () => getTwap(process.env.NEXT_PUBLIC_REFLECTOR_CONTRACT_ID_USDC!, { type: 2, code: 'USDC' }, 2))}\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                >\r\n                  Test USDC TWAP\r\n                </Button>\r\n                <Button \r\n                  onClick={() => testIndividual('XLM TWAP', () => getTwap(process.env.NEXT_PUBLIC_REFLECTOR_CONTRACT_ID_CEX!, { type: 1, code: 'XLM' }, 2))}\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                >\r\n                  Test XLM TWAP\r\n                </Button>\r\n                <Button \r\n                  onClick={() => testIndividual('XLM/USD TWAP', () => getXTwap(process.env.NEXT_PUBLIC_REFLECTOR_CONTRACT_ID_CEX!, { type: 1, code: 'XLM' }, { type: 2, code: 'USD' }, 2))}\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                >\r\n                  Test XLM/USD TWAP\r\n                </Button>\r\n                <Button \r\n                  onClick={() => testIndividual('Last Timestamp', () => getLastTimestamp(process.env.NEXT_PUBLIC_REFLECTOR_CONTRACT_ID_USDC!))}\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                >\r\n                  Test Last Timestamp\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        {/* Results */}\r\n        {data && (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            {/* Price Feeds */}\r\n            <Card>\r\n              <div className=\"p-6\">\r\n                <h2 className=\"text-xl font-semibold mb-4 flex items-center gap-2\">\r\n                  <Database className=\"w-5 h-5\" />\r\n                  Price Feeds\r\n                </h2>\r\n                \r\n                <div className=\"space-y-4\">\r\n                  {/* USDC/USD */}\r\n                  <div className=\"flex items-center justify-between p-3 bg-blue-50 rounded-lg\">\r\n                    <div>\r\n                      <div className=\"font-semibold text-blue-900\">USDC/USD</div>\r\n                      <div className=\"text-sm text-blue-700\">\r\n                        Stellar Public Assets\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      {data.usdcUsd.error ? (\r\n                        <div className=\"flex items-center gap-2 text-red-600\">\r\n                          <XCircle className=\"w-4 h-4\" />\r\n                          <span className=\"text-sm\">Error</span>\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"flex items-center gap-2 text-green-600\">\r\n                          <CheckCircle className=\"w-4 h-4\" />\r\n                          <span className=\"font-mono font-semibold\">\r\n                            ${formatPrice(data.usdcUsd.price)}\r\n                          </span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* USD/CLP */}\r\n                  <div className=\"flex items-center justify-between p-3 bg-green-50 rounded-lg\">\r\n                    <div>\r\n                      <div className=\"font-semibold text-green-900\">USD/CLP</div>\r\n                      <div className=\"text-sm text-green-700\">\r\n                        Foreign Exchange\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      {data.usdClp.error ? (\r\n                        <div className=\"flex items-center gap-2 text-red-600\">\r\n                          <XCircle className=\"w-4 h-4\" />\r\n                          <span className=\"text-sm\">Error</span>\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"flex items-center gap-2 text-green-600\">\r\n                          <CheckCircle className=\"w-4 h-4\" />\r\n                          <span className=\"font-mono font-semibold\">\r\n                            {formatPrice(data.usdClp.price)} CLP\r\n                          </span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* XLM/USD */}\r\n                  <div className=\"flex items-center justify-between p-3 bg-purple-50 rounded-lg\">\r\n                    <div>\r\n                      <div className=\"font-semibold text-purple-900\">XLM/USD</div>\r\n                      <div className=\"text-sm text-purple-700\">\r\n                        External CEX & DEX\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      {data.xlmUsd.error ? (\r\n                        <div className=\"flex items-center gap-2 text-red-600\">\r\n                          <XCircle className=\"w-4 h-4\" />\r\n                          <span className=\"text-sm\">Error</span>\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"flex items-center gap-2 text-green-600\">\r\n                          <CheckCircle className=\"w-4 h-4\" />\r\n                          <span className=\"font-mono font-semibold\">\r\n                            ${formatPrice(data.xlmUsd.price)}\r\n                          </span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* CLP/USD (derived) */}\r\n                  <div className=\"flex items-center justify-between p-3 bg-orange-50 rounded-lg\">\r\n                    <div>\r\n                      <div className=\"font-semibold text-orange-900\">CLP/USD</div>\r\n                      <div className=\"text-sm text-orange-700\">\r\n                        Derived (1/USD/CLP)\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      {data.clpUsd.error ? (\r\n                        <div className=\"flex items-center gap-2 text-red-600\">\r\n                          <XCircle className=\"w-4 h-4\" />\r\n                          <span className=\"text-sm\">Error</span>\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"flex items-center gap-2 text-green-600\">\r\n                          <CheckCircle className=\"w-4 h-4\" />\r\n                          <span className=\"font-mono font-semibold\">\r\n                            ${formatPrice(data.clpUsd.price)}\r\n                          </span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n\r\n            {/* Oracle Info */}\r\n            <Card>\r\n              <div className=\"p-6\">\r\n                <h2 className=\"text-xl font-semibold mb-4\">Oracle Information</h2>\r\n                \r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <h3 className=\"font-semibold text-gray-900 mb-2\">Contract IDs (Testnet)</h3>\r\n                    <div className=\"space-y-2 text-sm\">\r\n                      <div className=\"p-2 bg-gray-50 rounded\">\r\n                        <div className=\"font-mono text-xs break-all\">\r\n                          USDC: {process.env.NEXT_PUBLIC_REFLECTOR_CONTRACT_ID_USDC || 'Not configured'}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"p-2 bg-gray-50 rounded\">\r\n                        <div className=\"font-mono text-xs break-all\">\r\n                          FX: {process.env.NEXT_PUBLIC_REFLECTOR_CONTRACT_ID_FX || 'Not configured'}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"p-2 bg-gray-50 rounded\">\r\n                        <div className=\"font-mono text-xs break-all\">\r\n                          CEX: {process.env.NEXT_PUBLIC_REFLECTOR_CONTRACT_ID_CEX || 'Not configured'}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <h3 className=\"font-semibold text-gray-900 mb-2\">Decimals</h3>\r\n                    <div className=\"grid grid-cols-3 gap-2 text-sm\">\r\n                      <div className=\"text-center p-2 bg-blue-50 rounded\">\r\n                        <div className=\"font-semibold text-blue-900\">USDC</div>\r\n                        <div className=\"font-mono\">{data.decimals.usdc}</div>\r\n                      </div>\r\n                      <div className=\"text-center p-2 bg-green-50 rounded\">\r\n                        <div className=\"font-semibold text-green-900\">FX</div>\r\n                        <div className=\"font-mono\">{data.decimals.fx}</div>\r\n                      </div>\r\n                      <div className=\"text-center p-2 bg-purple-50 rounded\">\r\n                        <div className=\"font-semibold text-purple-900\">CEX</div>\r\n                        <div className=\"font-mono\">{data.decimals.cex}</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <h3 className=\"font-semibold text-gray-900 mb-2\">Configuration</h3>\r\n                    <div className=\"space-y-1 text-sm\">\r\n                      <div>RPC: {process.env.NEXT_PUBLIC_SOROBAN_RPC_PRIMARY || 'Not configured'}</div>\r\n                      <div>Network: {process.env.NEXT_PUBLIC_STELLAR_NETWORK_PASSPHRASE || 'Not configured'}</div>\r\n                      <div>Reader: {process.env.NEXT_PUBLIC_READONLY_PUBLIC_KEY ? 'Configured' : 'Not configured'}</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          </div>\r\n        )}\r\n\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}