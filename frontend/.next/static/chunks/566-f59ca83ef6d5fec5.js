"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[566],{185:(e,t,a)=>{a.d(t,{AppProvider:()=>g,n:()=>p});var r=a(3365),o=a(1521),n=a(1817),i=a(4670),s=a(4089);let l={id:"1",name:"Kaream Badillo",email:"kaream@university.edu",avatar:"KB",university:"Universidad Nacional",reputation:85,reputationLevel:"Bronze",totalBalance:1250,activeStakes:450,totalProjects:4,totalRewards:150,memberSince:"2025-01-15"},c=[{id:1,title:"Web3 Certifications for University Students",description:"Certification platform recognized by companies, with hands-on courses in Solidity, DeFi, and Smart Contracts.",category:"Technology",creator:"Dr. Garcia",totalStaked:2500,myStake:200,backers:45,stakers:45,daysLeft:15,image:"blockchain",status:"active",goal:5e3,progress:50,bonusPercent:8},{id:2,title:"Web3 Fintech Startup Hub (Blockchain R&D)",description:"Blockchain-first innovation hub connecting students with startups to build DeFi rails, on-chain payments, and tokenized experiments.",category:"Social",creator:"Maria Lopez",totalStaked:1800,myStake:150,backers:32,stakers:32,daysLeft:8,image:"community",status:"active",goal:3e3,progress:60,bonusPercent:6},{id:3,title:"Web3 Advanced Blockchain Mentorship",description:"Specialized mentorship program where industry experts guide students in real DeFi and NFT projects.",category:"Education",creator:"Carlos Ruiz",totalStaked:3200,myStake:0,backers:67,stakers:67,daysLeft:22,image:"tutoring",status:"active",goal:4e3,progress:80,bonusPercent:11},{id:4,title:"Web3 Green Campus: Renewable Energy On-chain",description:"Renewable energy deployments with on-chain metering, transparent reporting, and tokenized incentives for sustainability.",category:"Environment",creator:"Ana Martinez",totalStaked:1200,myStake:100,backers:28,stakers:28,daysLeft:5,image:"sustainability",status:"ending",goal:2e3,progress:60,bonusPercent:5},{id:5,title:"Web3 AI & Blockchain Lab (DeAI)",description:"Research lab exploring decentralized AI, verifiable data pipelines, and on-chain automation with real dApps.",category:"Technology",creator:"Prof. Rodriguez",totalStaked:4500,myStake:300,backers:89,stakers:89,daysLeft:30,image:"ai-lab",status:"active",goal:6e3,progress:75,bonusPercent:9},{id:6,title:"Web3 Digital Library (On-chain IP)",description:"Decentralized library with on-chain provenance, open licensing, and contributor rewards via smart contracts.",category:"Education",creator:"Central Library",totalStaked:2800,myStake:0,backers:156,stakers:156,daysLeft:12,image:"digital-library",status:"active",goal:3500,progress:80,bonusPercent:7}].map(e=>({id:e.id.toString(),title:e.title,description:e.description,category:e.category,creator:e.creator,totalStaked:e.totalStaked,targetAmount:e.goal,progress:e.progress,stakers:e.stakers,daysLeft:e.daysLeft,status:"ending"===e.status?"active":e.status,myStake:e.myStake,image:e.image,tags:[e.category.toLowerCase()],bonusPercent:e.bonusPercent})),d=[{id:"1",type:"stake",title:"Nuevo stake realizado",description:'Stakeaste $500 en "Blockchain Education Platform"',amount:500,date:"2025-01-15T10:30:00Z",projectId:"1"},{id:"2",type:"reputation_gained",title:"Reputaci\xf3n aumentada",description:"Ganaste 50 puntos de reputaci\xf3n por tu participaci\xf3n",amount:50,date:"2025-01-14T15:45:00Z"},{id:"3",type:"reward",title:"Recompensa recibida",description:'Recibiste $25 por tu participaci\xf3n en "Fintech Startup Hub"',amount:25,date:"2025-01-13T09:20:00Z",projectId:"2"},{id:"4",type:"project_completed",title:"Proyecto completado",description:'El proyecto "Blockchain Education" alcanz\xf3 su meta',date:"2025-01-10T14:15:00Z",projectId:"1"}],u=(0,o.createContext)(void 0);function g(e){let{children:t}=e,[a,g]=(0,o.useState)({user:l,wallet:{isConnected:!1,publicKey:null,balance:null,isLoading:!1,error:null},projects:c,myStakedProjects:c.filter(e=>e.myStake>0),activities:d,notifications:3,isLoading:!1,currentPage:"/"}),p=(0,n.v)();(0,o.useEffect)(()=>{console.log("\uD83D\uDD04 AppContext: Syncing wallet state from useWallet hook"),console.log("\uD83D\uDCCA useWallet state:",{isConnected:p.isConnected,publicKey:p.publicKey,balance:p.balance,isLoading:p.isLoading,error:p.error}),g(e=>({...e,wallet:{isConnected:p.isConnected,publicKey:p.publicKey,balance:p.balance,isLoading:p.isLoading,error:p.error}}))},[p.isConnected,p.publicKey,p.balance,p.isLoading,p.error]);let y=async()=>{if("true"===s.env.NEXT_PUBLIC_DEV_WALLET_MOCK||!s.env.NEXT_PUBLIC_READONLY_PUBLIC_KEY||"<TU_PUBLIC_KEY_G...>"===s.env.NEXT_PUBLIC_READONLY_PUBLIC_KEY){console.log("Demo mode: Simulating successful wallet connection"),g(e=>({...e,wallet:{isConnected:!0,publicKey:"GDEMO1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ",balance:{USDC:1e3,XLM:500},isLoading:!1,error:null}}));return}try{await p.connectWallet()}catch(e){console.error("Wallet connection error:",e),console.log("Demo mode: Simulating successful wallet connection"),g(e=>({...e,wallet:{isConnected:!0,publicKey:"GDEMO1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ",balance:{USDC:1e3,XLM:500},isLoading:!1,error:null}}))}},h=async(e,t)=>{a.wallet.isConnected||a.wallet.publicKey||console.log("Demo mode: Simulating stake without wallet connection"),g(e=>({...e,isLoading:!0}));try{try{let a=await i.j.createStakingTransaction(t,e);await i.j.signAndSubmitTransaction(a)}catch(e){console.error("Stellar transaction error:",e),Date.now()}let r=a.projects.map(a=>a.id===e?{...a,totalStaked:a.totalStaked+t,progress:Math.min(100,(a.totalStaked+t)/a.targetAmount*100),stakers:a.stakers+1,myStake:a.myStake+t}:a),o=a.user?{...a.user,totalBalance:Math.max(0,a.user.totalBalance-t),activeStakes:a.user.activeStakes+t,totalProjects:a.user.totalProjects+1}:null;g(e=>({...e,projects:r,myStakedProjects:r.filter(e=>e.myStake>0),user:o,isLoading:!1}));let n=a.projects.find(t=>t.id===e);w({type:"stake",title:"Nuevo stake realizado",description:"Stakeaste $".concat(t.toFixed(2),' en "').concat(null==n?void 0:n.title,'"'),amount:t,projectId:e}),console.log("✅ Stake simulado: $".concat(t.toFixed(2)," para proyecto ").concat(e))}catch(e){console.error("Staking error:",e),g(e=>({...e,isLoading:!1})),console.warn("Staking failed but UI continues:",e)}},w=e=>{let t={...e,id:Date.now().toString(),date:new Date().toISOString()};g(e=>({...e,activities:[t,...e.activities],notifications:e.notifications+1}))};return(0,r.jsx)(u.Provider,{value:{state:a,connectWallet:y,disconnectWallet:()=>{p.disconnectWallet()},makeStake:h,updateUserProfile:e=>{a.user&&g(t=>({...t,user:{...t.user,...e}}))},addActivity:w,setCurrentPage:e=>{g(t=>({...t,currentPage:e}))},clearNotifications:()=>{g(e=>({...e,notifications:0}))}},children:t})}function p(){let e=(0,o.useContext)(u);if(void 0===e)throw Error("useApp must be used within an AppProvider");return e}},1817:(e,t,a)=>{a.d(t,{v:()=>c});var r=a(1521),o=a(4670),n=a(3547);let i=a(4089).env.NEXT_PUBLIC_SOROBAN_RPC_PRIMARY||"https://soroban-testnet.stellar.org",s=new n.rpc.Server(i,{allowHttp:!0});async function l(e){try{return await s.getAccount(e),console.log("✅ Account exists and is funded"),!0}catch(t){console.log("⚠️ Account not found, requesting airdrop from Friendbot...");try{return await s.requestAirdrop(e),console.log("✅ Airdrop successful"),!0}catch(e){return console.error("❌ Airdrop failed:",e),!1}}}let c=()=>{let[e,t]=(0,r.useState)({isConnected:!1,publicKey:null,balance:null,isLoading:!1,error:null}),a=()=>{let e=window.stellar;return console.log("\uD83D\uDD0D Checking Freighter installation:",e),e},n=async()=>{console.log("\uD83D\uDD0C Starting wallet connection..."),t(e=>({...e,isLoading:!0,error:null}));try{if(!a())throw console.log("❌ Freighter not installed"),alert("Necesitas instalar la wallet Freighter para usar esta funci\xf3n. Te redirigiremos a la p\xe1gina oficial."),window.open("https://freighter.app/","_blank"),Error("Freighter wallet not found. Please install the Freighter extension.");console.log("✅ Freighter found, requesting account...");let e=await o.j.connectWallet();console.log("✅ Account received:",e),await l(e);let r=await o.j.getBalance(e);return console.log("✅ Balance retrieved:",r),t({isConnected:!0,publicKey:e,balance:r,isLoading:!1,error:null}),localStorage.setItem("ahorrostellar_wallet",e),console.log("\uD83D\uDCBE Wallet saved to localStorage"),e}catch(a){console.error("❌ Wallet connection error:",a);let e=a instanceof Error?a.message:"Failed to connect wallet";throw t(t=>({...t,isLoading:!1,error:e})),a}},i=async(a,r)=>{if(!e.isConnected)throw Error("Wallet not connected");t(e=>({...e,isLoading:!0,error:null}));try{let n=await o.j.createStakingTransaction(a,r),i=await o.j.signAndSubmitTransaction(n);if(e.publicKey){let a=await o.j.getBalance(e.publicKey);t(e=>({...e,balance:a,isLoading:!1}))}return i}catch(a){let e=a instanceof Error?a.message:"Failed to create staking transaction";throw t(t=>({...t,isLoading:!1,error:e})),a}},s=async(a,r)=>{if(!e.isConnected)throw Error("Wallet not connected");t(e=>({...e,isLoading:!0,error:null}));try{let e=await o.j.issueReputationToken(a,r);return await o.j.signAndSubmitTransaction(e)}catch(a){let e=a instanceof Error?a.message:"Failed to issue reputation token";throw t(t=>({...t,isLoading:!1,error:e})),a}},c=async()=>{if(!e.publicKey)return[];try{return await o.j.getTransactionHistory(e.publicKey)}catch(e){return console.error("Error getting transaction history:",e),[]}};return(0,r.useEffect)(()=>{(async()=>{await new Promise(e=>setTimeout(e,100)),console.log("\uD83D\uDD0D Checking for saved wallet...");let e=localStorage.getItem("ahorrostellar_wallet");if(console.log("\uD83D\uDCE6 Saved wallet:",e),e&&a()){console.log("✅ Freighter installed, attempting auto-connect...");try{await n(),console.log("✅ Auto-connect successful")}catch(e){console.warn("❌ Auto-connect failed:",e),localStorage.removeItem("ahorrostellar_wallet")}}else console.log("❌ No saved wallet or Freighter not installed")})()},[]),{...e,connectWallet:n,disconnectWallet:()=>{t({isConnected:!1,publicKey:null,balance:null,isLoading:!1,error:null}),localStorage.removeItem("ahorrostellar_wallet")},createStaking:i,issueReputation:s,getTransactionHistory:c,isFreighterInstalled:a}}},4670:(e,t,a)=>{a.d(t,{j:()=>l});var r=a(3547),o=a(4089),n=a(4089);({TESTNET_URL:o.env.NEXT_PUBLIC_SOROBAN_RPC_PRIMARY||"https://soroban-testnet.stellar.org",NETWORK_PASSPHRASE:o.env.NEXT_PUBLIC_STELLAR_NETWORK_PASSPHRASE||"Test SDF Network ; September 2015",READONLY_PUBLIC_KEY:o.env.NEXT_PUBLIC_READONLY_PUBLIC_KEY||"",REFLECTOR_CONTRACTS:{USDC:o.env.NEXT_PUBLIC_REFLECTOR_CONTRACT_ID_USDC||"CAVLP5DH2GJPZMVO7IJY4CVOD5MWEFTJFVPD2YY2FQXOQHRGHK4D6HLP",FX:o.env.NEXT_PUBLIC_REFLECTOR_CONTRACT_ID_FX||"CCSSOHTBL3LEWUCBBEB5NJFC2OKFRC74OWEIJIZLRJBGAAU4VMU5NV4W",CEX:o.env.NEXT_PUBLIC_REFLECTOR_CONTRACT_ID_CEX||"CCYOZJCOPG34LLQQ7N24YXBM7LL62R7ONMZ3G6WZAAYPB5OYKOMJRN63"}}).TESTNET_URL;let i=r.Networks.TESTNET;class s{async connectWallet(){try{if(console.log("\uD83D\uDD0C StellarService: Checking for Freighter..."),window.stellar){console.log("✅ StellarService: Freighter found");let e=window.stellar;console.log("\uD83D\uDD0C StellarService: Requesting account...");let t=await Promise.race([e.request({method:"requestAccount"}),new Promise((e,t)=>setTimeout(()=>t(Error("Wallet connection timeout")),1e4))]);return console.log("✅ StellarService: Account received:",t),this.publicKey=t,t}throw console.log("❌ StellarService: Freighter not found"),Error("Freighter wallet not found. Please install Freighter extension.")}catch(e){throw console.error("❌ StellarService: Error connecting to wallet:",e),e}}async getBalance(e){try{if(!this.server||!this.server.loadAccount)return console.warn("Stellar server not properly initialized, returning mock balance"),[{asset_type:"native",balance:"1000.0000000"}];return(await this.server.loadAccount(e)).balances}catch(e){return console.error("Error getting balance:",e),[{asset_type:"native",balance:"1000.0000000"}]}}async createStakingTransaction(e,t){if(!this.publicKey)throw Error("Wallet not connected");try{if(!this.server||!this.server.loadAccount)throw Error("Stellar server not properly initialized");let a=await this.server.loadAccount(this.publicKey),o="STAKING:".concat(t,":").concat(Date.now());return new r.TransactionBuilder(a,{fee:"100",networkPassphrase:i}).addOperation(r.Operation.payment({destination:this.publicKey,asset:r.Asset.native(),amount:e.toString()})).addMemo(r.Memo.text(o)).setTimeout(30).build().toXDR()}catch(e){throw console.error("Error creating staking transaction:",e),e}}async issueReputationToken(e,t){if(!this.publicKey)throw Error("Wallet not connected");throw Error("Reputation tokens are temporarily disabled")}async signAndSubmitTransaction(e){try{if(window.stellar){let t=window.stellar,a=await t.signTransaction(e);return await this.server.submitTransaction(a)}throw Error("Freighter wallet not available")}catch(e){throw console.error("Error signing/submitting transaction:",e),e}}async getTransactionHistory(e){try{return(await this.server.transactions().forAccount(e).order("desc").limit(20).call()).records}catch(e){throw console.error("Error getting transaction history:",e),e}}constructor(){this.publicKey=null;try{this.server=new r.rpc.Server(n.env.NEXT_PUBLIC_SOROBAN_RPC_PRIMARY||"https://soroban-testnet.stellar.org",{allowHttp:!0})}catch(e){console.error("Error initializing Stellar server:",e),this.server={}}}}let l=new s}}]);