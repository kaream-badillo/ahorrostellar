{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/lib/config.ts"],"sourcesContent":["// src/lib/config.ts\r\nexport const getStellarConfig = () => {\r\n  return {\r\n    TESTNET_URL: process.env.NEXT_PUBLIC_SOROBAN_RPC_PRIMARY || 'https://soroban-testnet.stellar.org',\r\n    NETWORK_PASSPHRASE: process.env.NEXT_PUBLIC_STELLAR_NETWORK_PASSPHRASE || 'Test SDF Network ; September 2015',\r\n    READONLY_PUBLIC_KEY: process.env.NEXT_PUBLIC_READONLY_PUBLIC_KEY || '',\r\n    REFLECTOR_CONTRACTS: {\r\n      USDC: process.env.NEXT_PUBLIC_REFLECTOR_CONTRACT_ID_USDC || 'CAVLP5DH2GJPZMVO7IJY4CVOD5MWEFTJFVPD2YY2FQXOQHRGHK4D6HLP',\r\n      FX: process.env.NEXT_PUBLIC_REFLECTOR_CONTRACT_ID_FX || 'CCSSOHTBL3LEWUCBBEB5NJFC2OKFRC74OWEIJIZLRJBGAAU4VMU5NV4W',\r\n      CEX: process.env.NEXT_PUBLIC_REFLECTOR_CONTRACT_ID_CEX || 'CCYOZJCOPG34LLQQ7N24YXBM7LL62R7ONMZ3G6WZAAYPB5OYKOMJRN63'\r\n    }\r\n  }\r\n}"],"names":[],"mappings":"AAAA,oBAAoB;;;;AAGH;AAFV,MAAM,mBAAmB;IAC9B,OAAO;QACL,aAAa,2EAA+C;QAC5D,oBAAoB,yEAAsD;QAC1E,qBAAqB,gGAA+C;QACpE,qBAAqB;YACnB,MAAM,gGAAsD;YAC5D,IAAI,gGAAoD;YACxD,KAAK,gGAAqD;QAC5D;IACF;AACF","debugId":null}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/lib/stellar.ts"],"sourcesContent":["import { Networks, TransactionBuilder, Operation, Asset, Memo, rpc } from '@stellar/stellar-sdk';\r\nimport { getStellarConfig } from './config';\r\n\r\n// Stellar testnet configuration\r\nconst config = getStellarConfig();\r\nconst STELLAR_TESTNET_URL = config.TESTNET_URL;\r\nconst NETWORK_PASSPHRASE = Networks.TESTNET;\r\n\r\n// Asset for reputation tokens (custom asset)\r\n// TEMPORARILY DISABLED: Using a valid testnet issuer that exists and has funds\r\n// TODO: Re-enable when we have a valid issuer\r\n// const REPUTATION_ASSET = new Asset(\r\n//   config.REPUTATION_TOKEN.CODE, \r\n//   config.REPUTATION_TOKEN.ISSUER\r\n// );\r\n\r\n// Temporary mock asset to prevent crashes\r\nconst REPUTATION_ASSET = null;\r\n\r\nexport class StellarService {\r\n  private server: any;\r\n  private publicKey: string | null = null;\r\n\r\n  constructor() {\r\n    try {\r\n      this.server = new rpc.Server(process.env.NEXT_PUBLIC_SOROBAN_RPC_PRIMARY || 'https://soroban-testnet.stellar.org', { allowHttp: true });\r\n    } catch (error) {\r\n      console.error('Error initializing Stellar server:', error);\r\n      // Create a mock server to prevent crashes\r\n      this.server = {};\r\n    }\r\n  }\r\n\r\n  // Connect to Freighter wallet\r\n  async connectWallet(): Promise<string> {\r\n    try {\r\n      console.log('üîå StellarService: Checking for Freighter...');\r\n      // Check if Freighter is installed\r\n      if (typeof window !== 'undefined' && (window as any).stellar) {\r\n        console.log('‚úÖ StellarService: Freighter found');\r\n        const stellar = (window as any).stellar;\r\n        \r\n        // Request connection with timeout\r\n        console.log('üîå StellarService: Requesting account...');\r\n        const publicKey = await Promise.race([\r\n          stellar.request({\r\n            method: 'requestAccount'\r\n          }),\r\n          new Promise((_, reject) => \r\n            setTimeout(() => reject(new Error('Wallet connection timeout')), 10000)\r\n          )\r\n        ]);\r\n        \r\n        console.log('‚úÖ StellarService: Account received:', publicKey);\r\n        this.publicKey = publicKey as string;\r\n        return publicKey as string;\r\n      } else {\r\n        console.log('‚ùå StellarService: Freighter not found');\r\n        throw new Error('Freighter wallet not found. Please install Freighter extension.');\r\n      }\r\n    } catch (error) {\r\n      console.error('‚ùå StellarService: Error connecting to wallet:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Get account balance\r\n  async getBalance(publicKey: string): Promise<any> {\r\n    try {\r\n      // Check if server is properly initialized\r\n      if (!this.server || !this.server.loadAccount) {\r\n        console.warn('Stellar server not properly initialized, returning mock balance');\r\n        return [{ asset_type: 'native', balance: '1000.0000000' }];\r\n      }\r\n      \r\n      const account = await this.server.loadAccount(publicKey);\r\n      return account.balances;\r\n    } catch (error) {\r\n      console.error('Error getting balance:', error);\r\n      // Return mock balance instead of throwing error\r\n      return [{ asset_type: 'native', balance: '1000.0000000' }];\r\n    }\r\n  }\r\n\r\n  // Create symbolic staking transaction\r\n  async createStakingTransaction(amount: number, projectId: string): Promise<string> {\r\n    if (!this.publicKey) {\r\n      throw new Error('Wallet not connected');\r\n    }\r\n\r\n    try {\r\n      // Check if server is properly initialized\r\n      if (!this.server || !this.server.loadAccount) {\r\n        throw new Error('Stellar server not properly initialized');\r\n      }\r\n      \r\n      const account = await this.server.loadAccount(this.publicKey);\r\n      \r\n      // Create a memo with project information\r\n      const memo = `STAKING:${projectId}:${Date.now()}`;\r\n      \r\n      // Create transaction for symbolic staking (using XLM)\r\n      const transaction = new TransactionBuilder(account, {\r\n        fee: '100',\r\n        networkPassphrase: NETWORK_PASSPHRASE\r\n      })\r\n      .addOperation(Operation.payment({\r\n        destination: this.publicKey, // Self-payment for symbolic staking\r\n        asset: Asset.native(),\r\n        amount: amount.toString()\r\n      }))\r\n      .addMemo(Memo.text(memo))\r\n      .setTimeout(30)\r\n      .build();\r\n\r\n      return transaction.toXDR();\r\n    } catch (error) {\r\n      console.error('Error creating staking transaction:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Issue reputation token\r\n  async issueReputationToken(amount: number, recipient: string): Promise<string> {\r\n    if (!this.publicKey) {\r\n      throw new Error('Wallet not connected');\r\n    }\r\n\r\n    // TEMPORARILY DISABLED: Reputation asset is not available\r\n    if (!REPUTATION_ASSET) {\r\n      throw new Error('Reputation tokens are temporarily disabled');\r\n    }\r\n\r\n    try {\r\n      const account = await this.server.loadAccount(this.publicKey);\r\n      \r\n      const transaction = new TransactionBuilder(account, {\r\n        fee: '100',\r\n        networkPassphrase: NETWORK_PASSPHRASE\r\n      })\r\n      .addOperation(Operation.payment({\r\n        destination: recipient,\r\n        asset: REPUTATION_ASSET,\r\n        amount: amount.toString()\r\n      }))\r\n      .setTimeout(30)\r\n      .build();\r\n\r\n      return transaction.toXDR();\r\n    } catch (error) {\r\n      console.error('Error issuing reputation token:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Sign and submit transaction\r\n  async signAndSubmitTransaction(transactionXDR: string): Promise<any> {\r\n    try {\r\n      if (typeof window !== 'undefined' && (window as any).stellar) {\r\n        const stellar = (window as any).stellar;\r\n        \r\n        const signedTransaction = await stellar.signTransaction(transactionXDR);\r\n        const response = await this.server.submitTransaction(signedTransaction);\r\n        \r\n        return response;\r\n      } else {\r\n        throw new Error('Freighter wallet not available');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error signing/submitting transaction:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Get transaction history\r\n  async getTransactionHistory(publicKey: string): Promise<any[]> {\r\n    try {\r\n      const transactions = await this.server.transactions()\r\n        .forAccount(publicKey)\r\n        .order('desc')\r\n        .limit(20)\r\n        .call();\r\n      \r\n      return transactions.records;\r\n    } catch (error) {\r\n      console.error('Error getting transaction history:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\n// Singleton instance\r\nexport const stellarService = new StellarService();\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/lib/friendbot.ts"],"sourcesContent":["// src/lib/friendbot.ts\r\n// Friendbot utility for testnet account funding\r\nimport { rpc } from '@stellar/stellar-sdk';\r\n\r\nconst RPC = process.env.NEXT_PUBLIC_SOROBAN_RPC_PRIMARY || 'https://soroban-testnet.stellar.org';\r\nconst server = new rpc.Server(RPC, { allowHttp: true });\r\n\r\nexport async function ensureFunded(publicKey: string) {\r\n  try {\r\n    // Try to get account - if it exists, we're good\r\n    await server.getAccount(publicKey);\r\n    console.log('‚úÖ Account exists and is funded');\r\n    return true;\r\n  } catch (error) {\r\n    console.log('‚ö†Ô∏è Account not found, requesting airdrop from Friendbot...');\r\n    try {\r\n      // Request airdrop from Friendbot (testnet only)\r\n      await server.requestAirdrop(publicKey);\r\n      console.log('‚úÖ Airdrop successful');\r\n      return true;\r\n    } catch (airdropError) {\r\n      console.error('‚ùå Airdrop failed:', airdropError);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,uBAAuB;AACvB,gDAAgD;;;;AAGpC;AAFZ;;AAEA,MAAM,MAAM,2EAA+C;AAC3D,MAAM,SAAS,IAAI,+KAAA,CAAA,MAAG,CAAC,MAAM,CAAC,KAAK;IAAE,WAAW;AAAK;AAE9C,eAAe,aAAa,SAAiB;IAClD,IAAI;QACF,gDAAgD;QAChD,MAAM,OAAO,UAAU,CAAC;QACxB,QAAQ,GAAG,CAAC;QACZ,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,GAAG,CAAC;QACZ,IAAI;YACF,gDAAgD;YAChD,MAAM,OAAO,cAAc,CAAC;YAC5B,QAAQ,GAAG,CAAC;YACZ,OAAO;QACT,EAAE,OAAO,cAAc;YACrB,QAAQ,KAAK,CAAC,qBAAqB;YACnC,OAAO;QACT;IACF;AACF","debugId":null}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/hooks/useWallet.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { stellarService } from '@/lib/stellar';\r\nimport { ensureFunded } from '@/lib/friendbot';\r\n\r\nexport interface WalletState {\r\n  isConnected: boolean;\r\n  publicKey: string | null;\r\n  balance: any | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nexport const useWallet = () => {\r\n  const [walletState, setWalletState] = useState<WalletState>({\r\n    isConnected: false,\r\n    publicKey: null,\r\n    balance: null,\r\n    isLoading: false,\r\n    error: null\r\n  });\r\n\r\n  // Check if Freighter is installed\r\n  const isFreighterInstalled = () => {\r\n    const hasFreighter = typeof window !== 'undefined' && (window as any).stellar;\r\n    console.log('üîç Checking Freighter installation:', hasFreighter);\r\n    return hasFreighter;\r\n  };\r\n\r\n  // Connect to wallet\r\n  const connectWallet = async () => {\r\n    console.log('üîå Starting wallet connection...');\r\n    setWalletState(prev => ({ ...prev, isLoading: true, error: null }));\r\n    \r\n    try {\r\n      if (!isFreighterInstalled()) {\r\n        console.log('‚ùå Freighter not installed');\r\n        // Show alert and redirect to Freighter installation\r\n        alert(\"Necesitas instalar la wallet Freighter para usar esta funci√≥n. Te redirigiremos a la p√°gina oficial.\");\r\n        window.open(\"https://freighter.app/\", \"_blank\");\r\n        throw new Error('Freighter wallet not found. Please install the Freighter extension.');\r\n      }\r\n\r\n      console.log('‚úÖ Freighter found, requesting account...');\r\n      const publicKey = await stellarService.connectWallet();\r\n      console.log('‚úÖ Account received:', publicKey);\r\n      \r\n      // Ensure account is funded (testnet only)\r\n      await ensureFunded(publicKey);\r\n      \r\n      const balance = await stellarService.getBalance(publicKey);\r\n      console.log('‚úÖ Balance retrieved:', balance);\r\n\r\n      setWalletState({\r\n        isConnected: true,\r\n        publicKey,\r\n        balance,\r\n        isLoading: false,\r\n        error: null\r\n      });\r\n\r\n      // Store in localStorage for persistence\r\n      localStorage.setItem('ahorrostellar_wallet', publicKey);\r\n      console.log('üíæ Wallet saved to localStorage');\r\n      \r\n      return publicKey;\r\n    } catch (error) {\r\n      console.error('‚ùå Wallet connection error:', error);\r\n      const errorMessage = error instanceof Error ? error.message : 'Failed to connect wallet';\r\n      setWalletState(prev => ({\r\n        ...prev,\r\n        isLoading: false,\r\n        error: errorMessage\r\n      }));\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Disconnect wallet\r\n  const disconnectWallet = () => {\r\n    setWalletState({\r\n      isConnected: false,\r\n      publicKey: null,\r\n      balance: null,\r\n      isLoading: false,\r\n      error: null\r\n    });\r\n    localStorage.removeItem('ahorrostellar_wallet');\r\n  };\r\n\r\n  // Create staking transaction\r\n  const createStaking = async (amount: number, projectId: string) => {\r\n    if (!walletState.isConnected) {\r\n      throw new Error('Wallet not connected');\r\n    }\r\n\r\n    setWalletState(prev => ({ ...prev, isLoading: true, error: null }));\r\n\r\n    try {\r\n      const transactionXDR = await stellarService.createStakingTransaction(amount, projectId);\r\n      const result = await stellarService.signAndSubmitTransaction(transactionXDR);\r\n      \r\n      // Update balance after transaction\r\n      if (walletState.publicKey) {\r\n        const newBalance = await stellarService.getBalance(walletState.publicKey);\r\n        setWalletState(prev => ({ ...prev, balance: newBalance, isLoading: false }));\r\n      }\r\n\r\n      return result;\r\n    } catch (error) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Failed to create staking transaction';\r\n      setWalletState(prev => ({\r\n        ...prev,\r\n        isLoading: false,\r\n        error: errorMessage\r\n      }));\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Issue reputation token\r\n  const issueReputation = async (amount: number, recipient: string) => {\r\n    if (!walletState.isConnected) {\r\n      throw new Error('Wallet not connected');\r\n    }\r\n\r\n    setWalletState(prev => ({ ...prev, isLoading: true, error: null }));\r\n\r\n    try {\r\n      const transactionXDR = await stellarService.issueReputationToken(amount, recipient);\r\n      const result = await stellarService.signAndSubmitTransaction(transactionXDR);\r\n      \r\n      return result;\r\n    } catch (error) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Failed to issue reputation token';\r\n      setWalletState(prev => ({\r\n        ...prev,\r\n        isLoading: false,\r\n        error: errorMessage\r\n      }));\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Get transaction history\r\n  const getTransactionHistory = async () => {\r\n    if (!walletState.publicKey) {\r\n      return [];\r\n    }\r\n\r\n    try {\r\n      return await stellarService.getTransactionHistory(walletState.publicKey);\r\n    } catch (error) {\r\n      console.error('Error getting transaction history:', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  // Auto-connect on mount if wallet was previously connected\r\n  useEffect(() => {\r\n    const autoConnect = async () => {\r\n      // Small delay to ensure everything is initialized\r\n      await new Promise(resolve => setTimeout(resolve, 100));\r\n      \r\n      console.log('üîç Checking for saved wallet...');\r\n      const savedWallet = localStorage.getItem('ahorrostellar_wallet');\r\n      console.log('üì¶ Saved wallet:', savedWallet);\r\n      \r\n      if (savedWallet && isFreighterInstalled()) {\r\n        console.log('‚úÖ Freighter installed, attempting auto-connect...');\r\n        try {\r\n          await connectWallet();\r\n          console.log('‚úÖ Auto-connect successful');\r\n        } catch (error) {\r\n          console.warn('‚ùå Auto-connect failed:', error);\r\n          // If auto-connect fails, clear the saved wallet\r\n          localStorage.removeItem('ahorrostellar_wallet');\r\n        }\r\n      } else {\r\n        console.log('‚ùå No saved wallet or Freighter not installed');\r\n      }\r\n    };\r\n    \r\n    autoConnect();\r\n  }, []); // connectWallet is stable, so this is safe\r\n\r\n  return {\r\n    ...walletState,\r\n    connectWallet,\r\n    disconnectWallet,\r\n    createStaking,\r\n    issueReputation,\r\n    getTransactionHistory,\r\n    isFreighterInstalled\r\n  };\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 455, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/lib/mockData.ts"],"sourcesContent":["// Mock data for the MVP\r\n// TODO: Replace with real backend data\r\n\r\nexport interface Project {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n  category: string;\r\n  creator: string;\r\n  totalStaked: number;\r\n  myStake: number;\r\n  backers: number;\r\n  daysLeft: number;\r\n  image: string;\r\n  status: 'active' | 'completed' | 'ending';\r\n  goal: number;\r\n  progress: number;\r\n  stakers: number;\r\n  bonusPercent: number;\r\n}\r\n\r\nexport interface UserStats {\r\n  totalBalance: number;\r\n  activeStakes: number;\r\n  reputation: number;\r\n  totalProjects: number;\r\n  totalRewards: number;\r\n  rank: number;\r\n}\r\n\r\nexport interface Stake {\r\n  id: number;\r\n  projectId: number;\r\n  projectTitle: string;\r\n  amount: number;\r\n  date: string;\r\n  status: 'active' | 'completed' | 'pending';\r\n  reward?: number;\r\n}\r\n\r\nexport interface Activity {\r\n  id: number;\r\n  type: 'stake' | 'reward' | 'project_created' | 'reputation_gained';\r\n  title: string;\r\n  description: string;\r\n  date: string;\r\n  amount?: number;\r\n}\r\n\r\n// Mock project data\r\nexport const mockProjects: Project[] = [\r\n  {\r\n    id: 1,\r\n    title: \"Web3 Certifications for University Students\",\r\n    description: \"Certification platform recognized by companies, with hands-on courses in Solidity, DeFi, and Smart Contracts.\",\r\n    category: \"Technology\",\r\n    creator: \"Dr. Garcia\",\r\n    totalStaked: 2500,\r\n    myStake: 200,\r\n    backers: 45,\r\n    stakers: 45,\r\n    daysLeft: 15,\r\n    image: \"blockchain\",\r\n    status: \"active\",\r\n    goal: 5000,\r\n    progress: 50,\r\n    bonusPercent: 8,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Web3 Fintech Startup Hub (Blockchain R&D)\",\r\n    description: \"Blockchain-first innovation hub connecting students with startups to build DeFi rails, on-chain payments, and tokenized experiments.\",\r\n    category: \"Social\",\r\n    creator: \"Maria Lopez\",\r\n    totalStaked: 1800,\r\n    myStake: 150,\r\n    backers: 32,\r\n    stakers: 32,\r\n    daysLeft: 8,\r\n    image: \"community\",\r\n    status: \"active\",\r\n    goal: 3000,\r\n    progress: 60,\r\n    bonusPercent: 6,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Web3 Advanced Blockchain Mentorship\",\r\n    description: \"Specialized mentorship program where industry experts guide students in real DeFi and NFT projects.\",\r\n    category: \"Education\",\r\n    creator: \"Carlos Ruiz\",\r\n    totalStaked: 3200,\r\n    myStake: 0,\r\n    backers: 67,\r\n    stakers: 67,\r\n    daysLeft: 22,\r\n    image: \"tutoring\",\r\n    status: \"active\",\r\n    goal: 4000,\r\n    progress: 80,\r\n    bonusPercent: 11,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Web3 Green Campus: Renewable Energy On-chain\",\r\n    description: \"Renewable energy deployments with on-chain metering, transparent reporting, and tokenized incentives for sustainability.\",\r\n    category: \"Environment\",\r\n    creator: \"Ana Martinez\",\r\n    totalStaked: 1200,\r\n    myStake: 100,\r\n    backers: 28,\r\n    stakers: 28,\r\n    daysLeft: 5,\r\n    image: \"sustainability\",\r\n    status: \"ending\",\r\n    goal: 2000,\r\n    progress: 60,\r\n    bonusPercent: 5,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"Web3 AI & Blockchain Lab (DeAI)\",\r\n    description: \"Research lab exploring decentralized AI, verifiable data pipelines, and on-chain automation with real dApps.\",\r\n    category: \"Technology\",\r\n    creator: \"Prof. Rodriguez\",\r\n    totalStaked: 4500,\r\n    myStake: 300,\r\n    backers: 89,\r\n    stakers: 89,\r\n    daysLeft: 30,\r\n    image: \"ai-lab\",\r\n    status: \"active\",\r\n    goal: 6000,\r\n    progress: 75,\r\n    bonusPercent: 9,\r\n  },\r\n  {\r\n    id: 6,\r\n    title: \"Web3 Digital Library (On-chain IP)\",\r\n    description: \"Decentralized library with on-chain provenance, open licensing, and contributor rewards via smart contracts.\",\r\n    category: \"Education\",\r\n    creator: \"Central Library\",\r\n    totalStaked: 2800,\r\n    myStake: 0,\r\n    backers: 156,\r\n    stakers: 156,\r\n    daysLeft: 12,\r\n    image: \"digital-library\",\r\n    status: \"active\",\r\n    goal: 3500,\r\n    progress: 80,\r\n    bonusPercent: 7,\r\n  },\r\n];\r\n\r\n// Mock user stats\r\nexport const mockUserStats: UserStats = {\r\n  totalBalance: 1250,\r\n  activeStakes: 450,\r\n  reputation: 85,\r\n  totalProjects: 4,\r\n  totalRewards: 150,\r\n  rank: 15,\r\n};\r\n\r\n// Mock stakes\r\nexport const mockStakes: Stake[] = [\r\n  {\r\n    id: 1,\r\n    projectId: 1,\r\n    projectTitle: \"Blockchain Project\",\r\n    amount: 200,\r\n    date: \"2025-08-05\",\r\n    status: \"active\",\r\n  },\r\n  {\r\n    id: 2,\r\n    projectId: 2,\r\n    projectTitle: \"Student Community\",\r\n    amount: 150,\r\n    date: \"2025-08-03\",\r\n    status: \"active\",\r\n  },\r\n  {\r\n    id: 3,\r\n    projectId: 4,\r\n    projectTitle: \"Campus Sustainability\",\r\n    amount: 100,\r\n    date: \"2025-08-01\",\r\n    status: \"active\",\r\n  },\r\n  {\r\n    id: 4,\r\n    projectId: 5,\r\n    projectTitle: \"AI Laboratory\",\r\n    amount: 300,\r\n    date: \"2025-07-28\",\r\n    status: \"active\",\r\n  },\r\n];\r\n\r\n// Mock activity\r\nexport const mockActivity: Activity[] = [\r\n  {\r\n    id: 1,\r\n    type: \"stake\",\r\n    title: \"Stake in Blockchain Project\",\r\n    description: \"You staked $200 in the Blockchain project\",\r\n    date: \"2025-08-05\",\r\n    amount: 200,\r\n  },\r\n  {\r\n    id: 2,\r\n    type: \"reward\",\r\n    title: \"Reward earned\",\r\n    description: \"You earned $25 for your participation in Student Community\",\r\n    date: \"2025-08-04\",\r\n    amount: 25,\r\n  },\r\n  {\r\n    id: 3,\r\n    type: \"reputation_gained\",\r\n    title: \"Reputation increased\",\r\n    description: \"Your reputation increased to 85 points\",\r\n    date: \"2025-08-03\",\r\n  },\r\n  {\r\n    id: 4,\r\n    type: \"stake\",\r\n    title: \"Stake in Campus Sustainability\",\r\n    description: \"You staked $100 in the Sustainability project\",\r\n    date: \"2025-08-01\",\r\n    amount: 100,\r\n  },\r\n];\r\n\r\n// Categor√≠as de proyectos\r\nexport const projectCategories = [\r\n  \"Technology\",\r\n  \"Education\", \r\n  \"Social\",\r\n  \"Environment\",\r\n  \"Health\",\r\n  \"Arts\",\r\n  \"Sports\",\r\n];\r\n\r\n// Project statuses\r\nexport const projectStatuses = {\r\n  active: \"Active\",\r\n  completed: \"Completed\",\r\n  ending: \"Ending\",\r\n};\r\n\r\n\r\n"],"names":[],"mappings":"AAAA,wBAAwB;AACxB,uCAAuC;;;;;;;;;AAiDhC,MAAM,eAA0B;IACrC;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,UAAU;QACV,SAAS;QACT,aAAa;QACb,SAAS;QACT,SAAS;QACT,SAAS;QACT,UAAU;QACV,OAAO;QACP,QAAQ;QACR,MAAM;QACN,UAAU;QACV,cAAc;IAChB;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,UAAU;QACV,SAAS;QACT,aAAa;QACb,SAAS;QACT,SAAS;QACT,SAAS;QACT,UAAU;QACV,OAAO;QACP,QAAQ;QACR,MAAM;QACN,UAAU;QACV,cAAc;IAChB;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,UAAU;QACV,SAAS;QACT,aAAa;QACb,SAAS;QACT,SAAS;QACT,SAAS;QACT,UAAU;QACV,OAAO;QACP,QAAQ;QACR,MAAM;QACN,UAAU;QACV,cAAc;IAChB;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,UAAU;QACV,SAAS;QACT,aAAa;QACb,SAAS;QACT,SAAS;QACT,SAAS;QACT,UAAU;QACV,OAAO;QACP,QAAQ;QACR,MAAM;QACN,UAAU;QACV,cAAc;IAChB;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,UAAU;QACV,SAAS;QACT,aAAa;QACb,SAAS;QACT,SAAS;QACT,SAAS;QACT,UAAU;QACV,OAAO;QACP,QAAQ;QACR,MAAM;QACN,UAAU;QACV,cAAc;IAChB;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,UAAU;QACV,SAAS;QACT,aAAa;QACb,SAAS;QACT,SAAS;QACT,SAAS;QACT,UAAU;QACV,OAAO;QACP,QAAQ;QACR,MAAM;QACN,UAAU;QACV,cAAc;IAChB;CACD;AAGM,MAAM,gBAA2B;IACtC,cAAc;IACd,cAAc;IACd,YAAY;IACZ,eAAe;IACf,cAAc;IACd,MAAM;AACR;AAGO,MAAM,aAAsB;IACjC;QACE,IAAI;QACJ,WAAW;QACX,cAAc;QACd,QAAQ;QACR,MAAM;QACN,QAAQ;IACV;IACA;QACE,IAAI;QACJ,WAAW;QACX,cAAc;QACd,QAAQ;QACR,MAAM;QACN,QAAQ;IACV;IACA;QACE,IAAI;QACJ,WAAW;QACX,cAAc;QACd,QAAQ;QACR,MAAM;QACN,QAAQ;IACV;IACA;QACE,IAAI;QACJ,WAAW;QACX,cAAc;QACd,QAAQ;QACR,MAAM;QACN,QAAQ;IACV;CACD;AAGM,MAAM,eAA2B;IACtC;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,aAAa;QACb,MAAM;QACN,QAAQ;IACV;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,aAAa;QACb,MAAM;QACN,QAAQ;IACV;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,aAAa;QACb,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,aAAa;QACb,MAAM;QACN,QAAQ;IACV;CACD;AAGM,MAAM,oBAAoB;IAC/B;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAGM,MAAM,kBAAkB;IAC7B,QAAQ;IACR,WAAW;IACX,QAAQ;AACV","debugId":null}},
    {"offset": {"line": 667, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/contexts/AppContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { useWallet } from '@/hooks/useWallet';\r\nimport { useAttestation, useUser } from '@/hooks/useApi';\r\nimport { stellarService } from '@/lib/stellar';\r\n\r\n// Types\r\ninterface User {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  avatar: string;\r\n  university: string;\r\n  reputation: number;\r\n  reputationLevel: 'Bronze' | 'Silver' | 'Gold' | 'Platinum';\r\n  totalBalance: number;\r\n  activeStakes: number;\r\n  totalProjects: number;\r\n  totalRewards: number;\r\n  memberSince: string;\r\n}\r\n\r\ninterface WalletState {\r\n  isConnected: boolean;\r\n  publicKey: string | null;\r\n  balance: any | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n}\r\n\r\ninterface Project {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  creator: string;\r\n  category: string;\r\n  totalStaked: number;\r\n  targetAmount: number;\r\n  progress: number;\r\n  stakers: number;\r\n  daysLeft: number;\r\n  status: 'active' | 'funded' | 'completed' | 'cancelled';\r\n  myStake: number;\r\n  image?: string;\r\n  tags: string[];\r\n  bonusPercent: number;\r\n}\r\n\r\ninterface Activity {\r\n  id: string;\r\n  type: 'stake' | 'reward' | 'reputation_gained' | 'project_completed' | 'wallet_connected';\r\n  title: string;\r\n  description: string;\r\n  amount?: number;\r\n  date: string;\r\n  projectId?: string;\r\n}\r\n\r\ninterface AppState {\r\n  user: User | null;\r\n  wallet: WalletState;\r\n  projects: Project[];\r\n  myStakedProjects: Project[];\r\n  activities: Activity[];\r\n  notifications: number;\r\n  isLoading: boolean;\r\n  currentPage: string;\r\n}\r\n\r\ninterface AppContextType {\r\n  state: AppState;\r\n  connectWallet: () => Promise<void>;\r\n  disconnectWallet: () => void;\r\n  makeStake: (projectId: string, amount: number) => Promise<void>;\r\n  updateUserProfile: (updates: Partial<User>) => void;\r\n  addActivity: (activity: Omit<Activity, 'id' | 'date'>) => void;\r\n  setCurrentPage: (page: string) => void;\r\n  clearNotifications: () => void;\r\n}\r\n\r\n// Mock Data\r\nconst mockUser: User = {\r\n  id: '1',\r\n  name: 'Kaream Badillo',\r\n  email: 'kaream@university.edu',\r\n  avatar: 'KB',\r\n  university: 'Universidad Nacional',\r\n  reputation: 85,\r\n  reputationLevel: 'Bronze',\r\n  totalBalance: 1250,\r\n  activeStakes: 450,\r\n  totalProjects: 4,\r\n  totalRewards: 150,\r\n  memberSince: '2025-01-15',\r\n};\r\n\r\nimport { mockProjects } from '@/lib/mockData';\r\n\r\nconst realProjects: Project[] = mockProjects.map(project => ({\r\n  id: project.id.toString(),\r\n  title: project.title,\r\n  description: project.description,\r\n  category: project.category,\r\n  creator: project.creator,\r\n  totalStaked: project.totalStaked,\r\n  targetAmount: project.goal,\r\n  progress: project.progress,\r\n  stakers: project.stakers,\r\n  daysLeft: project.daysLeft,\r\n  status: project.status === 'ending' ? 'active' : project.status,\r\n  myStake: project.myStake,\r\n  image: project.image,\r\n  tags: [project.category.toLowerCase()],\r\n  bonusPercent: project.bonusPercent,\r\n}));\r\n\r\n\r\nconst mockActivities: Activity[] = [\r\n  {\r\n    id: '1',\r\n    type: 'stake',\r\n    title: 'Nuevo stake realizado',\r\n    description: 'Stakeaste $500 en \"Blockchain Education Platform\"',\r\n    amount: 500,\r\n    date: '2025-01-15T10:30:00Z',\r\n    projectId: '1',\r\n  },\r\n  {\r\n    id: '2',\r\n    type: 'reputation_gained',\r\n    title: 'Reputaci√≥n aumentada',\r\n    description: 'Ganaste 50 puntos de reputaci√≥n por tu participaci√≥n',\r\n    amount: 50,\r\n    date: '2025-01-14T15:45:00Z',\r\n  },\r\n  {\r\n    id: '3',\r\n    type: 'reward',\r\n    title: 'Recompensa recibida',\r\n    description: 'Recibiste $25 por tu participaci√≥n en \"Fintech Startup Hub\"',\r\n    amount: 25,\r\n    date: '2025-01-13T09:20:00Z',\r\n    projectId: '2',\r\n  },\r\n  {\r\n    id: '4',\r\n    type: 'project_completed',\r\n    title: 'Proyecto completado',\r\n    description: 'El proyecto \"Blockchain Education\" alcanz√≥ su meta',\r\n    date: '2025-01-10T14:15:00Z',\r\n    projectId: '1',\r\n  },\r\n];\r\n\r\n// Create Context\r\nconst AppContext = createContext<AppContextType | undefined>(undefined);\r\n\r\n// Provider Component\r\nexport function AppProvider({ children }: { children: ReactNode }) {\r\n  const [state, setState] = useState<AppState>({\r\n    user: mockUser,\r\n    wallet: {\r\n      isConnected: false,\r\n      publicKey: null,\r\n      balance: null,\r\n      isLoading: false,\r\n      error: null,\r\n    },\r\n    projects: realProjects,\r\n    myStakedProjects: realProjects.filter(p => p.myStake > 0),\r\n    activities: mockActivities,\r\n    notifications: 3,\r\n    isLoading: false,\r\n    currentPage: '/',\r\n  });\r\n\r\n  // Use the useWallet hook to get real wallet state\r\n  const walletHook = useWallet();\r\n\r\n  // Sync wallet state from useWallet hook\r\n  useEffect(() => {\r\n    console.log('üîÑ AppContext: Syncing wallet state from useWallet hook');\r\n    console.log('üìä useWallet state:', {\r\n      isConnected: walletHook.isConnected,\r\n      publicKey: walletHook.publicKey,\r\n      balance: walletHook.balance,\r\n      isLoading: walletHook.isLoading,\r\n      error: walletHook.error\r\n    });\r\n    \r\n    setState(prev => ({\r\n      ...prev,\r\n      wallet: {\r\n        isConnected: walletHook.isConnected,\r\n        publicKey: walletHook.publicKey,\r\n        balance: walletHook.balance,\r\n        isLoading: walletHook.isLoading,\r\n        error: walletHook.error,\r\n      },\r\n    }));\r\n  }, [walletHook.isConnected, walletHook.publicKey, walletHook.balance, walletHook.isLoading, walletHook.error]);\r\n\r\n  // Connect Wallet\r\n  const connectWallet = async () => {\r\n    // En modo demo o producci√≥n sin variables de entorno, simular conexi√≥n exitosa sin llamar a Freighter\r\n    if (process.env.NEXT_PUBLIC_DEV_WALLET_MOCK === 'true' || \r\n        process.env.NODE_ENV === 'development' ||\r\n        !process.env.NEXT_PUBLIC_READONLY_PUBLIC_KEY ||\r\n        process.env.NEXT_PUBLIC_READONLY_PUBLIC_KEY === '<TU_PUBLIC_KEY_G...>') {\r\n      console.log('Demo mode: Simulating successful wallet connection');\r\n      setState(prev => ({\r\n        ...prev,\r\n        wallet: {\r\n          isConnected: true,\r\n          publicKey: \"GDEMO1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\r\n          balance: { USDC: 1000, XLM: 500 },\r\n          isLoading: false,\r\n          error: null,\r\n        },\r\n      }));\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      await walletHook.connectWallet();\r\n    } catch (error) {\r\n      console.error('Wallet connection error:', error);\r\n      // Fallback para modo demo si no est√° configurado\r\n      console.log('Demo mode: Simulating successful wallet connection');\r\n      setState(prev => ({\r\n        ...prev,\r\n        wallet: {\r\n          isConnected: true,\r\n          publicKey: \"GDEMO1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\r\n          balance: { USDC: 1000, XLM: 500 },\r\n          isLoading: false,\r\n          error: null,\r\n        },\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Disconnect Wallet\r\n  const disconnectWallet = () => {\r\n    walletHook.disconnectWallet();\r\n  };\r\n\r\n  // Make Stake\r\n  const makeStake = async (projectId: string, amount: number) => {\r\n    // En modo demo, no requerir wallet conectada\r\n    if (!state.wallet.isConnected && !state.wallet.publicKey) {\r\n      console.log('Demo mode: Simulating stake without wallet connection');\r\n    }\r\n\r\n    setState(prev => ({ ...prev, isLoading: true }));\r\n    \r\n    try {\r\n      // Create blockchain transaction with error handling\r\n      let transactionResult = null;\r\n      try {\r\n        const transactionXDR = await stellarService.createStakingTransaction(amount, projectId);\r\n        transactionResult = await stellarService.signAndSubmitTransaction(transactionXDR);\r\n      } catch (stellarError) {\r\n        console.error('Stellar transaction error:', stellarError);\r\n        // Continue with mock transaction for UI purposes\r\n        transactionResult = { hash: `mock_${Date.now()}` };\r\n      }\r\n      \r\n      // Update project statistics\r\n      const updatedProjects = state.projects.map(project => \r\n        project.id === projectId \r\n          ? { \r\n              ...project, \r\n              totalStaked: project.totalStaked + amount,\r\n              progress: Math.min(100, ((project.totalStaked + amount) / project.targetAmount) * 100),\r\n              stakers: project.stakers + 1,\r\n              myStake: project.myStake + amount,\r\n            }\r\n          : project\r\n      );\r\n\r\n      // Update user balance (solo si hay usuario)\r\n      const updatedUser = state.user ? {\r\n        ...state.user,\r\n        totalBalance: Math.max(0, state.user.totalBalance - amount),\r\n        activeStakes: state.user.activeStakes + amount,\r\n        totalProjects: state.user.totalProjects + 1, // Incrementar proyectos respaldados\r\n      } : null;\r\n\r\n      setState(prev => ({\r\n        ...prev,\r\n        projects: updatedProjects,\r\n        myStakedProjects: updatedProjects.filter(p => p.myStake > 0),\r\n        user: updatedUser,\r\n        isLoading: false,\r\n      }));\r\n\r\n      // Add activity\r\n      const project = state.projects.find(p => p.id === projectId);\r\n      addActivity({\r\n        type: 'stake',\r\n        title: 'Nuevo stake realizado',\r\n        description: `Stakeaste $${amount.toFixed(2)} en \"${project?.title}\"`,\r\n        amount,\r\n        projectId,\r\n      });\r\n\r\n      console.log(`‚úÖ Stake simulado: $${amount.toFixed(2)} para proyecto ${projectId}`);\r\n    } catch (error) {\r\n      console.error('Staking error:', error);\r\n      setState(prev => ({ ...prev, isLoading: false }));\r\n      // Don't throw error, just log it\r\n      console.warn('Staking failed but UI continues:', error);\r\n    }\r\n  };\r\n\r\n  // Update User Profile\r\n  const updateUserProfile = (updates: Partial<User>) => {\r\n    if (state.user) {\r\n      setState(prev => ({\r\n        ...prev,\r\n        user: { ...prev.user!, ...updates },\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Add Activity\r\n  const addActivity = (activity: Omit<Activity, 'id' | 'date'>) => {\r\n    const newActivity: Activity = {\r\n      ...activity,\r\n      id: Date.now().toString(),\r\n      date: new Date().toISOString(),\r\n    };\r\n\r\n    setState(prev => ({\r\n      ...prev,\r\n      activities: [newActivity, ...prev.activities],\r\n      notifications: prev.notifications + 1,\r\n    }));\r\n  };\r\n\r\n  // Set Current Page\r\n  const setCurrentPage = (page: string) => {\r\n    setState(prev => ({ ...prev, currentPage: page }));\r\n  };\r\n\r\n  // Clear Notifications\r\n  const clearNotifications = () => {\r\n    setState(prev => ({ ...prev, notifications: 0 }));\r\n  };\r\n\r\n  const value: AppContextType = {\r\n    state,\r\n    connectWallet,\r\n    disconnectWallet,\r\n    makeStake,\r\n    updateUserProfile,\r\n    addActivity,\r\n    setCurrentPage,\r\n    clearNotifications,\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={value}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\n// Hook to use AppContext\r\nexport function useApp() {\r\n  const context = useContext(AppContext);\r\n  if (context === undefined) {\r\n    throw new Error('useApp must be used within an AppProvider');\r\n  }\r\n  return context;\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 989, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\r\nimport { twMerge } from \"tailwind-merge\";\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 1011, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/components/ui/Button.tsx"],"sourcesContent":["import React from 'react';\r\nimport { cn } from '@/lib/utils';\r\n\r\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  variant?: 'primary' | 'secondary' | 'outline' | 'ghost';\r\n  size?: 'sm' | 'md' | 'lg';\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant = 'primary', size = 'md', children, ...props }, ref) => {\r\n    const baseClasses = 'inline-flex items-center justify-center font-medium rounded-lg transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-stellarBlue';\r\n    \r\n    const variants = {\r\n      primary: 'btn-stellar',\r\n      secondary: 'bg-stellarPurple hover:bg-purple-600 text-white shadow-lg hover:shadow-xl',\r\n      outline: 'border-2 border-stellarBlue text-stellarBlue hover:bg-stellarBlue hover:text-white shadow-md hover:shadow-lg',\r\n      ghost: 'text-gray-600 hover:text-stellarBlue hover:bg-stellar-50',\r\n    };\r\n\r\n    const sizes = {\r\n      sm: 'px-3 py-1.5 text-sm',\r\n      md: 'px-4 py-2 text-base',\r\n      lg: 'px-6 py-3 text-lg',\r\n    };\r\n\r\n    return (\r\n      <button\r\n        className={cn(\r\n          baseClasses,\r\n          variants[variant],\r\n          sizes[size],\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </button>\r\n    );\r\n  }\r\n);\r\n\r\nButton.displayName = 'Button';\r\n\r\nexport default Button;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAQA,MAAM,uBAAS,6JAAA,CAAA,UAAK,CAAC,UAAU,MAC7B,QAAsE;QAArE,EAAE,SAAS,EAAE,UAAU,SAAS,EAAE,OAAO,IAAI,EAAE,QAAQ,EAAE,GAAG,OAAO;IAClE,MAAM,cAAc;IAEpB,MAAM,WAAW;QACf,SAAS;QACT,WAAW;QACX,SAAS;QACT,OAAO;IACT;IAEA,MAAM,QAAQ;QACZ,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IAEA,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EACV,aACA,QAAQ,CAAC,QAAQ,EACjB,KAAK,CAAC,KAAK,EACX;QAEF,KAAK;QACJ,GAAG,KAAK;kBAER;;;;;;AAGP;;AAGF,OAAO,WAAW,GAAG;uCAEN","debugId":null}},
    {"offset": {"line": 1060, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/karea/Documents/HACKATHONs/STELLAR/ahorrostellar/frontend/src/components/ui/ErrorBoundary.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { Component, ErrorInfo, ReactNode } from 'react';\r\nimport Button from './Button';\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n  fallback?: ReactNode;\r\n}\r\n\r\ninterface State {\r\n  hasError: boolean;\r\n  error?: Error;\r\n}\r\n\r\nexport class ErrorBoundary extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error): State {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    console.error('ErrorBoundary caught an error:', error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      if (this.props.fallback) {\r\n        return this.props.fallback;\r\n      }\r\n\r\n      return (\r\n        <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-stellar-50 to-white\">\r\n          <div className=\"text-center p-8\">\r\n            <div className=\"w-20 h-20 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-6\">\r\n              <svg className=\"w-10 h-10 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />\r\n              </svg>\r\n            </div>\r\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\r\n              Algo sali√≥ mal\r\n            </h2>\r\n            <p className=\"text-gray-600 mb-6 max-w-md\">\r\n              Ha ocurrido un error inesperado. Por favor, recarga la p√°gina o contacta al soporte si el problema persiste.\r\n            </p>\r\n            <div className=\"space-x-4\">\r\n              <Button\r\n                onClick={() => window.location.reload()}\r\n                variant=\"primary\"\r\n              >\r\n                Recargar p√°gina\r\n              </Button>\r\n              <Button\r\n                onClick={() => this.setState({ hasError: false })}\r\n                variant=\"outline\"\r\n              >\r\n                Intentar de nuevo\r\n              </Button>\r\n            </div>\r\n            {process.env.NODE_ENV === 'development' && this.state.error && (\r\n              <details className=\"mt-6 text-left\">\r\n                <summary className=\"cursor-pointer text-sm text-gray-500\">\r\n                  Detalles del error (solo desarrollo)\r\n                </summary>\r\n                <pre className=\"mt-2 p-4 bg-gray-100 rounded text-xs overflow-auto\">\r\n                  {this.state.error.toString()}\r\n                </pre>\r\n              </details>\r\n            )}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AA+Da;;AA7Db;AACA;AAHA;;;;AAeO,MAAM,sBAAsB,6JAAA,CAAA,YAAS;IAM1C,OAAO,yBAAyB,KAAY,EAAS;QACnD,OAAO;YAAE,UAAU;YAAM;QAAM;IACjC;IAEA,kBAAkB,KAAY,EAAE,SAAoB,EAAE;QACpD,QAAQ,KAAK,CAAC,kCAAkC,OAAO;IACzD;IAEA,SAAS;QACP,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;YACvB,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACvB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;YAC5B;YAEA,qBACE,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;gCAAyB,MAAK;gCAAO,QAAO;gCAAe,SAAQ;0CAChF,cAAA,6LAAC;oCAAK,eAAc;oCAAQ,gBAAe;oCAAQ,aAAa;oCAAG,GAAE;;;;;;;;;;;;;;;;sCAGzE,6LAAC;4BAAG,WAAU;sCAAwC;;;;;;sCAGtD,6LAAC;4BAAE,WAAU;sCAA8B;;;;;;sCAG3C,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,iJAAA,CAAA,UAAM;oCACL,SAAS,IAAM,OAAO,QAAQ,CAAC,MAAM;oCACrC,SAAQ;8CACT;;;;;;8CAGD,6LAAC,iJAAA,CAAA,UAAM;oCACL,SAAS,IAAM,IAAI,CAAC,QAAQ,CAAC;4CAAE,UAAU;wCAAM;oCAC/C,SAAQ;8CACT;;;;;;;;;;;;wBAIF,oDAAyB,iBAAiB,IAAI,CAAC,KAAK,CAAC,KAAK,kBACzD,6LAAC;4BAAQ,WAAU;;8CACjB,6LAAC;oCAAQ,WAAU;8CAAuC;;;;;;8CAG1D,6LAAC;oCAAI,WAAU;8CACZ,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ;;;;;;;;;;;;;;;;;;;;;;;QAOxC;QAEA,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;IAC5B;IA/DA,YAAY,KAAY,CAAE;QACxB,KAAK,CAAC;QACN,IAAI,CAAC,KAAK,GAAG;YAAE,UAAU;QAAM;IACjC;AA6DF","debugId":null}}]
}